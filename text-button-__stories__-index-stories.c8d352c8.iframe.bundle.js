"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[6656],{"./src/text-button/__stories__/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DifferentColors:()=>DifferentColors,DifferentSizes:()=>DifferentSizes,DifferentStates:()=>DifferentStates,IconEnd:()=>IconEnd,IconOnly:()=>IconOnly,IconStart:()=>IconStart,Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/text-button/index.ts"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_sima_land_ui_nucleons_colors__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/colors/index.ts"),_sima_land_ui_quarks_icons_16x16_Filled_Share__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@sima-land/ui-quarks/dist/esm/icons/16x16/Filled/Share.js"),_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@sima-land/ui-quarks/dist/esm/icons/24x24/Stroked/ShareAndroid.js"),_storybook_utils__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./.storybook/utils.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"common/TextButton",component:_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,parameters:{storySource:{source:"import { TextButton, TextButtonSize, TextButtonColor } from '@sima-land/ui-nucleons/text-button';\nimport { useState } from 'react';\nimport { COLORS } from '@sima-land/ui-nucleons/colors';\nimport ShareSVG from '@sima-land/ui-quarks/icons/16x16/Filled/Share';\nimport ShareAndroidSVG from '@sima-land/ui-quarks/icons/24x24/Stroked/ShareAndroid';\nimport { Sandbox } from '../../../.storybook/utils';\n\nexport default {\n  title: 'common/TextButton',\n  component: TextButton,\n  parameters: {\n    layout: 'padded',\n  },\n};\n\nexport function Primary() {\n  const onClick = () => {\n    alert('Да тут и настраивать нечего...');\n  };\n\n  return <TextButton onClick={onClick}>Настроить</TextButton>;\n}\n\nPrimary.storyName = 'Простой пример';\n\nexport function DifferentColors() {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n      <TextButton color='basic-blue'>basic-blue</TextButton>\n      <TextButton color='basic-gray87'>basic-gray87</TextButton>\n      <TextButton color='basic-gray38'>basic-gray38</TextButton>\n      <TextButton color='additional-red'>additional-red</TextButton>\n      <TextButton color='additional-teal'>additional-teal</TextButton>\n    </div>\n  );\n}\n\nDifferentColors.storyName = 'Варианты цветов';\n\nexport function DifferentSizes() {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n      <TextButton size='s'>Просто кнопка</TextButton>\n      <TextButton size='m'>Просто кнопка</TextButton>\n    </div>\n  );\n}\n\nDifferentSizes.storyName = 'Варианты размеров';\n\nexport function IconStart() {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n      <TextButton size='s' startIcon={ShareSVG}>\n        Поделиться\n      </TextButton>\n      <TextButton size='m' startIcon={ShareAndroidSVG}>\n        Поделиться\n      </TextButton>\n    </div>\n  );\n}\n\nIconStart.storyName = 'Иконка в начале';\n\nexport function IconEnd() {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n      <TextButton size='s' endIcon={ShareSVG}>\n        Поделиться\n      </TextButton>\n      <TextButton size='m' endIcon={ShareAndroidSVG}>\n        Поделиться\n      </TextButton>\n    </div>\n  );\n}\n\nIconEnd.storyName = 'Иконка в конце';\n\nexport function IconOnly() {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n      <TextButton size='s'>\n        <ShareSVG fill='currentColor' />\n      </TextButton>\n      <TextButton size='m'>\n        <ShareAndroidSVG fill='currentColor' />\n      </TextButton>\n    </div>\n  );\n}\n\nIconOnly.storyName = 'Только иконка';\n\nexport function DifferentStates() {\n  const [size, setSize] = useState<TextButtonSize>('m');\n  const [color, setColor] = useState<TextButtonColor>('basic-blue');\n  const [state, setState] = useState<string>('default');\n  const [asLink, setAsLink] = useState<boolean>(false);\n  const [iconPos, setIconPos] = useState<string>('end');\n  const [underline, setUnderline] = useState<boolean>(false);\n\n  const IconSVG = size === 's' ? ShareSVG : ShareAndroidSVG;\n\n  return (\n    <Sandbox\n      controls={[\n        {\n          type: 'select',\n          label: 'Размер',\n          bind: [size, setSize],\n          options: [\n            { value: 's', displayName: 'S' },\n            { value: 'm', displayName: 'M' },\n          ],\n        },\n        {\n          type: 'select',\n          label: 'Цвет',\n          bind: [color, setColor],\n          options: [\n            'basic-blue',\n            'basic-gray87',\n            'basic-gray38',\n            'additional-red',\n            'additional-teal',\n            'basic-white',\n          ],\n        },\n        {\n          type: 'select',\n          label: 'Иконка',\n          bind: [iconPos, setIconPos],\n          options: [\n            { value: 'start', displayName: 'В начале' },\n            { value: 'end', displayName: 'В конце' },\n            { value: 'none', displayName: 'Нет' },\n          ],\n        },\n        {\n          type: 'select',\n          label: 'Состояние',\n          bind: [state, setState],\n          options: [\n            { value: 'default', displayName: 'По умолчанию' },\n            { value: 'disabled', displayName: 'Отключено' },\n          ],\n        },\n        {\n          type: 'toggle',\n          label: 'Подчеркивание',\n          bind: [underline, setUnderline],\n        },\n        {\n          type: 'toggle',\n          label: 'Ссылка',\n          bind: [asLink, setAsLink],\n        },\n      ]}\n      areaStyle={{\n        background: color === 'basic-white' ? COLORS.get('basic-gray87') : undefined,\n      }}\n    >\n      <TextButton\n        size={size}\n        color={color}\n        underline={underline}\n        disabled={state === 'disabled'}\n        iconGutter={size === 's' ? 4 : 8}\n        startIcon={iconPos === 'start' ? IconSVG : undefined}\n        endIcon={iconPos === 'end' ? IconSVG : undefined}\n        onClick={() => {\n          !asLink && alert('Ничего не изменилось');\n        }}\n        {...(asLink && {\n          as: 'anchor',\n          href: 'https://www.sima-land.ru',\n          target: '_blank',\n        })}\n      >\n        Поделиться\n      </TextButton>\n    </Sandbox>\n  );\n}\n\nDifferentStates.storyName = 'Различные состояния';\n",locationsMap:{primary:{startLoc:{col:7,line:16},endLoc:{col:1,line:22},startBody:{col:7,line:16},endBody:{col:1,line:22}},"different-colors":{startLoc:{col:7,line:26},endLoc:{col:1,line:36},startBody:{col:7,line:26},endBody:{col:1,line:36}},"different-sizes":{startLoc:{col:7,line:40},endLoc:{col:1,line:47},startBody:{col:7,line:40},endBody:{col:1,line:47}},"icon-start":{startLoc:{col:7,line:51},endLoc:{col:1,line:62},startBody:{col:7,line:51},endBody:{col:1,line:62}},"icon-end":{startLoc:{col:7,line:66},endLoc:{col:1,line:77},startBody:{col:7,line:66},endBody:{col:1,line:77}},"icon-only":{startLoc:{col:7,line:81},endLoc:{col:1,line:92},startBody:{col:7,line:81},endBody:{col:1,line:92}},"different-states":{startLoc:{col:7,line:96},endLoc:{col:1,line:186},startBody:{col:7,line:96},endBody:{col:1,line:186}}}},layout:"padded"}},Primary=function Primary(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{onClick:()=>{alert("Да тут и настраивать нечего...")},children:"Настроить"})};Primary.storyName="Простой пример";const DifferentColors=function DifferentColors(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{color:"basic-blue",children:"basic-blue"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{color:"basic-gray87",children:"basic-gray87"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{color:"basic-gray38",children:"basic-gray38"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{color:"additional-red",children:"additional-red"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{color:"additional-teal",children:"additional-teal"})]})};DifferentColors.storyName="Варианты цветов";const DifferentSizes=function DifferentSizes(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"s",children:"Просто кнопка"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"m",children:"Просто кнопка"})]})};DifferentSizes.storyName="Варианты размеров";const IconStart=function IconStart(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"s",startIcon:_sima_land_ui_quarks_icons_16x16_Filled_Share__WEBPACK_IMPORTED_MODULE_3__.Z,children:"Поделиться"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"m",startIcon:_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_4__.Z,children:"Поделиться"})]})};IconStart.storyName="Иконка в начале";const IconEnd=function IconEnd(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"s",endIcon:_sima_land_ui_quarks_icons_16x16_Filled_Share__WEBPACK_IMPORTED_MODULE_3__.Z,children:"Поделиться"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"m",endIcon:_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_4__.Z,children:"Поделиться"})]})};IconEnd.storyName="Иконка в конце";const IconOnly=function IconOnly(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"s",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_quarks_icons_16x16_Filled_Share__WEBPACK_IMPORTED_MODULE_3__.Z,{fill:"currentColor"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"m",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_4__.Z,{fill:"currentColor"})})]})};IconOnly.storyName="Только иконка";const DifferentStates=function DifferentStates(){const[size,setSize]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("m"),[color,setColor]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("basic-blue"),[state,setState]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("default"),[asLink,setAsLink]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[iconPos,setIconPos]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("end"),[underline,setUnderline]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),IconSVG="s"===size?_sima_land_ui_quarks_icons_16x16_Filled_Share__WEBPACK_IMPORTED_MODULE_3__.Z:_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_4__.Z;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_storybook_utils__WEBPACK_IMPORTED_MODULE_5__.pv,{controls:[{type:"select",label:"Размер",bind:[size,setSize],options:[{value:"s",displayName:"S"},{value:"m",displayName:"M"}]},{type:"select",label:"Цвет",bind:[color,setColor],options:["basic-blue","basic-gray87","basic-gray38","additional-red","additional-teal","basic-white"]},{type:"select",label:"Иконка",bind:[iconPos,setIconPos],options:[{value:"start",displayName:"В начале"},{value:"end",displayName:"В конце"},{value:"none",displayName:"Нет"}]},{type:"select",label:"Состояние",bind:[state,setState],options:[{value:"default",displayName:"По умолчанию"},{value:"disabled",displayName:"Отключено"}]},{type:"toggle",label:"Подчеркивание",bind:[underline,setUnderline]},{type:"toggle",label:"Ссылка",bind:[asLink,setAsLink]}],areaStyle:{background:"basic-white"===color?_sima_land_ui_nucleons_colors__WEBPACK_IMPORTED_MODULE_2__.D.get("basic-gray87"):void 0},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size,color,underline,disabled:"disabled"===state,iconGutter:"s"===size?4:8,startIcon:"start"===iconPos?IconSVG:void 0,endIcon:"end"===iconPos?IconSVG:void 0,onClick:()=>{!asLink&&alert("Ничего не изменилось")},...asLink&&{as:"anchor",href:"https://www.sima-land.ru",target:"_blank"},children:"Поделиться"})})};DifferentStates.storyName="Различные состояния",Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"function Primary() {\n  const onClick = () => {\n    alert('Да тут и настраивать нечего...');\n  };\n  return <TextButton onClick={onClick}>Настроить</TextButton>;\n}",...Primary.parameters?.docs?.source}}},DifferentColors.parameters={...DifferentColors.parameters,docs:{...DifferentColors.parameters?.docs,source:{originalSource:"function DifferentColors() {\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  }}>\n      <TextButton color='basic-blue'>basic-blue</TextButton>\n      <TextButton color='basic-gray87'>basic-gray87</TextButton>\n      <TextButton color='basic-gray38'>basic-gray38</TextButton>\n      <TextButton color='additional-red'>additional-red</TextButton>\n      <TextButton color='additional-teal'>additional-teal</TextButton>\n    </div>;\n}",...DifferentColors.parameters?.docs?.source}}},DifferentSizes.parameters={...DifferentSizes.parameters,docs:{...DifferentSizes.parameters?.docs,source:{originalSource:"function DifferentSizes() {\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  }}>\n      <TextButton size='s'>Просто кнопка</TextButton>\n      <TextButton size='m'>Просто кнопка</TextButton>\n    </div>;\n}",...DifferentSizes.parameters?.docs?.source}}},IconStart.parameters={...IconStart.parameters,docs:{...IconStart.parameters?.docs,source:{originalSource:"function IconStart() {\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  }}>\n      <TextButton size='s' startIcon={ShareSVG}>\n        Поделиться\n      </TextButton>\n      <TextButton size='m' startIcon={ShareAndroidSVG}>\n        Поделиться\n      </TextButton>\n    </div>;\n}",...IconStart.parameters?.docs?.source}}},IconEnd.parameters={...IconEnd.parameters,docs:{...IconEnd.parameters?.docs,source:{originalSource:"function IconEnd() {\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  }}>\n      <TextButton size='s' endIcon={ShareSVG}>\n        Поделиться\n      </TextButton>\n      <TextButton size='m' endIcon={ShareAndroidSVG}>\n        Поделиться\n      </TextButton>\n    </div>;\n}",...IconEnd.parameters?.docs?.source}}},IconOnly.parameters={...IconOnly.parameters,docs:{...IconOnly.parameters?.docs,source:{originalSource:"function IconOnly() {\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  }}>\n      <TextButton size='s'>\n        <ShareSVG fill='currentColor' />\n      </TextButton>\n      <TextButton size='m'>\n        <ShareAndroidSVG fill='currentColor' />\n      </TextButton>\n    </div>;\n}",...IconOnly.parameters?.docs?.source}}},DifferentStates.parameters={...DifferentStates.parameters,docs:{...DifferentStates.parameters?.docs,source:{originalSource:"function DifferentStates() {\n  const [size, setSize] = useState<TextButtonSize>('m');\n  const [color, setColor] = useState<TextButtonColor>('basic-blue');\n  const [state, setState] = useState<string>('default');\n  const [asLink, setAsLink] = useState<boolean>(false);\n  const [iconPos, setIconPos] = useState<string>('end');\n  const [underline, setUnderline] = useState<boolean>(false);\n  const IconSVG = size === 's' ? ShareSVG : ShareAndroidSVG;\n  return <Sandbox controls={[{\n    type: 'select',\n    label: 'Размер',\n    bind: [size, setSize],\n    options: [{\n      value: 's',\n      displayName: 'S'\n    }, {\n      value: 'm',\n      displayName: 'M'\n    }]\n  }, {\n    type: 'select',\n    label: 'Цвет',\n    bind: [color, setColor],\n    options: ['basic-blue', 'basic-gray87', 'basic-gray38', 'additional-red', 'additional-teal', 'basic-white']\n  }, {\n    type: 'select',\n    label: 'Иконка',\n    bind: [iconPos, setIconPos],\n    options: [{\n      value: 'start',\n      displayName: 'В начале'\n    }, {\n      value: 'end',\n      displayName: 'В конце'\n    }, {\n      value: 'none',\n      displayName: 'Нет'\n    }]\n  }, {\n    type: 'select',\n    label: 'Состояние',\n    bind: [state, setState],\n    options: [{\n      value: 'default',\n      displayName: 'По умолчанию'\n    }, {\n      value: 'disabled',\n      displayName: 'Отключено'\n    }]\n  }, {\n    type: 'toggle',\n    label: 'Подчеркивание',\n    bind: [underline, setUnderline]\n  }, {\n    type: 'toggle',\n    label: 'Ссылка',\n    bind: [asLink, setAsLink]\n  }]} areaStyle={{\n    background: color === 'basic-white' ? COLORS.get('basic-gray87') : undefined\n  }}>\n      <TextButton size={size} color={color} underline={underline} disabled={state === 'disabled'} iconGutter={size === 's' ? 4 : 8} startIcon={iconPos === 'start' ? IconSVG : undefined} endIcon={iconPos === 'end' ? IconSVG : undefined} onClick={() => {\n      !asLink && alert('Ничего не изменилось');\n    }} {...asLink && {\n      as: 'anchor',\n      href: 'https://www.sima-land.ru',\n      target: '_blank'\n    }}>\n        Поделиться\n      </TextButton>\n    </Sandbox>;\n}",...DifferentStates.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","DifferentColors","DifferentSizes","IconStart","IconEnd","IconOnly","DifferentStates"]}}]);