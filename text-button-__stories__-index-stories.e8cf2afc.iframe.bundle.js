"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[6656],{"./node_modules/@sima-land/ui-quarks/icons/16x16/Filled/Share.js":(__unused_webpack_module,exports,__webpack_require__)=>{const jsx_runtime_1=__webpack_require__("./node_modules/react/jsx-runtime.js"),ForwardRef=(0,__webpack_require__("./node_modules/react/index.js").forwardRef)(((props,ref)=>(0,jsx_runtime_1.jsx)("svg",{width:16,height:16,viewBox:"0 0 16 16",ref,...props,children:(0,jsx_runtime_1.jsx)("path",{d:"M12.5 6a2.5 2.5 0 1 0-2.497-2.37l-4.9 2.45a2.5 2.5 0 1 0 0 3.838l4.9 2.452a2.5 2.5 0 1 0 .894-1.789l-4.9-2.45a2.537 2.537 0 0 0 0-.261l4.9-2.45c.435.362.993.58 1.603.58Z"})})));exports.Z=ForwardRef},"./node_modules/@sima-land/ui-quarks/icons/24x24/Stroked/ShareAndroid.js":(__unused_webpack_module,exports,__webpack_require__)=>{const jsx_runtime_1=__webpack_require__("./node_modules/react/jsx-runtime.js"),ForwardRef=(0,__webpack_require__("./node_modules/react/index.js").forwardRef)(((props,ref)=>(0,jsx_runtime_1.jsxs)("svg",{width:24,height:24,viewBox:"0 0 24 24",ref,...props,children:[(0,jsx_runtime_1.jsx)("path",{fillRule:"evenodd",d:"M18 4a2.001 2.001 0 0 0 0 4 2.001 2.001 0 0 0 0-4Zm-4 2a4.001 4.001 0 0 1 8 0 4.001 4.001 0 0 1-8 0ZM5 10a2.001 2.001 0 0 0 0 4 2.001 2.001 0 0 0 0-4Zm-4 2a4.001 4.001 0 0 1 8 0 4.001 4.001 0 0 1-8 0ZM18 16a2.001 2.001 0 0 0 0 4 2.001 2.001 0 0 0 0-4Zm-4 2a4.001 4.001 0 0 1 8 0 4.001 4.001 0 0 1-8 0Z",clipRule:"evenodd"}),(0,jsx_runtime_1.jsx)("path",{fillRule:"evenodd",d:"m15.827 16.511-8.316-3.838-.838 1.816 8.316 3.838.838-1.816ZM15.827 7.489l-8.316 3.838-.838-1.816 8.316-3.838.838 1.816Z",clipRule:"evenodd"})]})));exports.Z=ForwardRef},"./src/text-button/__stories__/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DifferentColors:()=>DifferentColors,DifferentSizes:()=>DifferentSizes,DifferentStates:()=>DifferentStates,IconEnd:()=>IconEnd,IconStart:()=>IconStart,Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/text-button/index.tsx"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_sima_land_ui_nucleons_colors__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/colors/index.ts"),_sima_land_ui_quarks_icons_16x16_Filled_Share__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@sima-land/ui-quarks/icons/16x16/Filled/Share.js"),_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@sima-land/ui-quarks/icons/24x24/Stroked/ShareAndroid.js"),_storybook_utils__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./.storybook/utils.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"common/TextButton",component:_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,parameters:{storySource:{source:"import { TextButton, TextButtonSize, TextButtonColor } from '@sima-land/ui-nucleons/text-button';\nimport { useState } from 'react';\nimport { COLORS } from '@sima-land/ui-nucleons/colors';\nimport ShareSVG from '@sima-land/ui-quarks/icons/16x16/Filled/Share';\nimport ShareAndroidSVG from '@sima-land/ui-quarks/icons/24x24/Stroked/ShareAndroid';\nimport { Sandbox } from '../../../.storybook/utils';\nexport default {\n  title: 'common/TextButton',\n  component: TextButton,\n  parameters: {\n    layout: 'padded'\n  }\n};\nexport function Primary() {\n  const onClick = () => {\n    alert('Да тут и настраивать нечего...');\n  };\n  return <TextButton onClick={onClick}>Настроить</TextButton>;\n}\nPrimary.storyName = 'Простой пример';\nexport function DifferentColors() {\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  }}>\n      <TextButton color='basic-blue'>basic-blue</TextButton>\n      <TextButton color='basic-gray87'>basic-gray87</TextButton>\n      <TextButton color='basic-gray38'>basic-gray38</TextButton>\n      <TextButton color='additional-red'>additional-red</TextButton>\n      <TextButton color='additional-teal'>additional-teal</TextButton>\n    </div>;\n}\nDifferentColors.storyName = 'Варианты цветов';\nexport function DifferentSizes() {\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  }}>\n      <TextButton size='s'>Просто кнопка</TextButton>\n      <TextButton size='m'>Просто кнопка</TextButton>\n    </div>;\n}\nDifferentSizes.storyName = 'Варианты размеров';\nexport function IconStart() {\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  }}>\n      <TextButton size='s' startIcon={ShareSVG}>\n        Поделиться\n      </TextButton>\n      <TextButton size='m' startIcon={ShareAndroidSVG}>\n        Поделиться\n      </TextButton>\n    </div>;\n}\nIconStart.storyName = 'Иконка в начале';\nexport function IconEnd() {\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  }}>\n      <TextButton size='s' endIcon={ShareSVG}>\n        Поделиться\n      </TextButton>\n      <TextButton size='m' endIcon={ShareAndroidSVG}>\n        Поделиться\n      </TextButton>\n    </div>;\n}\nIconEnd.storyName = 'Иконка в конце';\nexport function DifferentStates() {\n  const [size, setSize] = useState<TextButtonSize>('m');\n  const [color, setColor] = useState<TextButtonColor>('basic-blue');\n  const [state, setState] = useState<string>('default');\n  const [asLink, setAsLink] = useState<boolean>(false);\n  const [iconPos, setIconPos] = useState<string>('end');\n  const [underline, setUnderline] = useState<boolean>(false);\n  const IconSVG = size === 's' ? ShareSVG : ShareAndroidSVG;\n  return <Sandbox controls={[{\n    type: 'select',\n    label: 'Размер',\n    bind: [size, setSize],\n    options: ['s', 'm']\n  }, {\n    type: 'select',\n    label: 'Цвет',\n    bind: [color, setColor],\n    options: ['basic-blue', 'basic-gray87', 'basic-gray38', 'additional-red', 'additional-teal', 'basic-white']\n  }, {\n    type: 'select',\n    label: 'Позиция иконки',\n    bind: [iconPos, setIconPos],\n    options: ['start', 'end', 'none']\n  }, {\n    type: 'select',\n    label: 'Состояние',\n    bind: [state, setState],\n    options: ['default', 'disabled']\n  }, {\n    type: 'toggle',\n    label: 'Подчеркивание',\n    bind: [underline, setUnderline]\n  }, {\n    type: 'toggle',\n    label: 'Ссылка',\n    bind: [asLink, setAsLink]\n  }]} areaStyle={{\n    background: color === 'basic-white' ? COLORS.get('basic-gray87') : undefined\n  }}>\n      <TextButton size={size} color={color} underline={underline} disabled={state === 'disabled'} iconGutter={size === 's' ? 4 : 8} startIcon={iconPos === 'start' ? IconSVG : undefined} endIcon={iconPos === 'end' ? IconSVG : undefined} onClick={() => {\n      !asLink && alert('Ничего не изменилось');\n    }} {...asLink && {\n      as: 'anchor',\n      href: 'https://www.sima-land.ru',\n      target: '_blank'\n    }}>\n        Поделиться\n      </TextButton>\n    </Sandbox>;\n}\nDifferentStates.storyName = 'Различные состояния';\nPrimary.parameters = {\n  ...Primary.parameters,\n  docs: {\n    ...Primary.parameters?.docs,\n    source: {\n      originalSource: \"function Primary() {\\n  const onClick = () => {\\n    alert('\\u0414\\u0430 \\u0442\\u0443\\u0442 \\u0438 \\u043D\\u0430\\u0441\\u0442\\u0440\\u0430\\u0438\\u0432\\u0430\\u0442\\u044C \\u043D\\u0435\\u0447\\u0435\\u0433\\u043E...');\\n  };\\n  return <TextButton onClick={onClick}>\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0438\\u0442\\u044C</TextButton>;\\n}\",\n      ...Primary.parameters?.docs?.source\n    }\n  }\n};\nDifferentColors.parameters = {\n  ...DifferentColors.parameters,\n  docs: {\n    ...DifferentColors.parameters?.docs,\n    source: {\n      originalSource: \"function DifferentColors() {\\n  return <div style={{\\n    display: 'flex',\\n    flexDirection: 'column',\\n    gap: '12px'\\n  }}>\\n      <TextButton color='basic-blue'>basic-blue</TextButton>\\n      <TextButton color='basic-gray87'>basic-gray87</TextButton>\\n      <TextButton color='basic-gray38'>basic-gray38</TextButton>\\n      <TextButton color='additional-red'>additional-red</TextButton>\\n      <TextButton color='additional-teal'>additional-teal</TextButton>\\n    </div>;\\n}\",\n      ...DifferentColors.parameters?.docs?.source\n    }\n  }\n};\nDifferentSizes.parameters = {\n  ...DifferentSizes.parameters,\n  docs: {\n    ...DifferentSizes.parameters?.docs,\n    source: {\n      originalSource: \"function DifferentSizes() {\\n  return <div style={{\\n    display: 'flex',\\n    flexDirection: 'column',\\n    gap: '12px'\\n  }}>\\n      <TextButton size='s'>\\u041F\\u0440\\u043E\\u0441\\u0442\\u043E \\u043A\\u043D\\u043E\\u043F\\u043A\\u0430</TextButton>\\n      <TextButton size='m'>\\u041F\\u0440\\u043E\\u0441\\u0442\\u043E \\u043A\\u043D\\u043E\\u043F\\u043A\\u0430</TextButton>\\n    </div>;\\n}\",\n      ...DifferentSizes.parameters?.docs?.source\n    }\n  }\n};\nIconStart.parameters = {\n  ...IconStart.parameters,\n  docs: {\n    ...IconStart.parameters?.docs,\n    source: {\n      originalSource: \"function IconStart() {\\n  return <div style={{\\n    display: 'flex',\\n    flexDirection: 'column',\\n    gap: '12px'\\n  }}>\\n      <TextButton size='s' startIcon={ShareSVG}>\\n        \\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F\\n      </TextButton>\\n      <TextButton size='m' startIcon={ShareAndroidSVG}>\\n        \\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F\\n      </TextButton>\\n    </div>;\\n}\",\n      ...IconStart.parameters?.docs?.source\n    }\n  }\n};\nIconEnd.parameters = {\n  ...IconEnd.parameters,\n  docs: {\n    ...IconEnd.parameters?.docs,\n    source: {\n      originalSource: \"function IconEnd() {\\n  return <div style={{\\n    display: 'flex',\\n    flexDirection: 'column',\\n    gap: '12px'\\n  }}>\\n      <TextButton size='s' endIcon={ShareSVG}>\\n        \\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F\\n      </TextButton>\\n      <TextButton size='m' endIcon={ShareAndroidSVG}>\\n        \\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F\\n      </TextButton>\\n    </div>;\\n}\",\n      ...IconEnd.parameters?.docs?.source\n    }\n  }\n};\nDifferentStates.parameters = {\n  ...DifferentStates.parameters,\n  docs: {\n    ...DifferentStates.parameters?.docs,\n    source: {\n      originalSource: \"function DifferentStates() {\\n  const [size, setSize] = useState<TextButtonSize>('m');\\n  const [color, setColor] = useState<TextButtonColor>('basic-blue');\\n  const [state, setState] = useState<string>('default');\\n  const [asLink, setAsLink] = useState<boolean>(false);\\n  const [iconPos, setIconPos] = useState<string>('end');\\n  const [underline, setUnderline] = useState<boolean>(false);\\n  const IconSVG = size === 's' ? ShareSVG : ShareAndroidSVG;\\n  return <Sandbox controls={[{\\n    type: 'select',\\n    label: '\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440',\\n    bind: [size, setSize],\\n    options: ['s', 'm']\\n  }, {\\n    type: 'select',\\n    label: '\\u0426\\u0432\\u0435\\u0442',\\n    bind: [color, setColor],\\n    options: ['basic-blue', 'basic-gray87', 'basic-gray38', 'additional-red', 'additional-teal', 'basic-white']\\n  }, {\\n    type: 'select',\\n    label: '\\u041F\\u043E\\u0437\\u0438\\u0446\\u0438\\u044F \\u0438\\u043A\\u043E\\u043D\\u043A\\u0438',\\n    bind: [iconPos, setIconPos],\\n    options: ['start', 'end', 'none']\\n  }, {\\n    type: 'select',\\n    label: '\\u0421\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435',\\n    bind: [state, setState],\\n    options: ['default', 'disabled']\\n  }, {\\n    type: 'toggle',\\n    label: '\\u041F\\u043E\\u0434\\u0447\\u0435\\u0440\\u043A\\u0438\\u0432\\u0430\\u043D\\u0438\\u0435',\\n    bind: [underline, setUnderline]\\n  }, {\\n    type: 'toggle',\\n    label: '\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430',\\n    bind: [asLink, setAsLink]\\n  }]} areaStyle={{\\n    background: color === 'basic-white' ? COLORS.get('basic-gray87') : undefined\\n  }}>\\n      <TextButton size={size} color={color} underline={underline} disabled={state === 'disabled'} iconGutter={size === 's' ? 4 : 8} startIcon={iconPos === 'start' ? IconSVG : undefined} endIcon={iconPos === 'end' ? IconSVG : undefined} onClick={() => {\\n      !asLink && alert('\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0438\\u043B\\u043E\\u0441\\u044C');\\n    }} {...asLink && {\\n      as: 'anchor',\\n      href: 'https://www.sima-land.ru',\\n      target: '_blank'\\n    }}>\\n        \\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F\\n      </TextButton>\\n    </Sandbox>;\\n}\",\n      ...DifferentStates.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{primary:{startLoc:{col:7,line:14},endLoc:{col:1,line:19},startBody:{col:7,line:14},endBody:{col:1,line:19}},"different-colors":{startLoc:{col:7,line:21},endLoc:{col:1,line:33},startBody:{col:7,line:21},endBody:{col:1,line:33}},"different-sizes":{startLoc:{col:7,line:35},endLoc:{col:1,line:44},startBody:{col:7,line:35},endBody:{col:1,line:44}},"icon-start":{startLoc:{col:7,line:46},endLoc:{col:1,line:59},startBody:{col:7,line:46},endBody:{col:1,line:59}},"icon-end":{startLoc:{col:7,line:61},endLoc:{col:1,line:74},startBody:{col:7,line:61},endBody:{col:1,line:74}},"different-states":{startLoc:{col:7,line:76},endLoc:{col:1,line:125},startBody:{col:7,line:76},endBody:{col:1,line:125}}}},layout:"padded"}},Primary=function Primary(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{onClick:()=>{alert("Да тут и настраивать нечего...")},children:"Настроить"})};Primary.displayName="Primary",Primary.storyName="Простой пример";const DifferentColors=function DifferentColors(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{color:"basic-blue",children:"basic-blue"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{color:"basic-gray87",children:"basic-gray87"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{color:"basic-gray38",children:"basic-gray38"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{color:"additional-red",children:"additional-red"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{color:"additional-teal",children:"additional-teal"})]})};DifferentColors.displayName="DifferentColors",DifferentColors.storyName="Варианты цветов";const DifferentSizes=function DifferentSizes(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"s",children:"Просто кнопка"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"m",children:"Просто кнопка"})]})};DifferentSizes.displayName="DifferentSizes",DifferentSizes.storyName="Варианты размеров";const IconStart=function IconStart(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"s",startIcon:_sima_land_ui_quarks_icons_16x16_Filled_Share__WEBPACK_IMPORTED_MODULE_3__.Z,children:"Поделиться"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"m",startIcon:_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_4__.Z,children:"Поделиться"})]})};IconStart.displayName="IconStart",IconStart.storyName="Иконка в начале";const IconEnd=function IconEnd(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"s",endIcon:_sima_land_ui_quarks_icons_16x16_Filled_Share__WEBPACK_IMPORTED_MODULE_3__.Z,children:"Поделиться"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size:"m",endIcon:_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_4__.Z,children:"Поделиться"})]})};IconEnd.displayName="IconEnd",IconEnd.storyName="Иконка в конце";const DifferentStates=function DifferentStates(){const[size,setSize]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("m"),[color,setColor]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("basic-blue"),[state,setState]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("default"),[asLink,setAsLink]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[iconPos,setIconPos]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("end"),[underline,setUnderline]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),IconSVG="s"===size?_sima_land_ui_quarks_icons_16x16_Filled_Share__WEBPACK_IMPORTED_MODULE_3__.Z:_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_4__.Z;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_storybook_utils__WEBPACK_IMPORTED_MODULE_5__.pv,{controls:[{type:"select",label:"Размер",bind:[size,setSize],options:["s","m"]},{type:"select",label:"Цвет",bind:[color,setColor],options:["basic-blue","basic-gray87","basic-gray38","additional-red","additional-teal","basic-white"]},{type:"select",label:"Позиция иконки",bind:[iconPos,setIconPos],options:["start","end","none"]},{type:"select",label:"Состояние",bind:[state,setState],options:["default","disabled"]},{type:"toggle",label:"Подчеркивание",bind:[underline,setUnderline]},{type:"toggle",label:"Ссылка",bind:[asLink,setAsLink]}],areaStyle:{background:"basic-white"===color?_sima_land_ui_nucleons_colors__WEBPACK_IMPORTED_MODULE_2__.D.get("basic-gray87"):void 0},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_sima_land_ui_nucleons_text_button__WEBPACK_IMPORTED_MODULE_0__.A,{size,color,underline,disabled:"disabled"===state,iconGutter:"s"===size?4:8,startIcon:"start"===iconPos?IconSVG:void 0,endIcon:"end"===iconPos?IconSVG:void 0,onClick:()=>{!asLink&&alert("Ничего не изменилось")},...asLink&&{as:"anchor",href:"https://www.sima-land.ru",target:"_blank"},children:"Поделиться"})})};DifferentStates.displayName="DifferentStates",DifferentStates.storyName="Различные состояния",Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"function Primary() {\n  const onClick = () => {\n    alert('Да тут и настраивать нечего...');\n  };\n  return <TextButton onClick={onClick}>Настроить</TextButton>;\n}",...Primary.parameters?.docs?.source}}},DifferentColors.parameters={...DifferentColors.parameters,docs:{...DifferentColors.parameters?.docs,source:{originalSource:"function DifferentColors() {\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  }}>\n      <TextButton color='basic-blue'>basic-blue</TextButton>\n      <TextButton color='basic-gray87'>basic-gray87</TextButton>\n      <TextButton color='basic-gray38'>basic-gray38</TextButton>\n      <TextButton color='additional-red'>additional-red</TextButton>\n      <TextButton color='additional-teal'>additional-teal</TextButton>\n    </div>;\n}",...DifferentColors.parameters?.docs?.source}}},DifferentSizes.parameters={...DifferentSizes.parameters,docs:{...DifferentSizes.parameters?.docs,source:{originalSource:"function DifferentSizes() {\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  }}>\n      <TextButton size='s'>Просто кнопка</TextButton>\n      <TextButton size='m'>Просто кнопка</TextButton>\n    </div>;\n}",...DifferentSizes.parameters?.docs?.source}}},IconStart.parameters={...IconStart.parameters,docs:{...IconStart.parameters?.docs,source:{originalSource:"function IconStart() {\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  }}>\n      <TextButton size='s' startIcon={ShareSVG}>\n        Поделиться\n      </TextButton>\n      <TextButton size='m' startIcon={ShareAndroidSVG}>\n        Поделиться\n      </TextButton>\n    </div>;\n}",...IconStart.parameters?.docs?.source}}},IconEnd.parameters={...IconEnd.parameters,docs:{...IconEnd.parameters?.docs,source:{originalSource:"function IconEnd() {\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  }}>\n      <TextButton size='s' endIcon={ShareSVG}>\n        Поделиться\n      </TextButton>\n      <TextButton size='m' endIcon={ShareAndroidSVG}>\n        Поделиться\n      </TextButton>\n    </div>;\n}",...IconEnd.parameters?.docs?.source}}},DifferentStates.parameters={...DifferentStates.parameters,docs:{...DifferentStates.parameters?.docs,source:{originalSource:"function DifferentStates() {\n  const [size, setSize] = useState<TextButtonSize>('m');\n  const [color, setColor] = useState<TextButtonColor>('basic-blue');\n  const [state, setState] = useState<string>('default');\n  const [asLink, setAsLink] = useState<boolean>(false);\n  const [iconPos, setIconPos] = useState<string>('end');\n  const [underline, setUnderline] = useState<boolean>(false);\n  const IconSVG = size === 's' ? ShareSVG : ShareAndroidSVG;\n  return <Sandbox controls={[{\n    type: 'select',\n    label: 'Размер',\n    bind: [size, setSize],\n    options: ['s', 'm']\n  }, {\n    type: 'select',\n    label: 'Цвет',\n    bind: [color, setColor],\n    options: ['basic-blue', 'basic-gray87', 'basic-gray38', 'additional-red', 'additional-teal', 'basic-white']\n  }, {\n    type: 'select',\n    label: 'Позиция иконки',\n    bind: [iconPos, setIconPos],\n    options: ['start', 'end', 'none']\n  }, {\n    type: 'select',\n    label: 'Состояние',\n    bind: [state, setState],\n    options: ['default', 'disabled']\n  }, {\n    type: 'toggle',\n    label: 'Подчеркивание',\n    bind: [underline, setUnderline]\n  }, {\n    type: 'toggle',\n    label: 'Ссылка',\n    bind: [asLink, setAsLink]\n  }]} areaStyle={{\n    background: color === 'basic-white' ? COLORS.get('basic-gray87') : undefined\n  }}>\n      <TextButton size={size} color={color} underline={underline} disabled={state === 'disabled'} iconGutter={size === 's' ? 4 : 8} startIcon={iconPos === 'start' ? IconSVG : undefined} endIcon={iconPos === 'end' ? IconSVG : undefined} onClick={() => {\n      !asLink && alert('Ничего не изменилось');\n    }} {...asLink && {\n      as: 'anchor',\n      href: 'https://www.sima-land.ru',\n      target: '_blank'\n    }}>\n        Поделиться\n      </TextButton>\n    </Sandbox>;\n}",...DifferentStates.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","DifferentColors","DifferentSizes","IconStart","IconEnd","DifferentStates"]}}]);