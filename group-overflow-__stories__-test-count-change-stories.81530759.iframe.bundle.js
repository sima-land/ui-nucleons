"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[6039],{"./src/group-overflow/__stories__/test-count-change.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TestCountChange:()=>TestCountChange,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _sima_land_ui_nucleons_group_overflow__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/group-overflow/index.ts"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_sima_land_ui_nucleons_layout__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/layout/index.ts"),_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/chip/index.ts"),_sima_land_ui_nucleons_helpers_on__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/helpers/on.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"service/GroupOverflow",component:_sima_land_ui_nucleons_group_overflow__WEBPACK_IMPORTED_MODULE_0__.x,parameters:{storySource:{source:"import { GroupOverflow } from '@sima-land/ui-nucleons/group-overflow';\nimport { useEffect, useState } from 'react';\nimport { Layout } from '@sima-land/ui-nucleons/layout';\nimport { Chip } from '@sima-land/ui-nucleons/chip';\nimport { on } from '@sima-land/ui-nucleons/helpers/on';\n\nexport default {\n  title: 'service/GroupOverflow',\n  component: GroupOverflow,\n  parameters: {\n    layout: 'fullscreen',\n  },\n};\n\nexport function TestCountChange() {\n  const [count, setCount] = useState(24);\n  const items: string[] = [...Array(count).keys()].map(index => `Элемент №${index + 1}`);\n\n  useEffect(() => {\n    const off = on<KeyboardEvent>(window, 'keydown', event => {\n      switch (event.code) {\n        case 'ArrowUp':\n          setCount(n => n + 1);\n          break;\n        case 'ArrowDown':\n          setCount(n => Math.max(0, n - 1));\n          break;\n      }\n    });\n\n    return off;\n  }, []);\n\n  return (\n    <Layout>\n      <h3>Всего элементов: {items.length}</h3>\n      <GroupOverflow tail={data => <Chip checked>+{data.hiddenCount}</Chip>}>\n        {items.map((item, index) => (\n          <Chip key={index}>{item}</Chip>\n        ))}\n      </GroupOverflow>\n      <p>Используйте стрелки на клавиатуре чтобы изменить кол-во элементов</p>\n    </Layout>\n  );\n}\n\nTestCountChange.storyName = 'Тест: Изменение кол-ва элементов';\n",locationsMap:{"test-count-change":{startLoc:{col:7,line:15},endLoc:{col:1,line:45},startBody:{col:7,line:15},endBody:{col:1,line:45}}}},layout:"fullscreen"}},TestCountChange=function TestCountChange(){const[count,setCount]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(24),items=[...Array(count).keys()].map((index=>`Элемент №${index+1}`));return(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>(0,_sima_land_ui_nucleons_helpers_on__WEBPACK_IMPORTED_MODULE_5__.on)(window,"keydown",(event=>{switch(event.code){case"ArrowUp":setCount((n=>n+1));break;case"ArrowDown":setCount((n=>Math.max(0,n-1)))}}))),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_sima_land_ui_nucleons_layout__WEBPACK_IMPORTED_MODULE_2__.Ar,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("h3",{children:["Всего элементов: ",items.length]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_group_overflow__WEBPACK_IMPORTED_MODULE_0__.x,{tail:data=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_3__.Af,{checked:!0,children:["+",data.hiddenCount]}),children:items.map(((item,index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_3__.Af,{children:item},index)))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:"Используйте стрелки на клавиатуре чтобы изменить кол-во элементов"})]})};TestCountChange.storyName="Тест: Изменение кол-ва элементов",TestCountChange.parameters={...TestCountChange.parameters,docs:{...TestCountChange.parameters?.docs,source:{originalSource:"function TestCountChange() {\n  const [count, setCount] = useState(24);\n  const items: string[] = [...Array(count).keys()].map(index => `Элемент №${index + 1}`);\n  useEffect(() => {\n    const off = on<KeyboardEvent>(window, 'keydown', event => {\n      switch (event.code) {\n        case 'ArrowUp':\n          setCount(n => n + 1);\n          break;\n        case 'ArrowDown':\n          setCount(n => Math.max(0, n - 1));\n          break;\n      }\n    });\n    return off;\n  }, []);\n  return <Layout>\n      <h3>Всего элементов: {items.length}</h3>\n      <GroupOverflow tail={data => <Chip checked>+{data.hiddenCount}</Chip>}>\n        {items.map((item, index) => <Chip key={index}>{item}</Chip>)}\n      </GroupOverflow>\n      <p>Используйте стрелки на клавиатуре чтобы изменить кол-во элементов</p>\n    </Layout>;\n}",...TestCountChange.parameters?.docs?.source}}};const __namedExportsOrder=["TestCountChange"]}}]);