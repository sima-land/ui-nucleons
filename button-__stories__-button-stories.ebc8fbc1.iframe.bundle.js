"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[995],{"./node_modules/@sima-land/ui-quarks/icons/16x16/Filled/Share.js":(__unused_webpack_module,exports,__webpack_require__)=>{const jsx_runtime_1=__webpack_require__("./node_modules/react/jsx-runtime.js"),ForwardRef=(0,__webpack_require__("./node_modules/react/index.js").forwardRef)(((props,ref)=>(0,jsx_runtime_1.jsx)("svg",{width:16,height:16,viewBox:"0 0 16 16",ref,...props,children:(0,jsx_runtime_1.jsx)("path",{d:"M12.5 6a2.5 2.5 0 1 0-2.497-2.37l-4.9 2.45a2.5 2.5 0 1 0 0 3.838l4.9 2.452a2.5 2.5 0 1 0 .894-1.789l-4.9-2.45a2.537 2.537 0 0 0 0-.261l4.9-2.45c.435.362.993.58 1.603.58Z"})})));exports.Z=ForwardRef},"./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Placeholder.js":(__unused_webpack_module,exports,__webpack_require__)=>{const jsx_runtime_1=__webpack_require__("./node_modules/react/jsx-runtime.js"),ForwardRef=(0,__webpack_require__("./node_modules/react/index.js").forwardRef)(((props,ref)=>(0,jsx_runtime_1.jsx)("svg",{width:16,height:16,viewBox:"0 0 16 16",ref,...props,children:(0,jsx_runtime_1.jsx)("path",{fillRule:"evenodd",d:"M8 3a5 5 0 1 0 0 10A5 5 0 0 0 8 3ZM1 8a7 7 0 1 1 14 0A7 7 0 0 1 1 8Z",clipRule:"evenodd"})})));exports.Z=ForwardRef},"./node_modules/@sima-land/ui-quarks/icons/24x24/Stroked/ShareAndroid.js":(__unused_webpack_module,exports,__webpack_require__)=>{const jsx_runtime_1=__webpack_require__("./node_modules/react/jsx-runtime.js"),ForwardRef=(0,__webpack_require__("./node_modules/react/index.js").forwardRef)(((props,ref)=>(0,jsx_runtime_1.jsxs)("svg",{width:24,height:24,viewBox:"0 0 24 24",ref,...props,children:[(0,jsx_runtime_1.jsx)("path",{fillRule:"evenodd",d:"M18 4a2.001 2.001 0 0 0 0 4 2.001 2.001 0 0 0 0-4Zm-4 2a4.001 4.001 0 0 1 8 0 4.001 4.001 0 0 1-8 0ZM5 10a2.001 2.001 0 0 0 0 4 2.001 2.001 0 0 0 0-4Zm-4 2a4.001 4.001 0 0 1 8 0 4.001 4.001 0 0 1-8 0ZM18 16a2.001 2.001 0 0 0 0 4 2.001 2.001 0 0 0 0-4Zm-4 2a4.001 4.001 0 0 1 8 0 4.001 4.001 0 0 1-8 0Z",clipRule:"evenodd"}),(0,jsx_runtime_1.jsx)("path",{fillRule:"evenodd",d:"m15.827 16.511-8.316-3.838-.838 1.816 8.316 3.838.838-1.816ZM15.827 7.489l-8.316 3.838-.838-1.816 8.316-3.838.838 1.816Z",clipRule:"evenodd"})]})));exports.Z=ForwardRef},"./src/button/__stories__/button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomColors:()=>CustomColors,DifferentColors:()=>DifferentColors,DifferentSizes:()=>DifferentSizes,DifferentStates:()=>DifferentStates,IconEnd:()=>IconEnd,IconStart:()=>IconStart,OnlyIcon:()=>OnlyIcon,Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/button/index.tsx"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_sima_land_ui_quarks_icons_16x16_Filled_Share__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@sima-land/ui-quarks/icons/16x16/Filled/Share.js"),_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@sima-land/ui-quarks/icons/24x24/Stroked/ShareAndroid.js"),_sima_land_ui_quarks_icons_16x16_Stroked_Placeholder__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Placeholder.js"),_sima_land_ui_quarks_icons_24x24_Stroked_Placeholder__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@sima-land/ui-quarks/icons/24x24/Stroked/Placeholder.js"),_storybook_utils__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./.storybook/utils.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"common/Button",component:_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,parameters:{storySource:{source:"import { Button, ButtonProps, ButtonSize, ButtonStyle, ButtonViewType } from '@sima-land/ui-nucleons/button';\nimport { CSSProperties, useState } from 'react';\nimport ShareSVG from '@sima-land/ui-quarks/icons/16x16/Filled/Share';\nimport ShareAndroidSVG from '@sima-land/ui-quarks/icons/24x24/Stroked/ShareAndroid';\nimport Placeholder16SVG from '@sima-land/ui-quarks/icons/16x16/Stroked/Placeholder';\nimport Placeholder24SVG from '@sima-land/ui-quarks/icons/24x24/Stroked/Placeholder';\nimport { Sandbox } from '../../../.storybook/utils';\nexport default {\n  title: 'common/Button',\n  component: Button,\n  parameters: {\n    layout: 'padded'\n  }\n};\nexport function Primary() {\n  return <>\n      <Button onClick={() => alert('Спасибо!')}>Нажми на меня</Button>\n    </>;\n}\nPrimary.storyName = 'Простой пример';\nexport function DifferentColors() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button viewType='primary'>Primary</Button>\n      <Button viewType='secondary'>Secondary</Button>\n      <Button viewType='success'>Success</Button>\n    </div>;\n}\nDifferentColors.storyName = 'Варианты цветов';\nexport function DifferentSizes() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button size='m'>Просто кнопка</Button>\n      <Button size='s'>Просто кнопка</Button>\n      <Button size='xs'>Просто кнопка</Button>\n    </div>;\n}\nDifferentSizes.storyName = 'Варианты размеров';\nexport function OnlyIcon() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button size='m' icon={ShareAndroidSVG} />\n      <Button size='s' icon={ShareAndroidSVG} />\n      <Button size='xs' icon={ShareSVG} />\n    </div>;\n}\nOnlyIcon.storyName = 'Только иконка';\nexport function IconStart() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button size='m' icon={ShareAndroidSVG} iconPosition='start'>\n        Поделиться\n      </Button>\n      <Button size='s' icon={ShareAndroidSVG} iconPosition='start'>\n        Поделиться\n      </Button>\n      <Button size='xs' icon={ShareSVG} iconPosition='start'>\n        Поделиться\n      </Button>\n    </div>;\n}\nIconStart.storyName = 'Иконка в начале';\nexport function IconEnd() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button size='m' icon={ShareAndroidSVG} iconPosition='end'>\n        Поделиться\n      </Button>\n      <Button size='s' icon={ShareAndroidSVG} iconPosition='end'>\n        Поделиться\n      </Button>\n      <Button size='xs' icon={ShareSVG} iconPosition='end'>\n        Поделиться\n      </Button>\n    </div>;\n}\nIconEnd.storyName = 'Иконка в конце';\nexport function DifferentStates() {\n  const [size, setSize] = useState<ButtonSize>('s');\n  const [viewType, setViewType] = useState<ButtonViewType>('primary');\n  const [state, setState] = useState<'default' | 'disabled'>('default');\n  const props: ButtonProps = {\n    size,\n    viewType,\n    disabled: state.includes('disabled'),\n    loading: state.includes('loading'),\n    onClick: () => alert('Клик по кнопке прошёл успешно')\n  };\n  const IconSVG = size === 'xs' ? Placeholder16SVG : Placeholder24SVG;\n  return <Sandbox controls={[{\n    type: 'select',\n    label: 'Размер',\n    options: ['xs', 's', 'm'],\n    bind: [size, setSize]\n  }, {\n    type: 'select',\n    label: 'Тип действия',\n    options: ['primary', 'secondary', 'success'],\n    bind: [viewType, setViewType]\n  }, {\n    type: 'select',\n    label: 'Состояние',\n    options: ['default', 'disabled', 'loading', 'loading+disabled'],\n    bind: [state, setState]\n  }]}>\n      <div style={{\n      display: 'flex',\n      gap: '20px',\n      justifyContent: 'center'\n    }}>\n        <Button {...props} icon={IconSVG} />\n\n        <Button {...props}>Действие</Button>\n\n        <Button {...props} icon={IconSVG} iconPosition='start'>\n          Действие\n        </Button>\n\n        <Button {...props} icon={IconSVG} iconPosition='end'>\n          Действие\n        </Button>\n      </div>\n    </Sandbox>;\n}\nDifferentStates.storyName = 'Различные состояния';\nexport function CustomColors() {\n  const container: CSSProperties = {\n    maxWidth: '480px',\n    display: 'flex',\n    gap: '12px',\n    flexDirection: 'column',\n    justifyContent: 'stretch'\n  };\n  const sber: ButtonStyle = {\n    '--button-color': '#fff',\n    '--button-background': '#107f8c'\n  };\n  const tinkoff: ButtonStyle = {\n    '--button-color': '#000',\n    '--button-background': '#ffdd2d'\n  };\n  const apple: ButtonStyle = {\n    '--button-color': '#fff',\n    '--button-background': '#161616',\n    '--button-hover-background': '#404040'\n  };\n  return <div style={container}>\n      <Button viewType='unset' style={sber}>\n        Войти по СберБизнес ID\n      </Button>\n      <Button viewType='unset' style={tinkoff}>\n        Войти с Tinkoff\n      </Button>\n      <Button viewType='unset' style={apple}>\n        Войти с Apple ID\n      </Button>\n    </div>;\n}\nCustomColors.storyName = 'Пользовательские цвета';\nPrimary.parameters = {\n  ...Primary.parameters,\n  docs: {\n    ...Primary.parameters?.docs,\n    source: {\n      originalSource: \"function Primary() {\\n  return <>\\n      <Button onClick={() => alert('\\u0421\\u043F\\u0430\\u0441\\u0438\\u0431\\u043E!')}>\\u041D\\u0430\\u0436\\u043C\\u0438 \\u043D\\u0430 \\u043C\\u0435\\u043D\\u044F</Button>\\n    </>;\\n}\",\n      ...Primary.parameters?.docs?.source\n    }\n  }\n};\nDifferentColors.parameters = {\n  ...DifferentColors.parameters,\n  docs: {\n    ...DifferentColors.parameters?.docs,\n    source: {\n      originalSource: \"function DifferentColors() {\\n  return <div style={{\\n    display: 'flex',\\n    gap: '12px'\\n  }}>\\n      <Button viewType='primary'>Primary</Button>\\n      <Button viewType='secondary'>Secondary</Button>\\n      <Button viewType='success'>Success</Button>\\n    </div>;\\n}\",\n      ...DifferentColors.parameters?.docs?.source\n    }\n  }\n};\nDifferentSizes.parameters = {\n  ...DifferentSizes.parameters,\n  docs: {\n    ...DifferentSizes.parameters?.docs,\n    source: {\n      originalSource: \"function DifferentSizes() {\\n  return <div style={{\\n    display: 'flex',\\n    gap: '12px'\\n  }}>\\n      <Button size='m'>\\u041F\\u0440\\u043E\\u0441\\u0442\\u043E \\u043A\\u043D\\u043E\\u043F\\u043A\\u0430</Button>\\n      <Button size='s'>\\u041F\\u0440\\u043E\\u0441\\u0442\\u043E \\u043A\\u043D\\u043E\\u043F\\u043A\\u0430</Button>\\n      <Button size='xs'>\\u041F\\u0440\\u043E\\u0441\\u0442\\u043E \\u043A\\u043D\\u043E\\u043F\\u043A\\u0430</Button>\\n    </div>;\\n}\",\n      ...DifferentSizes.parameters?.docs?.source\n    }\n  }\n};\nOnlyIcon.parameters = {\n  ...OnlyIcon.parameters,\n  docs: {\n    ...OnlyIcon.parameters?.docs,\n    source: {\n      originalSource: \"function OnlyIcon() {\\n  return <div style={{\\n    display: 'flex',\\n    gap: '12px'\\n  }}>\\n      <Button size='m' icon={ShareAndroidSVG} />\\n      <Button size='s' icon={ShareAndroidSVG} />\\n      <Button size='xs' icon={ShareSVG} />\\n    </div>;\\n}\",\n      ...OnlyIcon.parameters?.docs?.source\n    }\n  }\n};\nIconStart.parameters = {\n  ...IconStart.parameters,\n  docs: {\n    ...IconStart.parameters?.docs,\n    source: {\n      originalSource: \"function IconStart() {\\n  return <div style={{\\n    display: 'flex',\\n    gap: '12px'\\n  }}>\\n      <Button size='m' icon={ShareAndroidSVG} iconPosition='start'>\\n        \\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F\\n      </Button>\\n      <Button size='s' icon={ShareAndroidSVG} iconPosition='start'>\\n        \\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F\\n      </Button>\\n      <Button size='xs' icon={ShareSVG} iconPosition='start'>\\n        \\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F\\n      </Button>\\n    </div>;\\n}\",\n      ...IconStart.parameters?.docs?.source\n    }\n  }\n};\nIconEnd.parameters = {\n  ...IconEnd.parameters,\n  docs: {\n    ...IconEnd.parameters?.docs,\n    source: {\n      originalSource: \"function IconEnd() {\\n  return <div style={{\\n    display: 'flex',\\n    gap: '12px'\\n  }}>\\n      <Button size='m' icon={ShareAndroidSVG} iconPosition='end'>\\n        \\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F\\n      </Button>\\n      <Button size='s' icon={ShareAndroidSVG} iconPosition='end'>\\n        \\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F\\n      </Button>\\n      <Button size='xs' icon={ShareSVG} iconPosition='end'>\\n        \\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F\\n      </Button>\\n    </div>;\\n}\",\n      ...IconEnd.parameters?.docs?.source\n    }\n  }\n};\nDifferentStates.parameters = {\n  ...DifferentStates.parameters,\n  docs: {\n    ...DifferentStates.parameters?.docs,\n    source: {\n      originalSource: \"function DifferentStates() {\\n  const [size, setSize] = useState<ButtonSize>('s');\\n  const [viewType, setViewType] = useState<ButtonViewType>('primary');\\n  const [state, setState] = useState<'default' | 'disabled'>('default');\\n  const props: ButtonProps = {\\n    size,\\n    viewType,\\n    disabled: state.includes('disabled'),\\n    loading: state.includes('loading'),\\n    onClick: () => alert('\\u041A\\u043B\\u0438\\u043A \\u043F\\u043E \\u043A\\u043D\\u043E\\u043F\\u043A\\u0435 \\u043F\\u0440\\u043E\\u0448\\u0451\\u043B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E')\\n  };\\n  const IconSVG = size === 'xs' ? Placeholder16SVG : Placeholder24SVG;\\n  return <Sandbox controls={[{\\n    type: 'select',\\n    label: '\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440',\\n    options: ['xs', 's', 'm'],\\n    bind: [size, setSize]\\n  }, {\\n    type: 'select',\\n    label: '\\u0422\\u0438\\u043F \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F',\\n    options: ['primary', 'secondary', 'success'],\\n    bind: [viewType, setViewType]\\n  }, {\\n    type: 'select',\\n    label: '\\u0421\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435',\\n    options: ['default', 'disabled', 'loading', 'loading+disabled'],\\n    bind: [state, setState]\\n  }]}>\\n      <div style={{\\n      display: 'flex',\\n      gap: '20px',\\n      justifyContent: 'center'\\n    }}>\\n        <Button {...props} icon={IconSVG} />\\n\\n        <Button {...props}>\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435</Button>\\n\\n        <Button {...props} icon={IconSVG} iconPosition='start'>\\n          \\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\\n        </Button>\\n\\n        <Button {...props} icon={IconSVG} iconPosition='end'>\\n          \\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\\n        </Button>\\n      </div>\\n    </Sandbox>;\\n}\",\n      ...DifferentStates.parameters?.docs?.source\n    }\n  }\n};\nCustomColors.parameters = {\n  ...CustomColors.parameters,\n  docs: {\n    ...CustomColors.parameters?.docs,\n    source: {\n      originalSource: \"function CustomColors() {\\n  const container: CSSProperties = {\\n    maxWidth: '480px',\\n    display: 'flex',\\n    gap: '12px',\\n    flexDirection: 'column',\\n    justifyContent: 'stretch'\\n  };\\n  const sber: ButtonStyle = {\\n    '--button-color': '#fff',\\n    '--button-background': '#107f8c'\\n  };\\n  const tinkoff: ButtonStyle = {\\n    '--button-color': '#000',\\n    '--button-background': '#ffdd2d'\\n  };\\n  const apple: ButtonStyle = {\\n    '--button-color': '#fff',\\n    '--button-background': '#161616',\\n    '--button-hover-background': '#404040'\\n  };\\n  return <div style={container}>\\n      <Button viewType='unset' style={sber}>\\n        \\u0412\\u043E\\u0439\\u0442\\u0438 \\u043F\\u043E \\u0421\\u0431\\u0435\\u0440\\u0411\\u0438\\u0437\\u043D\\u0435\\u0441 ID\\n      </Button>\\n      <Button viewType='unset' style={tinkoff}>\\n        \\u0412\\u043E\\u0439\\u0442\\u0438 \\u0441 Tinkoff\\n      </Button>\\n      <Button viewType='unset' style={apple}>\\n        \\u0412\\u043E\\u0439\\u0442\\u0438 \\u0441 Apple ID\\n      </Button>\\n    </div>;\\n}\",\n      ...CustomColors.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{primary:{startLoc:{col:7,line:15},endLoc:{col:1,line:19},startBody:{col:7,line:15},endBody:{col:1,line:19}},"different-colors":{startLoc:{col:7,line:21},endLoc:{col:1,line:30},startBody:{col:7,line:21},endBody:{col:1,line:30}},"different-sizes":{startLoc:{col:7,line:32},endLoc:{col:1,line:41},startBody:{col:7,line:32},endBody:{col:1,line:41}},"only-icon":{startLoc:{col:7,line:43},endLoc:{col:1,line:52},startBody:{col:7,line:43},endBody:{col:1,line:52}},"icon-start":{startLoc:{col:7,line:54},endLoc:{col:1,line:69},startBody:{col:7,line:54},endBody:{col:1,line:69}},"icon-end":{startLoc:{col:7,line:71},endLoc:{col:1,line:86},startBody:{col:7,line:71},endBody:{col:1,line:86}},"different-states":{startLoc:{col:7,line:88},endLoc:{col:1,line:134},startBody:{col:7,line:88},endBody:{col:1,line:134}},"custom-colors":{startLoc:{col:7,line:136},endLoc:{col:1,line:168},startBody:{col:7,line:136},endBody:{col:1,line:168}}}},layout:"padded"}},Primary=function Primary(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{onClick:()=>alert("Спасибо!"),children:"Нажми на меня"})})};Primary.storyName="Простой пример";const DifferentColors=function DifferentColors(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{style:{display:"flex",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{viewType:"primary",children:"Primary"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{viewType:"secondary",children:"Secondary"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{viewType:"success",children:"Success"})]})};DifferentColors.displayName="DifferentColors",DifferentColors.storyName="Варианты цветов";const DifferentSizes=function DifferentSizes(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{style:{display:"flex",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{size:"m",children:"Просто кнопка"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{size:"s",children:"Просто кнопка"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{size:"xs",children:"Просто кнопка"})]})};DifferentSizes.displayName="DifferentSizes",DifferentSizes.storyName="Варианты размеров";const OnlyIcon=function OnlyIcon(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{style:{display:"flex",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{size:"m",icon:_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_3__.Z}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{size:"s",icon:_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_3__.Z}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{size:"xs",icon:_sima_land_ui_quarks_icons_16x16_Filled_Share__WEBPACK_IMPORTED_MODULE_2__.Z})]})};OnlyIcon.displayName="OnlyIcon",OnlyIcon.storyName="Только иконка";const IconStart=function IconStart(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{style:{display:"flex",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{size:"m",icon:_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_3__.Z,iconPosition:"start",children:"Поделиться"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{size:"s",icon:_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_3__.Z,iconPosition:"start",children:"Поделиться"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{size:"xs",icon:_sima_land_ui_quarks_icons_16x16_Filled_Share__WEBPACK_IMPORTED_MODULE_2__.Z,iconPosition:"start",children:"Поделиться"})]})};IconStart.displayName="IconStart",IconStart.storyName="Иконка в начале";const IconEnd=function IconEnd(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{style:{display:"flex",gap:"12px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{size:"m",icon:_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_3__.Z,iconPosition:"end",children:"Поделиться"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{size:"s",icon:_sima_land_ui_quarks_icons_24x24_Stroked_ShareAndroid__WEBPACK_IMPORTED_MODULE_3__.Z,iconPosition:"end",children:"Поделиться"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{size:"xs",icon:_sima_land_ui_quarks_icons_16x16_Filled_Share__WEBPACK_IMPORTED_MODULE_2__.Z,iconPosition:"end",children:"Поделиться"})]})};IconEnd.displayName="IconEnd",IconEnd.storyName="Иконка в конце";const DifferentStates=function DifferentStates(){const[size,setSize]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("s"),[viewType,setViewType]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("primary"),[state,setState]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("default"),props={size,viewType,disabled:state.includes("disabled"),loading:state.includes("loading"),onClick:()=>alert("Клик по кнопке прошёл успешно")},IconSVG="xs"===size?_sima_land_ui_quarks_icons_16x16_Stroked_Placeholder__WEBPACK_IMPORTED_MODULE_4__.Z:_sima_land_ui_quarks_icons_24x24_Stroked_Placeholder__WEBPACK_IMPORTED_MODULE_5__.Z;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_storybook_utils__WEBPACK_IMPORTED_MODULE_6__.pv,{controls:[{type:"select",label:"Размер",options:["xs","s","m"],bind:[size,setSize]},{type:"select",label:"Тип действия",options:["primary","secondary","success"],bind:[viewType,setViewType]},{type:"select",label:"Состояние",options:["default","disabled","loading","loading+disabled"],bind:[state,setState]}],children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{style:{display:"flex",gap:"20px",justifyContent:"center"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{...props,icon:IconSVG}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{...props,children:"Действие"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{...props,icon:IconSVG,iconPosition:"start",children:"Действие"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{...props,icon:IconSVG,iconPosition:"end",children:"Действие"})]})})};DifferentStates.displayName="DifferentStates",DifferentStates.storyName="Различные состояния";const CustomColors=function CustomColors(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div",{style:{maxWidth:"480px",display:"flex",gap:"12px",flexDirection:"column",justifyContent:"stretch"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{viewType:"unset",style:{"--button-color":"#fff","--button-background":"#107f8c"},children:"Войти по СберБизнес ID"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{viewType:"unset",style:{"--button-color":"#000","--button-background":"#ffdd2d"},children:"Войти с Tinkoff"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_0__.z,{viewType:"unset",style:{"--button-color":"#fff","--button-background":"#161616","--button-hover-background":"#404040"},children:"Войти с Apple ID"})]})};CustomColors.displayName="CustomColors",CustomColors.storyName="Пользовательские цвета",Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"function Primary() {\n  return <>\n      <Button onClick={() => alert('Спасибо!')}>Нажми на меня</Button>\n    </>;\n}",...Primary.parameters?.docs?.source}}},DifferentColors.parameters={...DifferentColors.parameters,docs:{...DifferentColors.parameters?.docs,source:{originalSource:"function DifferentColors() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button viewType='primary'>Primary</Button>\n      <Button viewType='secondary'>Secondary</Button>\n      <Button viewType='success'>Success</Button>\n    </div>;\n}",...DifferentColors.parameters?.docs?.source}}},DifferentSizes.parameters={...DifferentSizes.parameters,docs:{...DifferentSizes.parameters?.docs,source:{originalSource:"function DifferentSizes() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button size='m'>Просто кнопка</Button>\n      <Button size='s'>Просто кнопка</Button>\n      <Button size='xs'>Просто кнопка</Button>\n    </div>;\n}",...DifferentSizes.parameters?.docs?.source}}},OnlyIcon.parameters={...OnlyIcon.parameters,docs:{...OnlyIcon.parameters?.docs,source:{originalSource:"function OnlyIcon() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button size='m' icon={ShareAndroidSVG} />\n      <Button size='s' icon={ShareAndroidSVG} />\n      <Button size='xs' icon={ShareSVG} />\n    </div>;\n}",...OnlyIcon.parameters?.docs?.source}}},IconStart.parameters={...IconStart.parameters,docs:{...IconStart.parameters?.docs,source:{originalSource:"function IconStart() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button size='m' icon={ShareAndroidSVG} iconPosition='start'>\n        Поделиться\n      </Button>\n      <Button size='s' icon={ShareAndroidSVG} iconPosition='start'>\n        Поделиться\n      </Button>\n      <Button size='xs' icon={ShareSVG} iconPosition='start'>\n        Поделиться\n      </Button>\n    </div>;\n}",...IconStart.parameters?.docs?.source}}},IconEnd.parameters={...IconEnd.parameters,docs:{...IconEnd.parameters?.docs,source:{originalSource:"function IconEnd() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button size='m' icon={ShareAndroidSVG} iconPosition='end'>\n        Поделиться\n      </Button>\n      <Button size='s' icon={ShareAndroidSVG} iconPosition='end'>\n        Поделиться\n      </Button>\n      <Button size='xs' icon={ShareSVG} iconPosition='end'>\n        Поделиться\n      </Button>\n    </div>;\n}",...IconEnd.parameters?.docs?.source}}},DifferentStates.parameters={...DifferentStates.parameters,docs:{...DifferentStates.parameters?.docs,source:{originalSource:"function DifferentStates() {\n  const [size, setSize] = useState<ButtonSize>('s');\n  const [viewType, setViewType] = useState<ButtonViewType>('primary');\n  const [state, setState] = useState<'default' | 'disabled'>('default');\n  const props: ButtonProps = {\n    size,\n    viewType,\n    disabled: state.includes('disabled'),\n    loading: state.includes('loading'),\n    onClick: () => alert('Клик по кнопке прошёл успешно')\n  };\n  const IconSVG = size === 'xs' ? Placeholder16SVG : Placeholder24SVG;\n  return <Sandbox controls={[{\n    type: 'select',\n    label: 'Размер',\n    options: ['xs', 's', 'm'],\n    bind: [size, setSize]\n  }, {\n    type: 'select',\n    label: 'Тип действия',\n    options: ['primary', 'secondary', 'success'],\n    bind: [viewType, setViewType]\n  }, {\n    type: 'select',\n    label: 'Состояние',\n    options: ['default', 'disabled', 'loading', 'loading+disabled'],\n    bind: [state, setState]\n  }]}>\n      <div style={{\n      display: 'flex',\n      gap: '20px',\n      justifyContent: 'center'\n    }}>\n        <Button {...props} icon={IconSVG} />\n\n        <Button {...props}>Действие</Button>\n\n        <Button {...props} icon={IconSVG} iconPosition='start'>\n          Действие\n        </Button>\n\n        <Button {...props} icon={IconSVG} iconPosition='end'>\n          Действие\n        </Button>\n      </div>\n    </Sandbox>;\n}",...DifferentStates.parameters?.docs?.source}}},CustomColors.parameters={...CustomColors.parameters,docs:{...CustomColors.parameters?.docs,source:{originalSource:"function CustomColors() {\n  const container: CSSProperties = {\n    maxWidth: '480px',\n    display: 'flex',\n    gap: '12px',\n    flexDirection: 'column',\n    justifyContent: 'stretch'\n  };\n  const sber: ButtonStyle = {\n    '--button-color': '#fff',\n    '--button-background': '#107f8c'\n  };\n  const tinkoff: ButtonStyle = {\n    '--button-color': '#000',\n    '--button-background': '#ffdd2d'\n  };\n  const apple: ButtonStyle = {\n    '--button-color': '#fff',\n    '--button-background': '#161616',\n    '--button-hover-background': '#404040'\n  };\n  return <div style={container}>\n      <Button viewType='unset' style={sber}>\n        Войти по СберБизнес ID\n      </Button>\n      <Button viewType='unset' style={tinkoff}>\n        Войти с Tinkoff\n      </Button>\n      <Button viewType='unset' style={apple}>\n        Войти с Apple ID\n      </Button>\n    </div>;\n}",...CustomColors.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","DifferentColors","DifferentSizes","OnlyIcon","IconStart","IconEnd","DifferentStates","CustomColors"]}}]);