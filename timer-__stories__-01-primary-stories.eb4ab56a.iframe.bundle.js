"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[5135],{"./src/timer/__stories__/01-primary.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>_01_primary_stories});var timer=__webpack_require__("./src/timer/index.ts"),formatISO=__webpack_require__("./node_modules/date-fns/formatISO.mjs"),toDate=__webpack_require__("./node_modules/date-fns/toDate.mjs"),constructFrom=__webpack_require__("./node_modules/date-fns/constructFrom.mjs");function addMonths(date,amount){const _date=(0,toDate.Q)(date);if(isNaN(amount))return(0,constructFrom.L)(date,NaN);if(!amount)return _date;const dayOfMonth=_date.getDate(),endOfDesiredMonth=(0,constructFrom.L)(date,_date.getTime());endOfDesiredMonth.setMonth(_date.getMonth()+amount+1,0);return dayOfMonth>=endOfDesiredMonth.getDate()?endOfDesiredMonth:(_date.setFullYear(endOfDesiredMonth.getFullYear(),endOfDesiredMonth.getMonth(),dayOfMonth),_date)}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const _01_primary_stories={title:"service/Timer",component:timer.B,parameters:{storySource:{source:"import { Timer } from '@sima-land/ui-nucleons/timer';\nimport { addMonths, formatISO } from 'date-fns';\n\nexport default {\n  title: 'service/Timer',\n  component: Timer,\n  parameters: {\n    layout: 'padded',\n  },\n};\n\nexport function Primary() {\n  return (\n    <>\n      <Timer date={formatISO(addMonths(new Date(), 1))} />\n    </>\n  );\n}\n\nPrimary.storyName = 'Простой пример';\n",locationsMap:{primary:{startLoc:{col:7,line:12},endLoc:{col:1,line:18},startBody:{col:7,line:12},endBody:{col:1,line:18}}}},layout:"padded"}},Primary=function Primary(){return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(timer.B,{date:(0,formatISO.c)(addMonths(new Date,1))})})};Primary.storyName="Простой пример",Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"function Primary() {\n  return <>\n      <Timer date={formatISO(addMonths(new Date(), 1))} />\n    </>;\n}",...Primary.parameters?.docs?.source}}};const __namedExportsOrder=["Primary"]},"./src/timer/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>Timer});var react=__webpack_require__("./node_modules/react/index.js"),formatDistanceToNowStrict=__webpack_require__("./node_modules/date-fns/formatDistanceToNowStrict.mjs"),isAfter=__webpack_require__("./node_modules/date-fns/isAfter.mjs"),isValid=__webpack_require__("./node_modules/date-fns/isValid.mjs"),parseISO=__webpack_require__("./node_modules/date-fns/parseISO.mjs");const UNITS=["day","hour","minute","second"];function formatDistance({days,hours,minutes,seconds}){return[days,...[hours%24,minutes%60,seconds%60].map((s=>`${s}`.padStart(2,"0")))].join(":")}function getDistanceToNow(dateString){const date=(0,parseISO.D)(dateString);let result={days:0,hours:0,minutes:0,seconds:0};if((0,isValid.J)(date)&&!(0,isAfter.A)(new Date,date)){const[days,hours,minutes,seconds]=UNITS.map((unit=>parseInt((0,formatDistanceToNowStrict.D)(date,{unit,roundingMethod:"floor"}).replace(/\D/g,""))));result={days,hours,minutes,seconds}}return result}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Timer({date,format=formatDistance,timeout=1e3}){const[distance,setDistance]=(0,react.useState)(getDistanceToNow(date));return(0,react.useEffect)((()=>{const timerId=setInterval((()=>{setDistance(getDistanceToNow(date))}),timeout);return setDistance(getDistanceToNow(date)),()=>clearInterval(timerId)}),[timeout]),(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:format(distance)})}try{Timer.displayName="Timer",Timer.__docgenInfo={description:"Таймер - выводит оставшееся время до заданной временной отметки.",displayName:"Timer",props:{date:{defaultValue:null,description:"Дата и время события.",name:"date",required:!0,type:{name:"string"}},format:{defaultValue:null,description:"Должна отформатировать данные об оставшемся времени для вывода.",name:"format",required:!1,type:{name:"((distance: TimeDistance) => ReactNode) | undefined"}},timeout:{defaultValue:{value:"1000"},description:"Частота обновления таймера в миллисекундах.",name:"timeout",required:!1,type:{name:"number | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/timer/timer.tsx#Timer"]={docgenInfo:Timer.__docgenInfo,name:"Timer",path:"src/timer/timer.tsx#Timer"})}catch(__react_docgen_typescript_loader_error){}}}]);