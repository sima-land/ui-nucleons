"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[5961],{"./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Cross.js":(__unused_webpack_module,exports,__webpack_require__)=>{const jsx_runtime_1=__webpack_require__("./node_modules/react/jsx-runtime.js"),ForwardRef=(0,__webpack_require__("./node_modules/react/index.js").forwardRef)(((props,ref)=>(0,jsx_runtime_1.jsx)("svg",{width:16,height:16,viewBox:"0 0 16 16",ref,...props,children:(0,jsx_runtime_1.jsx)("path",{d:"M12.707 4.707a1 1 0 0 0-1.414-1.414L8 6.586 4.707 3.293a1 1 0 0 0-1.414 1.414L6.586 8l-3.293 3.293a1 1 0 1 0 1.414 1.414L8 9.414l3.293 3.293a1 1 0 0 0 1.414-1.414L9.414 8l3.293-3.293Z"})})));exports.Z=ForwardRef},"./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Information.js":(__unused_webpack_module,exports,__webpack_require__)=>{const jsx_runtime_1=__webpack_require__("./node_modules/react/jsx-runtime.js"),ForwardRef=(0,__webpack_require__("./node_modules/react/index.js").forwardRef)(((props,ref)=>(0,jsx_runtime_1.jsxs)("svg",{width:16,height:16,viewBox:"0 0 16 16",ref,...props,children:[(0,jsx_runtime_1.jsx)("path",{d:"M8 6.5a1 1 0 0 1 1 1v4a1 1 0 1 1-2 0v-4a1 1 0 0 1 1-1ZM8 5.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"}),(0,jsx_runtime_1.jsx)("path",{fillRule:"evenodd",d:"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6a6 6 0 1 0 0 12A6 6 0 0 0 8 2Z",clipRule:"evenodd"})]})));exports.Z=ForwardRef},"./src/chip/__stories__/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DarkTheme:()=>DarkTheme,DifferentShapes:()=>DifferentShapes,LightTheme:()=>LightTheme,Primary:()=>Primary,TextOverflow:()=>TextOverflow,WithEndButton:()=>WithEndButton,WithEndIcon:()=>WithEndIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/chip/index.ts"),_sima_land_ui_quarks_icons_16x16_Stroked_Cross__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Cross.js"),_sima_land_ui_quarks_icons_16x16_Stroked_Information__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Information.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"common/Chip",component:_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,parameters:{storySource:{source:"import { CSSProperties } from 'react';\nimport { Chip, ChipIconButton } from '@sima-land/ui-nucleons/chip';\nimport CrossSVG from '@sima-land/ui-quarks/icons/16x16/Stroked/Cross';\nimport InformationSVG from '@sima-land/ui-quarks/icons/16x16/Stroked/Information';\nexport default {\n  title: 'common/Chip',\n  component: Chip,\n  parameters: {\n    layout: 'padded'\n  }\n};\nexport function Primary() {\n  return <div style={{\n    display: 'flex'\n  }}>\n      <Chip>Чипс обычный</Chip>\n    </div>;\n}\nPrimary.storyName = 'Простой пример';\nexport function LightTheme() {\n  return <div style={{\n    display: 'flex',\n    gap: '8px',\n    padding: '24px'\n  }}>\n      <Chip>Чипс обычный</Chip>\n      <Chip disabled>Чипс отключенный</Chip>\n      <Chip checked>Чипс выбранный</Chip>\n      <Chip checked disabled>\n        Чипс выбранный отключенный\n      </Chip>\n    </div>;\n}\nLightTheme.storyName = 'Светлая тема';\nexport function DarkTheme() {\n  return <div style={{\n    display: 'flex',\n    gap: '8px',\n    padding: '24px',\n    background: '#212121'\n  }}>\n      <Chip colors='dark'>Чипс обычный</Chip>\n      <Chip colors='dark' disabled>\n        Чипс отключенный\n      </Chip>\n      <Chip colors='dark' checked>\n        Чипс выбранный\n      </Chip>\n      <Chip colors='dark' checked disabled>\n        Чипс выбранный отключенный\n      </Chip>\n    </div>;\n}\nDarkTheme.storyName = 'Темная тема';\nexport function WithEndIcon() {\n  const icon = <InformationSVG fill='currentColor' />;\n  return <div style={{\n    display: 'flex',\n    gap: '8px'\n  }}>\n      <Chip endAdornment={icon}>Чипс обычный</Chip>\n\n      <Chip endAdornment={icon} checked>\n        Чипс выбранный\n      </Chip>\n    </div>;\n}\nWithEndIcon.storyName = 'С иконкой в конце';\nexport function WithEndButton() {\n  const button = <ChipIconButton onClick={() => alert('Крестик нажат')}>\n      <CrossSVG fill='currentColor' />\n    </ChipIconButton>;\n  return <div style={{\n    display: 'flex',\n    gap: '8px'\n  }}>\n      <Chip endAdornment={button}>Чипс обычный</Chip>\n\n      <Chip endAdornment={button} checked>\n        Чипс выбранный\n      </Chip>\n    </div>;\n}\nWithEndButton.storyName = 'С кнопкой в конце';\nexport function DifferentShapes() {\n  return <>\n      <div style={{\n      display: 'flex',\n      gap: '8px'\n    }}>\n        <Chip shape='square'>Чипс обычный</Chip>\n        <Chip shape='square' checked>\n          Чипс выбранный\n        </Chip>\n      </div>\n\n      <div style={{\n      display: 'flex',\n      gap: '8px',\n      marginTop: '16px'\n    }}>\n        <Chip shape='pill'>Чипс обычный</Chip>\n        <Chip shape='pill' checked>\n          Чипс выбранный\n        </Chip>\n      </div>\n    </>;\n}\nDifferentShapes.storyName = 'Варианты формы';\nexport function TextOverflow() {\n  const style: CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '8px',\n    maxWidth: '280px'\n  };\n  return <div style={style}>\n      <Chip>Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi, totam!</Chip>\n\n      <Chip endAdornment={<InformationSVG fill='currentColor' />}>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi, totam!\n      </Chip>\n    </div>;\n}\nTextOverflow.storyName = 'Переполнение';\nPrimary.parameters = {\n  ...Primary.parameters,\n  docs: {\n    ...Primary.parameters?.docs,\n    source: {\n      originalSource: \"function Primary() {\\n  return <div style={{\\n    display: 'flex'\\n  }}>\\n      <Chip>\\u0427\\u0438\\u043F\\u0441 \\u043E\\u0431\\u044B\\u0447\\u043D\\u044B\\u0439</Chip>\\n    </div>;\\n}\",\n      ...Primary.parameters?.docs?.source\n    }\n  }\n};\nLightTheme.parameters = {\n  ...LightTheme.parameters,\n  docs: {\n    ...LightTheme.parameters?.docs,\n    source: {\n      originalSource: \"function LightTheme() {\\n  return <div style={{\\n    display: 'flex',\\n    gap: '8px',\\n    padding: '24px'\\n  }}>\\n      <Chip>\\u0427\\u0438\\u043F\\u0441 \\u043E\\u0431\\u044B\\u0447\\u043D\\u044B\\u0439</Chip>\\n      <Chip disabled>\\u0427\\u0438\\u043F\\u0441 \\u043E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u043D\\u044B\\u0439</Chip>\\n      <Chip checked>\\u0427\\u0438\\u043F\\u0441 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0439</Chip>\\n      <Chip checked disabled>\\n        \\u0427\\u0438\\u043F\\u0441 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0439 \\u043E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u043D\\u044B\\u0439\\n      </Chip>\\n    </div>;\\n}\",\n      ...LightTheme.parameters?.docs?.source\n    }\n  }\n};\nDarkTheme.parameters = {\n  ...DarkTheme.parameters,\n  docs: {\n    ...DarkTheme.parameters?.docs,\n    source: {\n      originalSource: \"function DarkTheme() {\\n  return <div style={{\\n    display: 'flex',\\n    gap: '8px',\\n    padding: '24px',\\n    background: '#212121'\\n  }}>\\n      <Chip colors='dark'>\\u0427\\u0438\\u043F\\u0441 \\u043E\\u0431\\u044B\\u0447\\u043D\\u044B\\u0439</Chip>\\n      <Chip colors='dark' disabled>\\n        \\u0427\\u0438\\u043F\\u0441 \\u043E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u043D\\u044B\\u0439\\n      </Chip>\\n      <Chip colors='dark' checked>\\n        \\u0427\\u0438\\u043F\\u0441 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0439\\n      </Chip>\\n      <Chip colors='dark' checked disabled>\\n        \\u0427\\u0438\\u043F\\u0441 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0439 \\u043E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u043D\\u044B\\u0439\\n      </Chip>\\n    </div>;\\n}\",\n      ...DarkTheme.parameters?.docs?.source\n    }\n  }\n};\nWithEndIcon.parameters = {\n  ...WithEndIcon.parameters,\n  docs: {\n    ...WithEndIcon.parameters?.docs,\n    source: {\n      originalSource: \"function WithEndIcon() {\\n  const icon = <InformationSVG fill='currentColor' />;\\n  return <div style={{\\n    display: 'flex',\\n    gap: '8px'\\n  }}>\\n      <Chip endAdornment={icon}>\\u0427\\u0438\\u043F\\u0441 \\u043E\\u0431\\u044B\\u0447\\u043D\\u044B\\u0439</Chip>\\n\\n      <Chip endAdornment={icon} checked>\\n        \\u0427\\u0438\\u043F\\u0441 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0439\\n      </Chip>\\n    </div>;\\n}\",\n      ...WithEndIcon.parameters?.docs?.source\n    }\n  }\n};\nWithEndButton.parameters = {\n  ...WithEndButton.parameters,\n  docs: {\n    ...WithEndButton.parameters?.docs,\n    source: {\n      originalSource: \"function WithEndButton() {\\n  const button = <ChipIconButton onClick={() => alert('\\u041A\\u0440\\u0435\\u0441\\u0442\\u0438\\u043A \\u043D\\u0430\\u0436\\u0430\\u0442')}>\\n      <CrossSVG fill='currentColor' />\\n    </ChipIconButton>;\\n  return <div style={{\\n    display: 'flex',\\n    gap: '8px'\\n  }}>\\n      <Chip endAdornment={button}>\\u0427\\u0438\\u043F\\u0441 \\u043E\\u0431\\u044B\\u0447\\u043D\\u044B\\u0439</Chip>\\n\\n      <Chip endAdornment={button} checked>\\n        \\u0427\\u0438\\u043F\\u0441 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0439\\n      </Chip>\\n    </div>;\\n}\",\n      ...WithEndButton.parameters?.docs?.source\n    }\n  }\n};\nDifferentShapes.parameters = {\n  ...DifferentShapes.parameters,\n  docs: {\n    ...DifferentShapes.parameters?.docs,\n    source: {\n      originalSource: \"function DifferentShapes() {\\n  return <>\\n      <div style={{\\n      display: 'flex',\\n      gap: '8px'\\n    }}>\\n        <Chip shape='square'>\\u0427\\u0438\\u043F\\u0441 \\u043E\\u0431\\u044B\\u0447\\u043D\\u044B\\u0439</Chip>\\n        <Chip shape='square' checked>\\n          \\u0427\\u0438\\u043F\\u0441 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0439\\n        </Chip>\\n      </div>\\n\\n      <div style={{\\n      display: 'flex',\\n      gap: '8px',\\n      marginTop: '16px'\\n    }}>\\n        <Chip shape='pill'>\\u0427\\u0438\\u043F\\u0441 \\u043E\\u0431\\u044B\\u0447\\u043D\\u044B\\u0439</Chip>\\n        <Chip shape='pill' checked>\\n          \\u0427\\u0438\\u043F\\u0441 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0439\\n        </Chip>\\n      </div>\\n    </>;\\n}\",\n      ...DifferentShapes.parameters?.docs?.source\n    }\n  }\n};\nTextOverflow.parameters = {\n  ...TextOverflow.parameters,\n  docs: {\n    ...TextOverflow.parameters?.docs,\n    source: {\n      originalSource: \"function TextOverflow() {\\n  const style: CSSProperties = {\\n    display: 'flex',\\n    flexDirection: 'column',\\n    gap: '8px',\\n    maxWidth: '280px'\\n  };\\n  return <div style={style}>\\n      <Chip>Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi, totam!</Chip>\\n\\n      <Chip endAdornment={<InformationSVG fill='currentColor' />}>\\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi, totam!\\n      </Chip>\\n    </div>;\\n}\",\n      ...TextOverflow.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{primary:{startLoc:{col:7,line:12},endLoc:{col:1,line:18},startBody:{col:7,line:12},endBody:{col:1,line:18}},"light-theme":{startLoc:{col:7,line:20},endLoc:{col:1,line:33},startBody:{col:7,line:20},endBody:{col:1,line:33}},"dark-theme":{startLoc:{col:7,line:35},endLoc:{col:1,line:53},startBody:{col:7,line:35},endBody:{col:1,line:53}},"with-end-icon":{startLoc:{col:7,line:55},endLoc:{col:1,line:67},startBody:{col:7,line:55},endBody:{col:1,line:67}},"with-end-button":{startLoc:{col:7,line:69},endLoc:{col:1,line:83},startBody:{col:7,line:69},endBody:{col:1,line:83}},"different-shapes":{startLoc:{col:7,line:85},endLoc:{col:1,line:108},startBody:{col:7,line:85},endBody:{col:1,line:108}},"text-overflow":{startLoc:{col:7,line:110},endLoc:{col:1,line:124},startBody:{col:7,line:110},endBody:{col:1,line:124}}}},layout:"padded"}},Primary=function Primary(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{style:{display:"flex"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{children:"Чипс обычный"})})};Primary.displayName="Primary",Primary.storyName="Простой пример";const LightTheme=function LightTheme(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{style:{display:"flex",gap:"8px",padding:"24px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{children:"Чипс обычный"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{disabled:!0,children:"Чипс отключенный"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{checked:!0,children:"Чипс выбранный"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{checked:!0,disabled:!0,children:"Чипс выбранный отключенный"})]})};LightTheme.displayName="LightTheme",LightTheme.storyName="Светлая тема";const DarkTheme=function DarkTheme(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{style:{display:"flex",gap:"8px",padding:"24px",background:"#212121"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{colors:"dark",children:"Чипс обычный"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{colors:"dark",disabled:!0,children:"Чипс отключенный"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{colors:"dark",checked:!0,children:"Чипс выбранный"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{colors:"dark",checked:!0,disabled:!0,children:"Чипс выбранный отключенный"})]})};DarkTheme.displayName="DarkTheme",DarkTheme.storyName="Темная тема";const WithEndIcon=function WithEndIcon(){const icon=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_quarks_icons_16x16_Stroked_Information__WEBPACK_IMPORTED_MODULE_2__.Z,{fill:"currentColor"});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{style:{display:"flex",gap:"8px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{endAdornment:icon,children:"Чипс обычный"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{endAdornment:icon,checked:!0,children:"Чипс выбранный"})]})};WithEndIcon.displayName="WithEndIcon",WithEndIcon.storyName="С иконкой в конце";const WithEndButton=function WithEndButton(){const button=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__._,{onClick:()=>alert("Крестик нажат"),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_quarks_icons_16x16_Stroked_Cross__WEBPACK_IMPORTED_MODULE_1__.Z,{fill:"currentColor"})});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{style:{display:"flex",gap:"8px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{endAdornment:button,children:"Чипс обычный"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{endAdornment:button,checked:!0,children:"Чипс выбранный"})]})};WithEndButton.displayName="WithEndButton",WithEndButton.storyName="С кнопкой в конце";const DifferentShapes=function DifferentShapes(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{style:{display:"flex",gap:"8px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{shape:"square",children:"Чипс обычный"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{shape:"square",checked:!0,children:"Чипс выбранный"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{style:{display:"flex",gap:"8px",marginTop:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{shape:"pill",children:"Чипс обычный"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{shape:"pill",checked:!0,children:"Чипс выбранный"})]})]})};DifferentShapes.storyName="Варианты формы";const TextOverflow=function TextOverflow(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"8px",maxWidth:"280px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{children:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi, totam!"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_0__.A,{endAdornment:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_quarks_icons_16x16_Stroked_Information__WEBPACK_IMPORTED_MODULE_2__.Z,{fill:"currentColor"}),children:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi, totam!"})]})};TextOverflow.displayName="TextOverflow",TextOverflow.storyName="Переполнение",Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"function Primary() {\n  return <div style={{\n    display: 'flex'\n  }}>\n      <Chip>Чипс обычный</Chip>\n    </div>;\n}",...Primary.parameters?.docs?.source}}},LightTheme.parameters={...LightTheme.parameters,docs:{...LightTheme.parameters?.docs,source:{originalSource:"function LightTheme() {\n  return <div style={{\n    display: 'flex',\n    gap: '8px',\n    padding: '24px'\n  }}>\n      <Chip>Чипс обычный</Chip>\n      <Chip disabled>Чипс отключенный</Chip>\n      <Chip checked>Чипс выбранный</Chip>\n      <Chip checked disabled>\n        Чипс выбранный отключенный\n      </Chip>\n    </div>;\n}",...LightTheme.parameters?.docs?.source}}},DarkTheme.parameters={...DarkTheme.parameters,docs:{...DarkTheme.parameters?.docs,source:{originalSource:"function DarkTheme() {\n  return <div style={{\n    display: 'flex',\n    gap: '8px',\n    padding: '24px',\n    background: '#212121'\n  }}>\n      <Chip colors='dark'>Чипс обычный</Chip>\n      <Chip colors='dark' disabled>\n        Чипс отключенный\n      </Chip>\n      <Chip colors='dark' checked>\n        Чипс выбранный\n      </Chip>\n      <Chip colors='dark' checked disabled>\n        Чипс выбранный отключенный\n      </Chip>\n    </div>;\n}",...DarkTheme.parameters?.docs?.source}}},WithEndIcon.parameters={...WithEndIcon.parameters,docs:{...WithEndIcon.parameters?.docs,source:{originalSource:"function WithEndIcon() {\n  const icon = <InformationSVG fill='currentColor' />;\n  return <div style={{\n    display: 'flex',\n    gap: '8px'\n  }}>\n      <Chip endAdornment={icon}>Чипс обычный</Chip>\n\n      <Chip endAdornment={icon} checked>\n        Чипс выбранный\n      </Chip>\n    </div>;\n}",...WithEndIcon.parameters?.docs?.source}}},WithEndButton.parameters={...WithEndButton.parameters,docs:{...WithEndButton.parameters?.docs,source:{originalSource:"function WithEndButton() {\n  const button = <ChipIconButton onClick={() => alert('Крестик нажат')}>\n      <CrossSVG fill='currentColor' />\n    </ChipIconButton>;\n  return <div style={{\n    display: 'flex',\n    gap: '8px'\n  }}>\n      <Chip endAdornment={button}>Чипс обычный</Chip>\n\n      <Chip endAdornment={button} checked>\n        Чипс выбранный\n      </Chip>\n    </div>;\n}",...WithEndButton.parameters?.docs?.source}}},DifferentShapes.parameters={...DifferentShapes.parameters,docs:{...DifferentShapes.parameters?.docs,source:{originalSource:"function DifferentShapes() {\n  return <>\n      <div style={{\n      display: 'flex',\n      gap: '8px'\n    }}>\n        <Chip shape='square'>Чипс обычный</Chip>\n        <Chip shape='square' checked>\n          Чипс выбранный\n        </Chip>\n      </div>\n\n      <div style={{\n      display: 'flex',\n      gap: '8px',\n      marginTop: '16px'\n    }}>\n        <Chip shape='pill'>Чипс обычный</Chip>\n        <Chip shape='pill' checked>\n          Чипс выбранный\n        </Chip>\n      </div>\n    </>;\n}",...DifferentShapes.parameters?.docs?.source}}},TextOverflow.parameters={...TextOverflow.parameters,docs:{...TextOverflow.parameters?.docs,source:{originalSource:"function TextOverflow() {\n  const style: CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '8px',\n    maxWidth: '280px'\n  };\n  return <div style={style}>\n      <Chip>Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi, totam!</Chip>\n\n      <Chip endAdornment={<InformationSVG fill='currentColor' />}>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi, totam!\n      </Chip>\n    </div>;\n}",...TextOverflow.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","LightTheme","DarkTheme","WithEndIcon","WithEndButton","DifferentShapes","TextOverflow"]}}]);