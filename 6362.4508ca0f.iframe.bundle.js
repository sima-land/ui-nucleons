"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[6362],{"./src/masked-input/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>MaskedInput});var react=__webpack_require__("./node_modules/react/index.js"),input=__webpack_require__("./src/input/index.ts"),utils=__webpack_require__("./node_modules/@krutoo/input-mask/dist/dom/utils.js"),hooks=__webpack_require__("./src/hooks/index.ts"),on=__webpack_require__("./src/helpers/on.ts"),core=__webpack_require__("./node_modules/@krutoo/input-mask/dist/core/index.js"),redux=__webpack_require__("./node_modules/redux/es/redux.js");const actions={manualChange:createAction("manual/change"),inputChange:createAction("input/change"),inputSelectionChange:createAction("input/selection-change")};function createInputMaskStore(options,initialState){const reducer=function createDomReducer(options){const innerReducer=(0,core.createReducer)(options),processState=(a,b)=>innerReducer(a,(0,core.defineChanges)(a,b)),initialState=utils.ZM.init(options);return(state=initialState,action)=>{let result=state;if(actions.inputChange.is(action))result=processState(state,utils.ZM.fromTarget(action.payload.input));else if(actions.inputSelectionChange.is(action))result=utils.ZM.fromTarget(action.payload.input);else if(actions.manualChange.is(action)){const validCleanValue=action.payload.value.split("").filter((c=>c.match(options.pattern))).join(""),newMaskedValue=utils.B4.toMasked(options,validCleanValue),firstPlace=options.mask.indexOf(options.placeholder);result=processState(utils.ZM.of(state.value,utils.e6.of(firstPlace,state.value.length)),utils.ZM.of(newMaskedValue,utils.e6.of(newMaskedValue.length)))}return result}}(options);return(0,redux.jB)(reducer,initialState)}function createAction(type){const creator=payload=>({type,payload});return creator.is=action=>action.type===type,creator}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function MaskedInput({value,defaultValue,...props}){const stateless=(0,react.useMemo)((()=>void 0!==value),[]),[currentValue,setCurrentValue]=(0,react.useState)((()=>value??defaultValue??""));return stateless?(0,jsx_runtime.jsx)(StatelessMaskedInput,{...props,value}):(0,jsx_runtime.jsx)(StatelessMaskedInput,{...props,value:currentValue,onChange:(event,data)=>{setCurrentValue(data.cleanValue),props.onChange?.(event,data)}})}function StatelessMaskedInput({mask,placeholder="_",pattern="\\d",value="",baseInputProps,onFocus,onChange,onInput,onBlur,inputRef,...props}){const currentValue=(0,react.useMemo)((()=>value),[value]),{store,bind}=function useInputMask({value,maskOptions:maskOptionsProp}){const inputRef=(0,react.useRef)(null),maskOptions=(0,react.useMemo)((()=>({mask:maskOptionsProp.mask,pattern:new RegExp(maskOptionsProp.pattern),placeholder:maskOptionsProp.placeholder})),[maskOptionsProp.mask,maskOptionsProp.pattern,maskOptionsProp.placeholder]),createStore=(0,react.useCallback)((()=>{const newStore=createInputMaskStore(maskOptions);return newStore.dispatch(actions.manualChange({value})),newStore}),[value,maskOptions]),store=(0,react.useMemo)(createStore,[maskOptions]);(0,hooks.LI)((()=>{const offList=[store.subscribe((()=>{inputRef.current&&utils.ZM.applyDiff(store.getState(),inputRef.current)})),(0,on.on)(document,"selectionchange",(()=>{inputRef.current&&inputRef.current===document.activeElement&&store.dispatch(actions.inputSelectionChange({input:inputRef.current}))}))];return()=>offList.forEach((fn=>fn()))}),[store,inputRef]),value!==utils.B4.toClean(maskOptions,store.getState().value)&&store.dispatch(actions.manualChange({value}));const onInput=(0,react.useCallback)((event=>{store.dispatch(actions.inputChange({input:event.currentTarget}))}),[store]);return{store,bind:{ref:inputRef,value:store.getState().value,onInput}}}({value:currentValue,maskOptions:{mask,pattern,placeholder}});(0,react.useImperativeHandle)(inputRef,(()=>bind.ref.current));const getMaskData=(0,react.useCallback)((()=>({value:store.getState().value,cleanValue:utils.B4.toClean({mask,placeholder},store.getState().value),completed:store.getState().value.length===mask.length})),[store,mask,placeholder]);return(0,jsx_runtime.jsx)(input.I,{...props,baseInputProps:{...baseInputProps,restPlaceholder:baseInputProps?.restPlaceholder??{value:mask.slice(store.getState().value.length),shiftValue:store.getState().value}},inputRef:bind.ref,value:bind.value,onFocus:event=>{onFocus?.(event,getMaskData())},onInput:event=>{bind.onInput(event),onInput?.(event,getMaskData())},onChange:event=>{onChange?.(event,getMaskData())},onBlur:event=>{onBlur?.(event,getMaskData())}})}try{MaskedInput.displayName="MaskedInput",MaskedInput.__docgenInfo={description:"Поле ввода текста по маске.",displayName:"MaskedInput",props:{onFocus:{defaultValue:null,description:"Сработает при фокусе. Вторым аргументом получит данные поля с маской.",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement, Element>, data: MaskData) => void) | undefined"}},onChange:{defaultValue:null,description:"Сработает при вводе. Вторым аргументом получит данные поля с маской.",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>, data: MaskData) => void) | undefined"}},onInput:{defaultValue:null,description:"Сработает при вводе. Вторым аргументом получит данные поля с маской.",name:"onInput",required:!1,type:{name:"((event: FormEvent<HTMLInputElement>, data: MaskData) => void) | undefined"}},onBlur:{defaultValue:null,description:'Сработает при "blur". Вторым аргументом получит данные поля с маской.',name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement, Element>, data: MaskData) => void) | undefined"}},className:{defaultValue:null,description:"CSS-класс корневого элемента.",name:"className",required:!1,type:{name:"string | undefined"}},type:{defaultValue:null,description:"Тип поля.",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"number"'},{value:'"search"'},{value:'"text"'},{value:'"email"'},{value:'"password"'},{value:'"tel"'}]}},size:{defaultValue:null,description:"Размер.",name:"size",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},value:{defaultValue:null,description:"Значение.",name:"value",required:!1,type:{name:"string | undefined"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию.",name:"defaultValue",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Стили корневого элемента.",name:"style",required:!1,type:{name:"FieldBlockStyle | undefined"}},"data-testid":{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования.",name:"data-testid",required:!1,type:{name:"string | undefined"}},failed:{defaultValue:null,description:"Состояние с ошибкой.",name:"failed",required:!1,type:{name:"boolean | undefined"}},caption:{defaultValue:null,description:"Подпись под полем.",name:"caption",required:!1,type:{name:"string | undefined"}},label:{defaultValue:null,description:"Ярлык в поле.",name:"label",required:!1,type:{name:"string | undefined"}},main:{defaultValue:null,description:"Основное содержимое.",name:"main",required:!1,type:{name:"ReactNode"}},rootRef:{defaultValue:null,description:"Ref корневого элемента.",name:"rootRef",required:!1,type:{name:"Ref<HTMLDivElement> | undefined"}},inputRef:{defaultValue:null,description:"Ref элемента input.",name:"inputRef",required:!1,type:{name:"Ref<HTMLInputElement> | undefined"}},rootProps:{defaultValue:null,description:"Опции корневого элемента.",name:"rootProps",required:!1,type:{name:"NoChildren<WithStyle<HTMLAttributes<HTMLDivElement>>> | undefined"}},focused:{defaultValue:null,description:"Состояние фокуса.",name:"focused",required:!1,type:{name:"boolean | undefined"}},labelAsPlaceholder:{defaultValue:null,description:"Выводить ярлык вместо placeholder или введенного значения.",name:"labelAsPlaceholder",required:!1,type:{name:"boolean | undefined"}},labelProps:{defaultValue:null,description:"Опции элемента ярлыка.",name:"labelProps",required:!1,type:{name:"NoChildren<LabelHTMLAttributes<HTMLLabelElement>> | undefined"}},fixedHeight:{defaultValue:null,description:"Фиксировать высоту.",name:"fixedHeight",required:!1,type:{name:"boolean | undefined"}},blockProps:{defaultValue:null,description:"Опции элемента блока поля.",name:"blockProps",required:!1,type:{name:"NoChildren<WithStyle<HTMLAttributes<HTMLDivElement>>> | undefined"}},blockRef:{defaultValue:null,description:"Ref элемента блока поля.",name:"blockRef",required:!1,type:{name:"Ref<HTMLDivElement> | undefined"}},adornmentStart:{defaultValue:null,description:"Украшение перед основным содержимым.",name:"adornmentStart",required:!1,type:{name:"ReactNode"}},adornmentEnd:{defaultValue:null,description:"Украшение после основного содержимого.",name:"adornmentEnd",required:!1,type:{name:"ReactNode"}},mainProps:{defaultValue:null,description:"Опции основного содержимого.",name:"mainProps",required:!1,type:{name:"NoChildren<WithStyle<HTMLAttributes<HTMLDivElement>>> | undefined"}},baseInputProps:{defaultValue:null,description:"Свойства BaseInputProps.",name:"baseInputProps",required:!1,type:{name:"BaseInputAsInputProps | undefined"}},clearable:{defaultValue:null,description:"Нужно ли выводить кнопку очистки поля.",name:"clearable",required:!1,type:{name:"boolean | undefined"}},onClear:{defaultValue:null,description:"Сработает при очистке поля.",name:"onClear",required:!1,type:{name:"MouseEventHandler<SVGSVGElement> | undefined"}},mask:{defaultValue:null,description:"Строковое представление маски.",name:"mask",required:!0,type:{name:"string"}},pattern:{defaultValue:null,description:"Строковое представление регулярного выражения только доступных для ввода символов.",name:"pattern",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/masked-input/masked-input.tsx#MaskedInput"]={docgenInfo:MaskedInput.__docgenInfo,name:"MaskedInput",path:"src/masked-input/masked-input.tsx#MaskedInput"})}catch(__react_docgen_typescript_loader_error){}},"./src/phone-input/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{s:()=>PhoneInput});var react=__webpack_require__("./node_modules/react/index.js"),dropdown_item=__webpack_require__("./src/dropdown-item/index.ts"),hooks=__webpack_require__("./src/hooks/index.ts"),masked_input=__webpack_require__("./src/masked-input/index.ts");const russia_namespaceObject=__webpack_require__.p+"static/media/russia.bd02d8d3.png",kazakhstan_namespaceObject=__webpack_require__.p+"static/media/kazakhstan.b59d89f8.png",armenia_namespaceObject=__webpack_require__.p+"static/media/armenia.103f3efc.png",belarus_namespaceObject=__webpack_require__.p+"static/media/belarus.7bcc953b.png",kyrgyzstan_namespaceObject=__webpack_require__.p+"static/media/kyrgyzstan.1cb17f7d.png",azerbaijan_namespaceObject=__webpack_require__.p+"static/media/azerbaijan.988611a5.png",georgia_namespaceObject=__webpack_require__.p+"static/media/georgia.44e46fda.png",moldova_namespaceObject=__webpack_require__.p+"static/media/moldova.e9f13b93.png",tajikistan_namespaceObject=__webpack_require__.p+"static/media/tajikistan.f454fe62.png",turkmenistan_namespaceObject=__webpack_require__.p+"static/media/turkmenistan.8b63270e.png",uzbekistan_namespaceObject=__webpack_require__.p+"static/media/uzbekistan.8bba3b87.png",ukraine_namespaceObject=__webpack_require__.p+"static/media/ukraine.17bac3a5.png",other_namespaceObject=__webpack_require__.p+"static/media/other.d1c6e1ab.png",IDS={russia:"russia",kazakhstan:"kazakhstan",armenia:"armenia",belarus:"belarus",kyrgyzstan:"kyrgyzstan",azerbaijan:"azerbaijan",georgia:"georgia",moldova:"moldova",tajikistan:"tajikistan",turkmenistan:"turkmenistan",uzbekistan:"uzbekistan",ukraine:"ukraine",other:"other"},NAMES={[IDS.russia]:"Россия",[IDS.kazakhstan]:"Казахстан",[IDS.armenia]:"Армения",[IDS.belarus]:"Беларусь",[IDS.kyrgyzstan]:"Кыргызстан",[IDS.azerbaijan]:"Азербайджан",[IDS.georgia]:"Грузия",[IDS.moldova]:"Молдова",[IDS.tajikistan]:"Таджикистан",[IDS.turkmenistan]:"Туркмения",[IDS.uzbekistan]:"Узбекистан",[IDS.ukraine]:"Украина",[IDS.other]:"Другое"},MASKS={[IDS.russia]:"+7 (___) ___-__-__",[IDS.kazakhstan]:"+7 (___) ___-__-__",[IDS.armenia]:"+374-__-___-___",[IDS.belarus]:"+375 (__) ___-__-__",[IDS.kyrgyzstan]:"+996 (___) ___-___",[IDS.azerbaijan]:"+994-__-___-__-__",[IDS.georgia]:"+995 (___) ___-___",[IDS.moldova]:"+373-____-____",[IDS.tajikistan]:"+992-__-___-____",[IDS.turkmenistan]:"+993-_-___-____",[IDS.uzbekistan]:"+998-__-___-____",[IDS.ukraine]:"+380 (__) ___-__-__",[IDS.other]:"_______________"},IMAGES={[IDS.russia]:russia_namespaceObject,[IDS.kazakhstan]:kazakhstan_namespaceObject,[IDS.armenia]:armenia_namespaceObject,[IDS.belarus]:belarus_namespaceObject,[IDS.kyrgyzstan]:kyrgyzstan_namespaceObject,[IDS.azerbaijan]:azerbaijan_namespaceObject,[IDS.georgia]:georgia_namespaceObject,[IDS.moldova]:moldova_namespaceObject,[IDS.tajikistan]:tajikistan_namespaceObject,[IDS.turkmenistan]:turkmenistan_namespaceObject,[IDS.uzbekistan]:uzbekistan_namespaceObject,[IDS.ukraine]:ukraine_namespaceObject,[IDS.other]:other_namespaceObject},CODES={[IDS.russia]:"+7",[IDS.kazakhstan]:"+7",[IDS.armenia]:"+374",[IDS.belarus]:"+375",[IDS.kyrgyzstan]:"+996",[IDS.azerbaijan]:"+994",[IDS.georgia]:"+995",[IDS.moldova]:"+373",[IDS.tajikistan]:"+992",[IDS.turkmenistan]:"+993",[IDS.uzbekistan]:"+998",[IDS.ukraine]:"+380",[IDS.other]:""},countriesList=[IDS.russia,IDS.kazakhstan,IDS.armenia,IDS.belarus,IDS.kyrgyzstan,IDS.azerbaijan,IDS.georgia,IDS.moldova,IDS.tajikistan,IDS.turkmenistan,IDS.uzbekistan,IDS.ukraine,IDS.other].map((id=>({id,name:NAMES[id],code:CODES[id],codeChars:CODES[id].replace(/\D/g,""),mask:MASKS[id],imageSrc:IMAGES[id]}))),countries=countriesList.reduce(((acc,item)=>({...acc,[item.id]:item})),{});const PhoneValue={addCode:(value,country)=>`${country.codeChars}${value.replace(/\D/g,"")}`,removeCode:(value,country)=>value.replace(/\D/g,"").slice(country.codeChars.length)};var src_select=__webpack_require__("./src/select/index.ts"),utils=__webpack_require__("./src/select/utils.ts"),ArrowExpandUp=__webpack_require__("./node_modules/@sima-land/ui-quarks/dist/esm/icons/16x16/Stroked/ArrowExpandUp.js"),ArrowExpandDown=__webpack_require__("./node_modules/@sima-land/ui-quarks/dist/esm/icons/16x16/Stroked/ArrowExpandDown.js"),bind=__webpack_require__("./node_modules/classnames/bind.js"),bind_default=__webpack_require__.n(bind),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),phone_input_m=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[17].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/phone-input/phone-input.m.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(phone_input_m.Z,options);const phone_input_phone_input_m=phone_input_m.Z&&phone_input_m.Z.locals?phone_input_m.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const cx=bind_default().bind(phone_input_phone_input_m);function PhoneInput({value,defaultValue,...props}){const stateless=(0,react.useMemo)((()=>void 0!==value),[]),[currentValue,setCurrentValue]=(0,react.useState)((()=>value??defaultValue??""));return stateless?(0,jsx_runtime.jsx)(StatelessPhoneInput,{...props,value}):(0,jsx_runtime.jsx)(StatelessPhoneInput,{...props,value:currentValue,onChange:(event,data)=>{setCurrentValue(data.cleanValue),props.onChange?.(event,data)}})}function StatelessPhoneInput({value="",label="Телефон",inputRef:inputRefProp,blockRef:blockRefProp,onBlur,onChange,onInput,onFocus,onCountrySelect,dropdownProps,onMenuOpen,onMenuClose,disabled,"data-testid":testId="phone-input",...props}){const inputRef=(0,react.useRef)(null),[country,setCountry]=(0,react.useState)((()=>function defineCountry(value){let result;return value&&(result=countriesList.find((({codeChars})=>0===value.indexOf(codeChars))),result&&result.id===IDS.russia&&["6","7"].includes(value[1])&&(result=countries.kazakhstan)),result||countries.russia}(value))),[plainValue,setPlainValue]=(0,react.useState)((()=>PhoneValue.removeCode(value,country)));(0,hooks.LI)((()=>{setPlainValue(PhoneValue.removeCode(value,country))}),[value]),(0,react.useImperativeHandle)(inputRefProp,(()=>inputRef.current));const blockRef=(0,react.useRef)(null);(0,react.useImperativeHandle)(blockRefProp,(()=>blockRef.current));const dispatchCountrySelect=(0,react.useCallback)(((selected,input)=>{const syntheticEvent=function stubSyntheticEvent(element,nativeEvent){return{nativeEvent,currentTarget:element,target:element,type:nativeEvent.type,bubbles:nativeEvent.bubbles,cancelable:nativeEvent.cancelable,eventPhase:nativeEvent.eventPhase,isTrusted:nativeEvent.isTrusted,timeStamp:nativeEvent.timeStamp,defaultPrevented:!1,isDefaultPrevented:()=>!1,isPropagationStopped:()=>!1,persist:()=>{},preventDefault:()=>{},stopPropagation:()=>{}}}(input,new Event("input"));onInput?.(syntheticEvent,{value:input.value,cleanValue:PhoneValue.addCode(plainValue,selected),completed:!1}),onChange?.(syntheticEvent,{value:input.value,cleanValue:PhoneValue.addCode(plainValue,selected),completed:!1}),onCountrySelect?.(selected)}),[onChange,onInput,onCountrySelect,plainValue]),getMaskData=(0,react.useCallback)((data=>({...data,completed:data.completed||country.id===IDS.other,cleanValue:PhoneValue.addCode(data.cleanValue,country)})),[country]),isInitialCountryRef=(0,react.useRef)(!0);(0,hooks.LI)((()=>{!isInitialCountryRef.current&&inputRef.current&&dispatchCountrySelect(country,inputRef.current),isInitialCountryRef.current=!1}),[country]);const selectCountry=(0,react.useCallback)((selected=>{setCountry(selected),setPlainValue("")}),[]);return(0,jsx_runtime.jsx)(src_select.P,{opener:(0,jsx_runtime.jsx)(PhoneMaskedInput,{...props,disabled,"data-testid":testId,country,inputRef,blockRef,label,mask:country.mask,onFocus:(event,data)=>{onFocus?.(event,getMaskData(data))},onChange:(event,data)=>{setPlainValue(data.cleanValue),onChange?.(event,getMaskData(data))},onInput:(event,data)=>{setPlainValue(data.cleanValue),onInput?.(event,getMaskData(data))},onBlur:(event,data)=>{onBlur?.(event,getMaskData(data))},value:plainValue}),onValueChange:itemValue=>{const found=countriesList.find((item=>item.id===itemValue));found&&selectCountry(found)},dropdownProps,onMenuOpen,onMenuClose,disabled,children:countriesList.map(((item,index)=>(0,jsx_runtime.jsx)(dropdown_item.h,{value:item.id,size:"m",role:"menuitem",onMouseDown:event=>{event.preventDefault()},selected:item.id===country.id,startContent:(0,jsx_runtime.jsx)("img",{alt:"",width:24,height:24,src:item.imageSrc,className:cx("item-icon")}),endContent:item.code,children:item.name},index)))})}function PhoneMaskedInput({country,blockRef:blockRefProp,disabled,...props}){const select=(0,react.useContext)(utils.Z),blockRef=(0,react.useRef)(null),[openerFocused,setOpenerFocused]=(0,react.useState)(!1);(0,react.useImperativeHandle)(blockRefProp,(()=>blockRef.current)),(0,react.useImperativeHandle)(select.anchorRef,(()=>blockRef.current));const ArrowSVG=select.opened?ArrowExpandUp.Z:ArrowExpandDown.Z;return(0,jsx_runtime.jsx)(masked_input.C,{...props,focused:select.opened||openerFocused||void 0,blockRef,baseInputProps:{restPlaceholder:country.id===IDS.other?"":void 0,...props.baseInputProps},disabled,adornmentEnd:(0,jsx_runtime.jsxs)("div",{ref:select.openerRef,onBlur:()=>setOpenerFocused(!1),onFocus:()=>setOpenerFocused(!0),role:"combobox","aria-label":"Выбор страны","aria-disabled":disabled,className:cx("opener",{disabled}),"data-testid":"phone-input:menu-opener",...!disabled&&{tabIndex:0,onKeyDown:select.onKeyDown,onMouseDown:select.onMouseDown},children:[(0,jsx_runtime.jsx)("img",{alt:"",width:24,height:24,src:country.imageSrc}),(0,jsx_runtime.jsx)(ArrowSVG,{className:phone_input_phone_input_m.arrow})]})})}try{PhoneInput.displayName="PhoneInput",PhoneInput.__docgenInfo={description:"Поле ввода номера телефона.",displayName:"PhoneInput",props:{onCountrySelect:{defaultValue:null,description:"Сработает при выборе страны из выпадающего списка.",name:"onCountrySelect",required:!1,type:{name:"((country: Country) => void) | undefined"}},dropdownProps:{defaultValue:null,description:"Свойства компонента Dropdown.",name:"dropdownProps",required:!1,type:{name:'Omit<DropdownProps, "rootRef" | "viewportRef"> | undefined'}},onMenuOpen:{defaultValue:null,description:"Сработает при открытии меню.",name:"onMenuOpen",required:!1,type:{name:"VoidFunction | undefined"}},onMenuClose:{defaultValue:null,description:"Сработает при закрытии меню.",name:"onMenuClose",required:!1,type:{name:"VoidFunction | undefined"}},className:{defaultValue:null,description:"CSS-класс корневого элемента.",name:"className",required:!1,type:{name:"string | undefined"}},type:{defaultValue:null,description:"Тип поля.",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"number"'},{value:'"search"'},{value:'"text"'},{value:'"email"'},{value:'"password"'},{value:'"tel"'}]}},size:{defaultValue:null,description:"Размер.",name:"size",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},value:{defaultValue:null,description:"Значение.",name:"value",required:!1,type:{name:"string | undefined"}},onChange:{defaultValue:null,description:"Сработает при вводе. Вторым аргументом получит данные поля с маской.",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>, data: MaskData) => void) | undefined"}},defaultValue:{defaultValue:null,description:"Значение по умолчанию.",name:"defaultValue",required:!1,type:{name:"string | undefined"}},style:{defaultValue:null,description:"Стили корневого элемента.",name:"style",required:!1,type:{name:"FieldBlockStyle | undefined"}},onFocus:{defaultValue:null,description:"Сработает при фокусе. Вторым аргументом получит данные поля с маской.",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement, Element>, data: MaskData) => void) | undefined"}},onBlur:{defaultValue:null,description:'Сработает при "blur". Вторым аргументом получит данные поля с маской.',name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement, Element>, data: MaskData) => void) | undefined"}},onInput:{defaultValue:null,description:"Сработает при вводе. Вторым аргументом получит данные поля с маской.",name:"onInput",required:!1,type:{name:"((event: FormEvent<HTMLInputElement>, data: MaskData) => void) | undefined"}},"data-testid":{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования.",name:"data-testid",required:!1,type:{name:"string | undefined"}},failed:{defaultValue:null,description:"Состояние с ошибкой.",name:"failed",required:!1,type:{name:"boolean | undefined"}},caption:{defaultValue:null,description:"Подпись под полем.",name:"caption",required:!1,type:{name:"string | undefined"}},label:{defaultValue:null,description:"Ярлык в поле.",name:"label",required:!1,type:{name:"string | undefined"}},main:{defaultValue:null,description:"Основное содержимое.",name:"main",required:!1,type:{name:"ReactNode"}},rootRef:{defaultValue:null,description:"Ref корневого элемента.",name:"rootRef",required:!1,type:{name:"Ref<HTMLDivElement> | undefined"}},inputRef:{defaultValue:null,description:"Ref элемента input.",name:"inputRef",required:!1,type:{name:"Ref<HTMLInputElement> | undefined"}},rootProps:{defaultValue:null,description:"Опции корневого элемента.",name:"rootProps",required:!1,type:{name:"NoChildren<WithStyle<HTMLAttributes<HTMLDivElement>>> | undefined"}},focused:{defaultValue:null,description:"Состояние фокуса.",name:"focused",required:!1,type:{name:"boolean | undefined"}},labelAsPlaceholder:{defaultValue:null,description:"Выводить ярлык вместо placeholder или введенного значения.",name:"labelAsPlaceholder",required:!1,type:{name:"boolean | undefined"}},labelProps:{defaultValue:null,description:"Опции элемента ярлыка.",name:"labelProps",required:!1,type:{name:"NoChildren<LabelHTMLAttributes<HTMLLabelElement>> | undefined"}},fixedHeight:{defaultValue:null,description:"Фиксировать высоту.",name:"fixedHeight",required:!1,type:{name:"boolean | undefined"}},blockProps:{defaultValue:null,description:"Опции элемента блока поля.",name:"blockProps",required:!1,type:{name:"NoChildren<WithStyle<HTMLAttributes<HTMLDivElement>>> | undefined"}},blockRef:{defaultValue:null,description:"Ref элемента блока поля.",name:"blockRef",required:!1,type:{name:"Ref<HTMLDivElement> | undefined"}},adornmentStart:{defaultValue:null,description:"Украшение перед основным содержимым.",name:"adornmentStart",required:!1,type:{name:"ReactNode"}},adornmentEnd:{defaultValue:null,description:"Украшение после основного содержимого.",name:"adornmentEnd",required:!1,type:{name:"ReactNode"}},mainProps:{defaultValue:null,description:"Опции основного содержимого.",name:"mainProps",required:!1,type:{name:"NoChildren<WithStyle<HTMLAttributes<HTMLDivElement>>> | undefined"}},baseInputProps:{defaultValue:null,description:"Свойства BaseInputProps.",name:"baseInputProps",required:!1,type:{name:"BaseInputAsInputProps | undefined"}},clearable:{defaultValue:null,description:"Нужно ли выводить кнопку очистки поля.",name:"clearable",required:!1,type:{name:"boolean | undefined"}},onClear:{defaultValue:null,description:"Сработает при очистке поля.",name:"onClear",required:!1,type:{name:"MouseEventHandler<SVGSVGElement> | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/phone-input/phone-input.tsx#PhoneInput"]={docgenInfo:PhoneInput.__docgenInfo,name:"PhoneInput",path:"src/phone-input/phone-input.tsx#PhoneInput"})}catch(__react_docgen_typescript_loader_error){}},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[17].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/phone-input/phone-input.m.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".phone-input-m__opener__aa1{display:flex;align-items:center;user-select:none;padding:8px;margin:-8px;border-radius:4px}.phone-input-m__opener__aa1:focus-visible{outline:0;background:#e4f1f9}.phone-input-m__opener__aa1:not(.phone-input-m__disabled__b02){cursor:pointer}.phone-input-m__arrow__c22{display:block;fill:#9e9e9e;margin-left:4px;pointer-events:none}.phone-input-m__item-icon__d2f{display:block}","",{version:3,sources:["webpack://./src/phone-input/phone-input.m.scss","webpack://./src/colors.scss"],names:[],mappings:"AAEA,4BACE,YAAA,CACA,kBAAA,CACA,gBAAA,CACA,WAAA,CACA,WAAA,CACA,iBAAA,CACA,0CACE,SAAA,CACA,kBCsBa,CDpBf,+DACE,cAAA,CAIJ,2BACE,aAAA,CACA,YCZa,CDab,eAAA,CACA,mBAAA,CAGF,+BACE,aAAA",sourcesContent:["@use '../colors';\n\n.opener {\n  display: flex;\n  align-items: center;\n  user-select: none;\n  padding: 8px;\n  margin: -8px;\n  border-radius: 4px;\n  &:focus-visible {\n    outline: 0;\n    background: colors.$additional-sky;\n  }\n  &:not(.disabled) {\n    cursor: pointer;\n  }\n}\n\n.arrow {\n  display: block;\n  fill: colors.$basic-gray38;\n  margin-left: 4px;\n  pointer-events: none; // игнорируем клики т.к. после них элемент стрелки подменяется и считается что он сработал вне элемента родителя\n}\n\n.item-icon {\n  display: block;\n}\n","// GENERATED FILE - DO NOT CHANGE IT MANUALLY\n\n// basic\n$basic-blue: #1f84db;\n$basic-gray87: #212121;\n$basic-gray76: #3a3a3b;\n$basic-gray66: #545455;\n$basic-gray54: #757575;\n$basic-gray38: #9e9e9e;\n$basic-gray24: #c2c2c2;\n$basic-gray12: #e0e0e0;\n$basic-gray8: #ebebeb;\n$basic-gray4: #f5f5f5;\n$basic-gray2: #fafafa;\n$basic-white: #fff;\n\n// additional\n$additional-deep-red: #d50000;\n$additional-red: #fb3a2f;\n$additional-light-red: #feebea;\n$additional-dark-teal: #089176;\n$additional-teal: #09ab8b;\n$additional-green: #00c853;\n$additional-light-green: #64dd17;\n$additional-lime: #aeea00;\n$additional-faded-green: #eff9ea;\n$additional-pink: #e82e5c;\n$additional-purple: #b52ea8;\n$additional-violet: #902bd0;\n$additional-deep-purple: #634bdf;\n$additional-electric-blue: #2962ff;\n$additional-light-blue: #0091ea;\n$additional-cyan: #00b8d4;\n$additional-sky: #e4f1f9;\n$additional-deep-orange: #ff7200;\n$additional-amber: #ffab00;\n$additional-yellow: #ffd600;\n$additional-gold: #d5a43b;\n$additional-brown: #795548;\n$additional-blue-gray: #607d8b;\n$additional-deep-blue: #00599d;\n$additional-dark-blue: #002b41;\n$additional-unlit-blue: #1b75c2;\n$additional-crimson: #f4446b;\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={opener:"phone-input-m__opener__aa1",disabled:"phone-input-m__disabled__b02",arrow:"phone-input-m__arrow__c22","item-icon":"phone-input-m__item-icon__d2f"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);