"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[7079],{"./src/field-grid/__stories__/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var react=__webpack_require__("./node_modules/react/index.js"),bind=__webpack_require__("./node_modules/classnames/bind.js"),bind_default=__webpack_require__.n(bind),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),field_grid_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[15].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/field-grid/field-grid.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(field_grid_module.Z,options);const field_grid_field_grid_module=field_grid_module.Z&&field_grid_module.Z.locals?field_grid_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const cx=bind_default().bind(field_grid_field_grid_module),cellSizeByCount={1:"full",2:"half",3:"third"},TypeCheck_isRow=child=>child&&child.type===Row,TypeCheck_isCell=child=>child&&child.type===Cell,FieldGrid=({children,rootProps})=>{const rows=react.Children.toArray(children).filter(TypeCheck_isRow);return(0,jsx_runtime.jsx)("div",{...rootProps,className:cx("container",rootProps?.className),children:rows.map(((row,index)=>(0,react.cloneElement)(row,{isFirst:0===index,isLast:index===rows.length-1})))})};FieldGrid.displayName="FieldGrid";const Row=({isFirst:isFirstRow,isLast:isLastRow,children})=>{const cells=react.Children.toArray(children).filter(TypeCheck_isCell).slice(0,3),cellSize=cellSizeByCount[cells.length];return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:cells.map(((cell,index)=>{const isFirstCell=0===index,isLastCell=index===cells.length-1;let rounds="none";return isFirstRow&&isLastRow?isFirstCell&&isLastCell?rounds="all":isFirstCell?rounds="left":isLastCell&&(rounds="right"):isFirstRow?isFirstCell&&isLastCell?rounds="top":isFirstCell?rounds="topLeft":isLastCell&&(rounds="topRight"):isLastRow&&(isFirstCell&&isLastCell?rounds="bottom":isFirstCell?rounds="bottomLeft":isLastCell&&(rounds="bottomRight")),(0,react.cloneElement)(cell,{size:cellSize,rounds})}))})},Cell=({size,rounds,field,renderField})=>{let content;return renderField?content=renderField({rounds,caption:void 0}):field&&(content=(0,react.cloneElement)(field,{rounds,caption:void 0,classes:{...field.props.classes,blockFocused:cx(field.props.classes?.blockFocused,"focused-field")},className:cx(field.props.className,"size-full")})),(0,jsx_runtime.jsx)("div",{className:cx("cell",`size-${size}`),children:content})};Cell.displayName="Cell",FieldGrid.Row=Row,FieldGrid.Cell=Cell;try{FieldGrid.displayName="FieldGrid",FieldGrid.__docgenInfo={description:"Сетка полей.",displayName:"FieldGrid",props:{children:{defaultValue:null,description:"Содержимое.",name:"children",required:!0,type:{name:"ItOrArray<ReactElement<RowProps, FC<RowProps>>>"}},rootProps:{defaultValue:null,description:"Свойства корневого элемента.",name:"rootProps",required:!1,type:{name:"HTMLAttributes<HTMLDivElement> | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/field-grid/index.tsx#FieldGrid"]={docgenInfo:FieldGrid.__docgenInfo,name:"FieldGrid",path:"src/field-grid/index.tsx#FieldGrid"})}catch(__react_docgen_typescript_loader_error){}var text_field=__webpack_require__("./src/text-field/index.tsx");function DisplayWrapper({children}){return(0,jsx_runtime.jsx)("div",{style:{margin:"0 auto",marginTop:16,background:"#fff",maxWidth:1024},children})}DisplayWrapper.displayName="DisplayWrapper";const index_stories={title:"deprecated/FieldGrid",component:FieldGrid,parameters:{storySource:{source:"import { FieldGrid } from '@sima-land/ui-nucleons/field-grid';\nimport { TextField } from '@sima-land/ui-nucleons/text-field';\nimport { ReactNode } from 'react';\nfunction DisplayWrapper({\n  children\n}: {\n  children?: ReactNode;\n}) {\n  return <div style={{\n    margin: '0 auto',\n    marginTop: 16,\n    background: '#fff',\n    maxWidth: 1024\n  }}>\n      {children}\n    </div>;\n}\nexport default {\n  title: 'deprecated/FieldGrid',\n  component: FieldGrid,\n  parameters: {\n    layout: 'padded'\n  }\n};\nexport const Primary = () => <>\n    <DisplayWrapper>\n      <FieldGrid>\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n      </FieldGrid>\n    </DisplayWrapper>\n\n    <DisplayWrapper>\n      <FieldGrid>\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n      </FieldGrid>\n    </DisplayWrapper>\n\n    <DisplayWrapper>\n      <FieldGrid>\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n      </FieldGrid>\n    </DisplayWrapper>\n\n    <DisplayWrapper>\n      <FieldGrid>\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField disabled defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField multiline defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n      </FieldGrid>\n    </DisplayWrapper>\n  </>;\nPrimary.parameters = {\n  ...Primary.parameters,\n  docs: {\n    ...Primary.parameters?.docs,\n    source: {\n      originalSource: \"() => <>\\n    <DisplayWrapper>\\n      <FieldGrid>\\n        <FieldGrid.Row>\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n        </FieldGrid.Row>\\n      </FieldGrid>\\n    </DisplayWrapper>\\n\\n    <DisplayWrapper>\\n      <FieldGrid>\\n        <FieldGrid.Row>\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n        </FieldGrid.Row>\\n      </FieldGrid>\\n    </DisplayWrapper>\\n\\n    <DisplayWrapper>\\n      <FieldGrid>\\n        <FieldGrid.Row>\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n        </FieldGrid.Row>\\n\\n        <FieldGrid.Row>\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n        </FieldGrid.Row>\\n      </FieldGrid>\\n    </DisplayWrapper>\\n\\n    <DisplayWrapper>\\n      <FieldGrid>\\n        <FieldGrid.Row>\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n        </FieldGrid.Row>\\n\\n        <FieldGrid.Row>\\n          <FieldGrid.Cell field={<TextField disabled defaultValue='Hello, world!' />} />\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n        </FieldGrid.Row>\\n\\n        <FieldGrid.Row>\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\\n        </FieldGrid.Row>\\n\\n        <FieldGrid.Row>\\n          <FieldGrid.Cell field={<TextField multiline defaultValue='Hello, world!' />} />\\n        </FieldGrid.Row>\\n      </FieldGrid>\\n    </DisplayWrapper>\\n  </>\",\n      ...Primary.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{primary:{startLoc:{col:23,line:25},endLoc:{col:5,line:83},startBody:{col:23,line:25},endBody:{col:5,line:83}}}},layout:"padded"}},Primary=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(DisplayWrapper,{children:(0,jsx_runtime.jsx)(FieldGrid,{children:(0,jsx_runtime.jsxs)(FieldGrid.Row,{children:[(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})}),(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})})]})})}),(0,jsx_runtime.jsx)(DisplayWrapper,{children:(0,jsx_runtime.jsx)(FieldGrid,{children:(0,jsx_runtime.jsxs)(FieldGrid.Row,{children:[(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})}),(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})}),(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})})]})})}),(0,jsx_runtime.jsx)(DisplayWrapper,{children:(0,jsx_runtime.jsxs)(FieldGrid,{children:[(0,jsx_runtime.jsxs)(FieldGrid.Row,{children:[(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})}),(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})})]}),(0,jsx_runtime.jsxs)(FieldGrid.Row,{children:[(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})}),(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})}),(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})})]})]})}),(0,jsx_runtime.jsx)(DisplayWrapper,{children:(0,jsx_runtime.jsxs)(FieldGrid,{children:[(0,jsx_runtime.jsxs)(FieldGrid.Row,{children:[(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})}),(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})})]}),(0,jsx_runtime.jsxs)(FieldGrid.Row,{children:[(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{disabled:!0,defaultValue:"Hello, world!"})}),(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})}),(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})})]}),(0,jsx_runtime.jsxs)(FieldGrid.Row,{children:[(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})}),(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{defaultValue:"Hello, world!"})})]}),(0,jsx_runtime.jsx)(FieldGrid.Row,{children:(0,jsx_runtime.jsx)(FieldGrid.Cell,{field:(0,jsx_runtime.jsx)(text_field.nv,{multiline:!0,defaultValue:"Hello, world!"})})})]})})]});Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"() => <>\n    <DisplayWrapper>\n      <FieldGrid>\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n      </FieldGrid>\n    </DisplayWrapper>\n\n    <DisplayWrapper>\n      <FieldGrid>\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n      </FieldGrid>\n    </DisplayWrapper>\n\n    <DisplayWrapper>\n      <FieldGrid>\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n      </FieldGrid>\n    </DisplayWrapper>\n\n    <DisplayWrapper>\n      <FieldGrid>\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField disabled defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n          <FieldGrid.Cell field={<TextField defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n\n        <FieldGrid.Row>\n          <FieldGrid.Cell field={<TextField multiline defaultValue='Hello, world!' />} />\n        </FieldGrid.Row>\n      </FieldGrid>\n    </DisplayWrapper>\n  </>",...Primary.parameters?.docs?.source}}};const __namedExportsOrder=["Primary"]},"./src/colors/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>COLORS});const COLORS=new Map(Object.entries({"basic-blue":"#1f84db","basic-gray87":"#212121","basic-gray76":"#3a3a3b","basic-gray66":"#545455","basic-gray54":"#757575","basic-gray38":"#9e9e9e","basic-gray24":"#c2c2c2","basic-gray12":"#e0e0e0","basic-gray8":"#ebebeb","basic-gray4":"#f5f5f5","basic-gray2":"#fafafa","basic-white":"#fff","additional-deep-red":"#d50000","additional-red":"#fb3a2f","additional-light-red":"#feebea","additional-dark-teal":"#089176","additional-teal":"#09ab8b","additional-green":"#00c853","additional-light-green":"#64dd17","additional-lime":"#aeea00","additional-faded-green":"#eff9ea","additional-pink":"#e82e5c","additional-purple":"#b52ea8","additional-violet":"#902bd0","additional-deep-purple":"#634bdf","additional-electric-blue":"#2962ff","additional-light-blue":"#0091ea","additional-cyan":"#00b8d4","additional-sky":"#e4f1f9","additional-deep-orange":"#ff7200","additional-amber":"#ffab00","additional-yellow":"#ffd600","additional-gold":"#d5a43b","additional-brown":"#795548","additional-blue-gray":"#607d8b","additional-deep-blue":"#00599d","additional-dark-blue":"#002b41","additional-unlit-blue":"#1b75c2"}))},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[15].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/field-grid/field-grid.module.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".field-grid-module__container__d41{display:flex;flex-wrap:wrap;padding:1px 0 0 1px}.field-grid-module__cell__dd2{display:flex;justify-content:stretch;flex-grow:1;margin:-1px 0 0 -1px}.field-grid-module__size-third__c11{width:33.3333333333%}.field-grid-module__size-half__ec2{width:50%}.field-grid-module__size-full__c70{width:100%}.field-grid-module__focused-field__ca8{position:relative;z-index:1}","",{version:3,sources:["webpack://./src/field-grid/field-grid.module.scss"],names:[],mappings:"AAAA,mCACE,YAAA,CACA,cAAA,CACA,mBAAA,CAGF,8BACE,YAAA,CACA,uBAAA,CACA,WAAA,CACA,oBAAA,CAGF,oCACE,oBAAA,CAGF,mCACE,SAAA,CAGF,mCACE,UAAA,CAGF,uCAEE,iBAAA,CACA,SAAA",sourcesContent:[".container {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 1px 0 0 1px;\n}\n\n.cell {\n  display: flex;\n  justify-content: stretch;\n  flex-grow: 1;\n  margin: -1px 0 0 -1px;\n}\n\n.size-third {\n  width: calc(100% / 3);\n}\n\n.size-half {\n  width: 50%;\n}\n\n.size-full {\n  width: 100%;\n}\n\n.focused-field {\n  // чтобы выделенные границы не скрывались под другими элементами сетки, поднимаем при фокусировке\n  position: relative;\n  z-index: 1;\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={container:"field-grid-module__container__d41",cell:"field-grid-module__cell__dd2","size-third":"field-grid-module__size-third__c11","size-half":"field-grid-module__size-half__ec2","size-full":"field-grid-module__size-full__c70","focused-field":"field-grid-module__focused-field__ca8"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);