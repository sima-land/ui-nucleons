"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[6939],{"./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Arrows/Down.js":(__unused_webpack_module,exports,__webpack_require__)=>{const jsx_runtime_1=__webpack_require__("./node_modules/react/jsx-runtime.js"),ForwardRef=(0,__webpack_require__("./node_modules/react/index.js").forwardRef)(((props,ref)=>(0,jsx_runtime_1.jsx)("svg",{width:16,height:16,viewBox:"0 0 16 16",ref,...props,children:(0,jsx_runtime_1.jsx)("path",{fillRule:"evenodd",d:"M3.247 6.342a1 1 0 0 1 1.412-.095L8 9.171l3.341-2.924a1 1 0 0 1 1.318 1.506l-4 3.5a1 1 0 0 1-1.317 0l-4-3.5a1 1 0 0 1-.095-1.411Z",clipRule:"evenodd"})})));exports.Z=ForwardRef},"./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Arrows/Up.js":(__unused_webpack_module,exports,__webpack_require__)=>{const jsx_runtime_1=__webpack_require__("./node_modules/react/jsx-runtime.js"),ForwardRef=(0,__webpack_require__("./node_modules/react/index.js").forwardRef)(((props,ref)=>(0,jsx_runtime_1.jsx)("svg",{width:16,height:16,viewBox:"0 0 16 16",ref,...props,children:(0,jsx_runtime_1.jsx)("path",{fillRule:"evenodd",d:"M12.753 9.659a1 1 0 0 1-1.412.094L8 6.829 4.659 9.753a1 1 0 0 1-1.317-1.506l4-3.5a1 1 0 0 1 1.317 0l4 3.5a1 1 0 0 1 .094 1.412Z",clipRule:"evenodd"})})));exports.Z=ForwardRef},"./src/autocomplete-deprecated/__stories__/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Loading:()=>Loading,PresetFilledOnlyList:()=>PresetFilledOnlyList,Primary:()=>Primary,TestChromeAutofill:()=>TestChromeAutofill,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var react=__webpack_require__("./node_modules/react/index.js"),dropdown=__webpack_require__("./src/dropdown/index.ts"),dropdown_item=__webpack_require__("./src/dropdown-item/index.ts"),text_field=__webpack_require__("./src/text-field/index.tsx"),utils_dropdown=__webpack_require__("./src/_internal/utils/dropdown.ts"),Down=__webpack_require__("./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Arrows/Down.js"),Up=__webpack_require__("./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Arrows/Up.js"),bind=__webpack_require__("./node_modules/classnames/bind.js"),bind_default=__webpack_require__.n(bind),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),autocomplete_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[15].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/autocomplete-deprecated/autocomplete.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(autocomplete_module.Z,options);const autocomplete_deprecated_autocomplete_module=autocomplete_module.Z&&autocomplete_module.Z.locals?autocomplete_module.Z.locals:void 0;var scroll_to_child=__webpack_require__("./src/helpers/scroll-to-child.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const cx=bind_default().bind(autocomplete_deprecated_autocomplete_module),Autocomplete=({items,itemSize,onSelect,onChange,onKeyDown,style,className,value,defaultValue,loading,renderItem=String,preset="default","data-testid":dataTestId,...restProps})=>{const fieldRef=(0,react.useRef)(null),menuRef=(0,react.useRef)(null),[withMenu,toggleMenu]=(0,react.useState)(!1),[realValue,setRealValue]=(0,react.useState)(value||defaultValue),[activeIndex,setActiveIndex]=(0,react.useState)(null),needMenu="filled-only-list"===preset?withMenu&&realValue&&realValue.length>0:withMenu,arrowIcon=needMenu?(0,jsx_runtime.jsx)(Up.Z,{className:cx("arrow"),"data-testid":"autocomplete:arrow-up"}):(0,jsx_runtime.jsx)(Down.Z,{className:cx("arrow"),"data-testid":"autocomplete:arrow-down"}),endAdornment="default"===preset?arrowIcon:void 0;return(0,react.useEffect)((()=>{setRealValue(value)}),[value]),(0,react.useEffect)((()=>{setActiveIndex(null)}),[items]),(0,react.useEffect)((()=>{if(null===activeIndex)return;const menu=menuRef.current,item=menu?.querySelectorAll('[role="menuitem"]')[activeIndex];menu&&item instanceof HTMLElement&&(0,scroll_to_child.d)(menu,item)}),[activeIndex]),(0,jsx_runtime.jsxs)("div",{style,className:cx("root",className),"data-testid":dataTestId,children:[(0,jsx_runtime.jsx)(text_field.nv,{...restProps,ref:fieldRef,focused:withMenu,endAdornment,"data-testid":"autocomplete:field",variant:"desktop",value:realValue,multiline:!1,className:cx("field"),onFocus:()=>{toggleMenu(!0),setActiveIndex(null)},onBlur:()=>{toggleMenu(!1)},onChange:event=>{setRealValue(event.target.value),setActiveIndex(0),onChange?.(event)},onKeyDown:event=>{const size=items?.length||0;let nextIndex;switch(event.key){case"ArrowDown":nextIndex=(null!==activeIndex?size+activeIndex+1:0)%size;break;case"ArrowUp":nextIndex=(size+Number(activeIndex)-1)%size;break;case"Enter":items&&null!==activeIndex&&items.length>activeIndex&&(onSelect&&onSelect(items[activeIndex]),toggleMenu(!1))}"number"==typeof nextIndex&&(event.preventDefault(),setActiveIndex(nextIndex)),onKeyDown?.(event)}}),needMenu&&(0,jsx_runtime.jsx)(dropdown.L,{...(0,utils_dropdown.R)(restProps.size),viewportRef:menuRef,"data-testid":"autocomplete:menu",className:cx("menu"),role:"menu",children:loading?(0,jsx_runtime.jsx)(dropdown.Q,{"data-testid":"autocomplete:loading-area"}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:items&&items.length>0?items.map(((item,index)=>(0,jsx_runtime.jsx)(dropdown_item.h,{size:itemSize,role:"menuitem",checked:index===activeIndex,onMouseDown:event=>{event.preventDefault()},onClick:()=>{onSelect?.(item),setActiveIndex(null),toggleMenu(!1)},children:renderItem(item)},index))):(0,jsx_runtime.jsx)(dropdown_item.h,{size:"m",noHover:!0,children:"Не найдено"})})})]})};Autocomplete.displayName="Autocomplete";try{Autocomplete.displayName="Autocomplete",Autocomplete.__docgenInfo={description:"Поле ввода с подсказками.",displayName:"Autocomplete",props:{defaultValue:{defaultValue:null,description:"Значение по умолчанию.",name:"defaultValue",required:!1,type:{name:"string | undefined"}},items:{defaultValue:null,description:"Элементы меню.",name:"items",required:!1,type:{name:"any[] | undefined"}},itemSize:{defaultValue:null,description:"Размер элемента меню.",name:"itemSize",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"s"'},{value:'"l"'},{value:'"m"'},{value:'"xl"'}]}},loading:{defaultValue:null,description:"Нужно ли выводить состояние загрузки списка.",name:"loading",required:!1,type:{name:"boolean | undefined"}},onSelect:{defaultValue:null,description:"Сработает при выборе.",name:"onSelect",required:!1,type:{name:"((item: any) => void) | undefined"}},preset:{defaultValue:{value:"default"},description:"Пресет (со стрелкой или без).",name:"preset",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"default"'},{value:'"filled-only-list"'}]}},renderItem:{defaultValue:null,description:"Выведет содержимое элемента.",name:"renderItem",required:!1,type:{name:"((item: any) => ReactNode) | undefined"}},value:{defaultValue:null,description:"Значение.",name:"value",required:!1,type:{name:"string | undefined"}},size:{defaultValue:null,description:'Размеры поля для variant = "desktop".',name:"size",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"s"'},{value:'"xs"'},{value:'"l"'}]}},onChange:{defaultValue:null,description:"Сработает при изменении значения.",name:"onChange",required:!1,type:{name:"(ChangeEventHandler<HTMLTextAreaElement> & ChangeEventHandler<HTMLInputElement>) | undefined"}},onInput:{defaultValue:null,description:'Сработает при событии "input".',name:"onInput",required:!1,type:{name:"(FormEventHandler<HTMLTextAreaElement> & FormEventHandler<HTMLInputElement>) | undefined"}},onKeyDown:{defaultValue:null,description:'Сработает при событии "keydown".',name:"onKeyDown",required:!1,type:{name:"(KeyboardEventHandler<HTMLTextAreaElement> & KeyboardEventHandler<HTMLInputElement>) | undefined"}},onKeyUp:{defaultValue:null,description:'Сработает при событии "keyup".',name:"onKeyUp",required:!1,type:{name:"(KeyboardEventHandler<HTMLTextAreaElement> & KeyboardEventHandler<HTMLInputElement>) | undefined"}},onClick:{defaultValue:null,description:"Сработает при клике.",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLDivElement> | undefined"}},"data-testid":{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования.",name:"data-testid",required:!1,type:{name:"string | undefined"}},failed:{defaultValue:null,description:"Показывать ли поле как ошибочное.",name:"failed",required:!1,type:{name:"boolean | undefined"}},caption:{defaultValue:null,description:"Подпись снизу.",name:"caption",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Ярлык.",name:"label",required:!1,type:{name:"string | undefined"}},classes:{defaultValue:null,description:"CSS-классы.",name:"classes",required:!1,type:{name:"Classes | undefined"}},endAdornment:{defaultValue:null,description:"Дополнительная верстка после текста.",name:"endAdornment",required:!1,type:{name:"ReactNode"}},focused:{defaultValue:null,description:"Показывать ли поле как сфокусированное (влияет только на оформление).",name:"focused",required:!1,type:{name:"boolean | undefined"}},rounds:{defaultValue:null,description:"Задает скругления.",name:"rounds",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"left"'},{value:'"right"'},{value:'"none"'},{value:'"all"'},{value:'"top"'},{value:'"bottom"'},{value:'"topLeft"'},{value:'"topRight"'},{value:'"bottomLeft"'},{value:'"bottomRight"'}]}},startAdornment:{defaultValue:null,description:"Дополнительная верстка до текста.",name:"startAdornment",required:!1,type:{name:"ReactNode"}},variant:{defaultValue:null,description:"Вариант отображения.",name:"variant",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"desktop"'},{value:'"mobile"'}]}},multiline:{defaultValue:null,description:"Нужно ли выводить textarea вместо input.",name:"multiline",required:!1,type:{name:"boolean | undefined"}},baseInputProps:{defaultValue:null,description:"Свойства BaseInput.",name:"baseInputProps",required:!1,type:{name:"BaseInputProps | undefined"}},restPlaceholder:{defaultValue:null,description:"Placeholder, который выводится после введенного значения.",name:"restPlaceholder",required:!1,type:{name:"string | RestPlaceholder | undefined"}},blockProps:{defaultValue:null,description:"Свойства элемента-блока.",name:"blockProps",required:!1,type:{name:'Omit<HTMLProps<HTMLDivElement>, "onClick"> | undefined'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/autocomplete-deprecated/index.tsx#Autocomplete"]={docgenInfo:Autocomplete.__docgenInfo,name:"Autocomplete",path:"src/autocomplete-deprecated/index.tsx#Autocomplete"})}catch(__react_docgen_typescript_loader_error){}var src_button=__webpack_require__("./src/button/index.ts");const index_stories={title:"deprecated/Autocomplete",component:Autocomplete,parameters:{storySource:{source:"import { Autocomplete } from '@sima-land/ui-nucleons/autocomplete-deprecated';\nimport { useState } from 'react';\nimport { Button } from '@sima-land/ui-nucleons/button';\nimport { TextField } from '@sima-land/ui-nucleons/text-field';\nexport default {\n  title: 'deprecated/Autocomplete',\n  component: Autocomplete,\n  parameters: {\n    layout: 'padded'\n  }\n};\nconst testItems = ['U.S.', 'France', 'China', 'Cambodia', 'Chile', 'Canada', 'Poland', 'Russia', 'Belarus', 'Ukraine'];\nexport function Primary() {\n  const [value, setValue] = useState('');\n  return <>\n      <Autocomplete preset='default' value={value} label='Страна' items={testItems.filter(s => s.toLowerCase().includes(value.toLowerCase()))} onChange={(e: any) => setValue(e.target.value)} onSelect={setValue} caption='Test caption' />\n    </>;\n}\nPrimary.storyName = 'Простой пример';\nexport function PresetFilledOnlyList() {\n  const [value, setValue] = useState('');\n  return <>\n      <Autocomplete preset='filled-only-list' value={value} label='Страна' placeholder='Начните вводить название' items={testItems.filter(s => s.toLowerCase().includes(value.toLowerCase()))} onChange={(e: any) => setValue(e.target.value)} onSelect={setValue} />\n    </>;\n}\nPresetFilledOnlyList.storyName = 'Список только при заполнении';\nexport function Loading() {\n  const [value, setValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  return <>\n      <Autocomplete preset='filled-only-list' value={value} loading={loading} label='Страна' placeholder='Начните вводить название' items={testItems.filter(s => s.toLowerCase().includes(value.toLowerCase()))} onChange={(e: any) => {\n      setLoading(true);\n      setValue(e.target.value);\n      setTimeout(() => {\n        setLoading(false);\n      }, 1500);\n    }} onSelect={setValue} />\n    </>;\n}\nLoading.storyName = 'Загрузка';\nexport function TestChromeAutofill() {\n  const [shown, setShown] = useState(false);\n  const [value, setValue] = useState('');\n  return <>\n      {!shown && <Button onClick={() => setShown(true)}>Показать форму</Button>}\n\n      {shown && <>\n          <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 20\n      }}>\n            <Autocomplete preset='filled-only-list' value={value} label='Email' placeholder='some@email.com' items={testItems.filter(s => s.toLowerCase().includes(value.toLowerCase()))} onChange={e => setValue(e.target.value)} onSelect={setValue} />\n\n            <TextField type='password' style={{\n          width: '320px'\n        }} />\n          </div>\n        </>}\n    </>;\n}\nTestChromeAutofill.storyName = 'Тест: Предварительное заполнение браузером';\nPrimary.parameters = {\n  ...Primary.parameters,\n  docs: {\n    ...Primary.parameters?.docs,\n    source: {\n      originalSource: \"function Primary() {\\n  const [value, setValue] = useState('');\\n  return <>\\n      <Autocomplete preset='default' value={value} label='\\u0421\\u0442\\u0440\\u0430\\u043D\\u0430' items={testItems.filter(s => s.toLowerCase().includes(value.toLowerCase()))} onChange={(e: any) => setValue(e.target.value)} onSelect={setValue} caption='Test caption' />\\n    </>;\\n}\",\n      ...Primary.parameters?.docs?.source\n    }\n  }\n};\nPresetFilledOnlyList.parameters = {\n  ...PresetFilledOnlyList.parameters,\n  docs: {\n    ...PresetFilledOnlyList.parameters?.docs,\n    source: {\n      originalSource: \"function PresetFilledOnlyList() {\\n  const [value, setValue] = useState('');\\n  return <>\\n      <Autocomplete preset='filled-only-list' value={value} label='\\u0421\\u0442\\u0440\\u0430\\u043D\\u0430' placeholder='\\u041D\\u0430\\u0447\\u043D\\u0438\\u0442\\u0435 \\u0432\\u0432\\u043E\\u0434\\u0438\\u0442\\u044C \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435' items={testItems.filter(s => s.toLowerCase().includes(value.toLowerCase()))} onChange={(e: any) => setValue(e.target.value)} onSelect={setValue} />\\n    </>;\\n}\",\n      ...PresetFilledOnlyList.parameters?.docs?.source\n    }\n  }\n};\nLoading.parameters = {\n  ...Loading.parameters,\n  docs: {\n    ...Loading.parameters?.docs,\n    source: {\n      originalSource: \"function Loading() {\\n  const [value, setValue] = useState('');\\n  const [loading, setLoading] = useState(false);\\n  return <>\\n      <Autocomplete preset='filled-only-list' value={value} loading={loading} label='\\u0421\\u0442\\u0440\\u0430\\u043D\\u0430' placeholder='\\u041D\\u0430\\u0447\\u043D\\u0438\\u0442\\u0435 \\u0432\\u0432\\u043E\\u0434\\u0438\\u0442\\u044C \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435' items={testItems.filter(s => s.toLowerCase().includes(value.toLowerCase()))} onChange={(e: any) => {\\n      setLoading(true);\\n      setValue(e.target.value);\\n      setTimeout(() => {\\n        setLoading(false);\\n      }, 1500);\\n    }} onSelect={setValue} />\\n    </>;\\n}\",\n      ...Loading.parameters?.docs?.source\n    }\n  }\n};\nTestChromeAutofill.parameters = {\n  ...TestChromeAutofill.parameters,\n  docs: {\n    ...TestChromeAutofill.parameters?.docs,\n    source: {\n      originalSource: \"function TestChromeAutofill() {\\n  const [shown, setShown] = useState(false);\\n  const [value, setValue] = useState('');\\n  return <>\\n      {!shown && <Button onClick={() => setShown(true)}>\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0444\\u043E\\u0440\\u043C\\u0443</Button>}\\n\\n      {shown && <>\\n          <div style={{\\n        display: 'flex',\\n        flexDirection: 'column',\\n        gap: 20\\n      }}>\\n            <Autocomplete preset='filled-only-list' value={value} label='Email' placeholder='some@email.com' items={testItems.filter(s => s.toLowerCase().includes(value.toLowerCase()))} onChange={e => setValue(e.target.value)} onSelect={setValue} />\\n\\n            <TextField type='password' style={{\\n          width: '320px'\\n        }} />\\n          </div>\\n        </>}\\n    </>;\\n}\",\n      ...TestChromeAutofill.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{primary:{startLoc:{col:7,line:13},endLoc:{col:1,line:18},startBody:{col:7,line:13},endBody:{col:1,line:18}},"preset-filled-only-list":{startLoc:{col:7,line:20},endLoc:{col:1,line:25},startBody:{col:7,line:20},endBody:{col:1,line:25}},loading:{startLoc:{col:7,line:27},endLoc:{col:1,line:39},startBody:{col:7,line:27},endBody:{col:1,line:39}},"test-chrome-autofill":{startLoc:{col:7,line:41},endLoc:{col:1,line:61},startBody:{col:7,line:41},endBody:{col:1,line:61}}}},layout:"padded"}},testItems=["U.S.","France","China","Cambodia","Chile","Canada","Poland","Russia","Belarus","Ukraine"],Primary=function Primary(){const[value,setValue]=(0,react.useState)("");return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Autocomplete,{preset:"default",value,label:"Страна",items:testItems.filter((s=>s.toLowerCase().includes(value.toLowerCase()))),onChange:e=>setValue(e.target.value),onSelect:setValue,caption:"Test caption"})})};Primary.storyName="Простой пример";const PresetFilledOnlyList=function PresetFilledOnlyList(){const[value,setValue]=(0,react.useState)("");return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Autocomplete,{preset:"filled-only-list",value,label:"Страна",placeholder:"Начните вводить название",items:testItems.filter((s=>s.toLowerCase().includes(value.toLowerCase()))),onChange:e=>setValue(e.target.value),onSelect:setValue})})};PresetFilledOnlyList.storyName="Список только при заполнении";const Loading=function Loading(){const[value,setValue]=(0,react.useState)(""),[loading,setLoading]=(0,react.useState)(!1);return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(Autocomplete,{preset:"filled-only-list",value,loading,label:"Страна",placeholder:"Начните вводить название",items:testItems.filter((s=>s.toLowerCase().includes(value.toLowerCase()))),onChange:e=>{setLoading(!0),setValue(e.target.value),setTimeout((()=>{setLoading(!1)}),1500)},onSelect:setValue})})};Loading.storyName="Загрузка";const TestChromeAutofill=function TestChromeAutofill(){const[shown,setShown]=(0,react.useState)(!1),[value,setValue]=(0,react.useState)("");return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[!shown&&(0,jsx_runtime.jsx)(src_button.z,{onClick:()=>setShown(!0),children:"Показать форму"}),shown&&(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:20},children:[(0,jsx_runtime.jsx)(Autocomplete,{preset:"filled-only-list",value,label:"Email",placeholder:"some@email.com",items:testItems.filter((s=>s.toLowerCase().includes(value.toLowerCase()))),onChange:e=>setValue(e.target.value),onSelect:setValue}),(0,jsx_runtime.jsx)(text_field.nv,{type:"password",style:{width:"320px"}})]})})]})};TestChromeAutofill.storyName="Тест: Предварительное заполнение браузером",Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"function Primary() {\n  const [value, setValue] = useState('');\n  return <>\n      <Autocomplete preset='default' value={value} label='Страна' items={testItems.filter(s => s.toLowerCase().includes(value.toLowerCase()))} onChange={(e: any) => setValue(e.target.value)} onSelect={setValue} caption='Test caption' />\n    </>;\n}",...Primary.parameters?.docs?.source}}},PresetFilledOnlyList.parameters={...PresetFilledOnlyList.parameters,docs:{...PresetFilledOnlyList.parameters?.docs,source:{originalSource:"function PresetFilledOnlyList() {\n  const [value, setValue] = useState('');\n  return <>\n      <Autocomplete preset='filled-only-list' value={value} label='Страна' placeholder='Начните вводить название' items={testItems.filter(s => s.toLowerCase().includes(value.toLowerCase()))} onChange={(e: any) => setValue(e.target.value)} onSelect={setValue} />\n    </>;\n}",...PresetFilledOnlyList.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:"function Loading() {\n  const [value, setValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  return <>\n      <Autocomplete preset='filled-only-list' value={value} loading={loading} label='Страна' placeholder='Начните вводить название' items={testItems.filter(s => s.toLowerCase().includes(value.toLowerCase()))} onChange={(e: any) => {\n      setLoading(true);\n      setValue(e.target.value);\n      setTimeout(() => {\n        setLoading(false);\n      }, 1500);\n    }} onSelect={setValue} />\n    </>;\n}",...Loading.parameters?.docs?.source}}},TestChromeAutofill.parameters={...TestChromeAutofill.parameters,docs:{...TestChromeAutofill.parameters?.docs,source:{originalSource:"function TestChromeAutofill() {\n  const [shown, setShown] = useState(false);\n  const [value, setValue] = useState('');\n  return <>\n      {!shown && <Button onClick={() => setShown(true)}>Показать форму</Button>}\n\n      {shown && <>\n          <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 20\n      }}>\n            <Autocomplete preset='filled-only-list' value={value} label='Email' placeholder='some@email.com' items={testItems.filter(s => s.toLowerCase().includes(value.toLowerCase()))} onChange={e => setValue(e.target.value)} onSelect={setValue} />\n\n            <TextField type='password' style={{\n          width: '320px'\n        }} />\n          </div>\n        </>}\n    </>;\n}",...TestChromeAutofill.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","PresetFilledOnlyList","Loading","TestChromeAutofill"]},"./src/_internal/utils/dropdown.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>placeDropdown});var _text_field__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/text-field/index.tsx");const placeDropdown=(size=_text_field__WEBPACK_IMPORTED_MODULE_0__.Of.size)=>({style:{top:`${_text_field__WEBPACK_IMPORTED_MODULE_0__.Vz[size]}px`}})},"./src/button/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>Button});var react=__webpack_require__("./node_modules/react/index.js"),spinner=__webpack_require__("./src/spinner/index.ts"),bind=__webpack_require__("./node_modules/classnames/bind.js"),bind_default=__webpack_require__.n(bind),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),button_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[15].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/button/button.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(button_module.Z,options);const button_button_module=button_module.Z&&button_module.Z.locals?button_module.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const cx=bind_default().bind(button_button_module),Button=(0,react.forwardRef)((function Button({viewType="primary",icon:Icon,iconPosition="start",size="m",loading,disabled,className,children,"data-testid":testId="button",...restProps},ref){const hasIcon=Boolean(Icon),hasText=Boolean(children),rootClassName=cx("root",`size-${size}`,"unset"!==viewType&&`view-${viewType}`,loading&&"loading",disabled&&"disabled",hasIcon&&!hasText&&"icon-only",hasText&&hasIcon&&"start"===iconPosition&&"icon-start",hasText&&hasIcon&&"end"===iconPosition&&"icon-end",className),content=(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Icon&&"start"===iconPosition&&(0,jsx_runtime.jsx)(Icon,{className:cx("icon")}),children,Icon&&"end"===iconPosition&&(0,jsx_runtime.jsx)(Icon,{className:cx("icon")}),loading&&(0,jsx_runtime.jsx)(spinner.WV,{size:"s",color:disabled||"secondary"===viewType?"basic-gray38":"basic-white",className:cx("spinner")})]});let result=null;return result="container"===restProps.appearance?(0,jsx_runtime.jsx)("div",{...restProps,ref,className:rootClassName,role:"button","data-testid":testId,children:content}):"link"===restProps.appearance?(0,jsx_runtime.jsx)("a",{...restProps,ref,className:rootClassName,"data-testid":testId,children:content}):(0,jsx_runtime.jsx)("button",{...restProps,ref,className:rootClassName,disabled,"data-testid":testId,children:content}),result}));try{Button.displayName="Button",Button.__docgenInfo={description:"Кнопка - запускает действие.",displayName:"Button",props:{viewType:{defaultValue:{value:"primary"},description:"Определяет внешний вид кнопки.",name:"viewType",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"unset"'}]}},appearance:{defaultValue:null,description:"Определяет тип корневого элемента.",name:"appearance",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"button"'},{value:'"link"'},{value:'"container"'}]}},icon:{defaultValue:null,description:"Иконка.",name:"icon",required:!1,type:{name:"ElementType<SVGAttributes<SVGSVGElement>> | undefined"}},iconPosition:{defaultValue:{value:"start"},description:"Позиция иконки относительно текста.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"start"'},{value:'"end"'}]}},size:{defaultValue:{value:"m"},description:"Размер.",name:"size",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"s"'},{value:'"xs"'},{value:'"m"'}]}},loading:{defaultValue:null,description:"Нужно ли отображать состояние загрузки.",name:"loading",required:!1,type:{name:"boolean | undefined"}},disabled:{defaultValue:null,description:"Отключенное состояние.",name:"disabled",required:!1,type:{name:"boolean | undefined"}},style:{defaultValue:null,description:"Стили.",name:"style",required:!1,type:{name:"ButtonStyle | undefined"}},"data-testid":{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования.",name:"data-testid",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/button/button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/button/button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[15].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/autocomplete-deprecated/autocomplete.module.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".autocomplete-module__root__dd3{position:relative;width:var(--width, 320px)}.autocomplete-module__arrow__a26{fill:#9e9e9e}.autocomplete-module__field__ec7{width:100%}.autocomplete-module__menu__caa{position:absolute;width:100%;z-index:2}","",{version:3,sources:["webpack://./src/autocomplete-deprecated/autocomplete.module.scss"],names:[],mappings:"AAEA,gCACE,iBAAA,CACA,yBAAA,CAGF,iCACE,YAAA,CAGF,iCACE,UAAA,CAGF,gCACE,iBAAA,CACA,UAAA,CACA,SAAA",sourcesContent:["@use '../colors';\n\n.root {\n  position: relative;\n  width: var(--width, 320px);\n}\n\n.arrow {\n  fill: colors.$basic-gray38;\n}\n\n.field {\n  width: 100%;\n}\n\n.menu {\n  position: absolute;\n  width: 100%;\n  z-index: 2;\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={root:"autocomplete-module__root__dd3",arrow:"autocomplete-module__arrow__a26",field:"autocomplete-module__field__ec7",menu:"autocomplete-module__menu__caa"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[15].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/button/button.module.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".button-module__root__ae8{position:relative;white-space:nowrap;display:inline-flex;align-items:center;justify-content:center;flex-wrap:nowrap;border-radius:4px;font-family:inherit;font-weight:600;box-sizing:border-box;padding:0;padding-left:var(--button-left-gutter, var(--button-gutter));padding-right:var(--button-right-gutter, var(--button-gutter));border:0;outline:0;text-decoration:none;overflow:hidden;font-size:var(--button-font-size);background:var(--button-background);color:var(--button-color);min-width:var(--button-min-size);height:var(--button-min-size);--button-icon-gutter: 12px}.button-module__root__ae8::-moz-focus-inner{border:0}.button-module__root__ae8:disabled,.button-module__root__ae8.button-module__disabled__cc7{pointer-events:none;color:var(--button-disabled-color, var(--button-color));background:var(--button-disabled-background, var(--button-background))}.button-module__root__ae8.button-module__loading__b23{color:rgba(0,0,0,0)}.button-module__root__ae8.button-module__loading__b23>:not(.button-module__spinner__c81){opacity:0;pointer-events:0}.button-module__root__ae8:not(:disabled):hover{cursor:pointer;color:var(--button-hover-color, var(--button-color));background:var(--button-hover-background, var(--button-background))}.button-module__size-xs__ed5{--button-min-size: 32px;--button-font-size: 14px;--button-line-height: 20px;--button-gutter: 12px}.button-module__size-s__fb7{--button-min-size: 40px;--button-font-size: 16px;--button-line-height: 24px;--button-gutter: 20px}.button-module__size-m__e9f{--button-min-size: 48px;--button-font-size: 16px;--button-line-height: 24px;--button-gutter: 24px}.button-module__icon-only__a54{--button-left-gutter: 0;--button-right-gutter: 0;--button-icon-gutter: 0}.button-module__icon-start__dfb{--button-left-gutter: 0}.button-module__icon-end__eb5{--button-right-gutter: 0}.button-module__view-primary__c2f{--button-color: #fff;--button-background: #1f84db;--button-hover-background: #1b75c2;--button-disabled-color: #c2c2c2;--button-disabled-background: #ebebeb}.button-module__view-secondary__bb7{--button-color: #212121;--button-background: #ebebeb;--button-hover-background: #e0e0e0;--button-disabled-color: #c2c2c2;--button-disabled-background: #ebebeb}.button-module__view-success__d3b{--button-color: #fff;--button-background: #09ab8b;--button-hover-background: #089176;--button-disabled-color: #c2c2c2;--button-disabled-background: #ebebeb}.button-module__icon__aba{margin:0 var(--button-icon-gutter);flex-shrink:0;fill:currentColor}.button-module__spinner__c81{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}","",{version:3,sources:["webpack://./src/button/button.module.scss","webpack://./src/button/button-util.scss"],names:[],mappings:"AAGA,0BACE,iBAAA,CACA,kBAAA,CACA,mBAAA,CACA,kBAAA,CACA,sBAAA,CACA,gBAAA,CACA,iBAAA,CACA,mBAAA,CACA,eAAA,CACA,qBAAA,CACA,SAAA,CACA,4DAAA,CACA,8DAAA,CACA,QAAA,CACA,SAAA,CACA,oBAAA,CACA,eAAA,CACA,iCAAA,CACA,mCAAA,CACA,yBAAA,CACA,gCAAA,CACA,6BAAA,CACA,0BAAA,CACA,4CACE,QAAA,CAGF,0FAEE,mBAAA,CACA,uDAAA,CACA,sEAAA,CAEF,sDACE,mBAAA,CACA,yFACE,SAAA,CACA,gBAAA,CAGJ,+CACE,cAAA,CACA,oDAAA,CACA,mEAAA,CAKJ,6BCjDE,uBAAA,CACA,wBAAA,CACA,0BAAA,CACA,qBAAA,CDkDF,4BC9CE,uBAAA,CACA,wBAAA,CACA,0BAAA,CACA,qBAAA,CD+CF,4BC3CE,uBAAA,CACA,wBAAA,CACA,0BAAA,CACA,qBAAA,CD6CF,+BACE,uBAAA,CACA,wBAAA,CACA,uBAAA,CAGF,gCACE,uBAAA,CAGF,8BACE,wBAAA,CAIF,kCCxDE,oBAAA,CACA,4BAAA,CACA,kCAAA,CACA,gCAAA,CACA,qCAAA,CDwDF,oCCpDE,uBAAA,CACA,4BAAA,CACA,kCAAA,CACA,gCAAA,CACA,qCAAA,CDoDF,kCChDE,oBAAA,CACA,4BAAA,CACA,kCAAA,CACA,gCAAA,CACA,qCAAA,CDiDF,0BACE,kCAAA,CACA,aAAA,CACA,iBAAA,CAIF,6BACE,iBAAA,CACA,OAAA,CACA,QAAA,CACA,+BAAA",sourcesContent:["@use '../colors';\n@use './button-util';\n\n.root {\n  position: relative;\n  white-space: nowrap;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: nowrap;\n  border-radius: 4px;\n  font-family: inherit;\n  font-weight: 600;\n  box-sizing: border-box;\n  padding: 0;\n  padding-left: var(--button-left-gutter, var(--button-gutter));\n  padding-right: var(--button-right-gutter, var(--button-gutter));\n  border: 0;\n  outline: 0;\n  text-decoration: none;\n  overflow: hidden;\n  font-size: var(--button-font-size);\n  background: var(--button-background);\n  color: var(--button-color);\n  min-width: var(--button-min-size);\n  height: var(--button-min-size);\n  --button-icon-gutter: 12px;\n  &::-moz-focus-inner {\n    border: 0;\n  }\n  // @todo disabled для ссылок?\n  &:disabled,\n  &.disabled {\n    pointer-events: none;\n    color: var(--button-disabled-color, var(--button-color));\n    background: var(--button-disabled-background, var(--button-background));\n  }\n  &.loading {\n    color: transparent;\n    > :not(.spinner) {\n      opacity: 0;\n      pointer-events: 0;\n    }\n  }\n  &:not(:disabled):hover {\n    cursor: pointer;\n    color: var(--button-hover-color, var(--button-color));\n    background: var(--button-hover-background, var(--button-background));\n  }\n}\n\n// sizes\n.size-xs {\n  @include button-util.size-xs;\n}\n\n.size-s {\n  @include button-util.size-s;\n}\n\n.size-m {\n  @include button-util.size-m;\n}\n\n// content\n.icon-only {\n  --button-left-gutter: 0;\n  --button-right-gutter: 0;\n  --button-icon-gutter: 0;\n}\n\n.icon-start {\n  --button-left-gutter: 0;\n}\n\n.icon-end {\n  --button-right-gutter: 0;\n}\n\n// view variants\n.view-primary {\n  @include button-util.color-primary;\n}\n\n.view-secondary {\n  @include button-util.color-secondary;\n}\n\n.view-success {\n  @include button-util.color-success;\n}\n\n// icons\n.icon {\n  margin: 0 var(--button-icon-gutter);\n  flex-shrink: 0;\n  fill: currentColor;\n}\n\n// spinner\n.spinner {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n","@use '../colors';\n\n@mixin size-xs {\n  --button-min-size: 32px;\n  --button-font-size: 14px;\n  --button-line-height: 20px;\n  --button-gutter: 12px;\n}\n\n@mixin size-s {\n  --button-min-size: 40px;\n  --button-font-size: 16px;\n  --button-line-height: 24px;\n  --button-gutter: 20px;\n}\n\n@mixin size-m {\n  --button-min-size: 48px;\n  --button-font-size: 16px;\n  --button-line-height: 24px;\n  --button-gutter: 24px;\n}\n\n@mixin color-primary {\n  --button-color: #fff;\n  --button-background: #{colors.$basic-blue};\n  --button-hover-background: #{colors.$additional-unlit-blue};\n  --button-disabled-color: #{colors.$basic-gray24};\n  --button-disabled-background: #{colors.$basic-gray8};\n}\n\n@mixin color-secondary {\n  --button-color: #{colors.$basic-gray87};\n  --button-background: #{colors.$basic-gray8};\n  --button-hover-background: #{colors.$basic-gray12};\n  --button-disabled-color: #{colors.$basic-gray24};\n  --button-disabled-background: #{colors.$basic-gray8};\n}\n\n@mixin color-success {\n  --button-color: #fff;\n  --button-background: #{colors.$additional-teal};\n  --button-hover-background: #{colors.$additional-dark-teal};\n  --button-disabled-color: #{colors.$basic-gray24};\n  --button-disabled-background: #{colors.$basic-gray8};\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={root:"button-module__root__ae8",disabled:"button-module__disabled__cc7",loading:"button-module__loading__b23",spinner:"button-module__spinner__c81","size-xs":"button-module__size-xs__ed5","size-s":"button-module__size-s__fb7","size-m":"button-module__size-m__e9f","icon-only":"button-module__icon-only__a54","icon-start":"button-module__icon-start__dfb","icon-end":"button-module__icon-end__eb5","view-primary":"button-module__view-primary__c2f","view-secondary":"button-module__view-secondary__bb7","view-success":"button-module__view-success__d3b",icon:"button-module__icon__aba"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);