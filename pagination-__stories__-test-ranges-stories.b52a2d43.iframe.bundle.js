"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[3010],{"./src/pagination/__stories__/test-ranges.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TestRanges:()=>TestRanges,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _sima_land_ui_nucleons_pagination__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/pagination/index.ts"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"common/Pagination",component:_sima_land_ui_nucleons_pagination__WEBPACK_IMPORTED_MODULE_0__.tl,parameters:{storySource:{source:"import { Pagination } from '@sima-land/ui-nucleons/pagination';\nimport { useState } from 'react';\n\nexport default {\n  title: 'common/Pagination',\n  component: Pagination,\n  parameters: {\n    layout: 'padded',\n  },\n};\n\nexport function TestRanges() {\n  const MyPagination = ({ total }: { total: number }) => {\n    const [page, setPage] = useState(1);\n\n    return (\n      <Pagination\n        current={page}\n        total={total}\n        onPageChange={(event, button) => setPage(button.value)}\n      />\n    );\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: 24 }}>\n      {Array(16)\n        .fill(0)\n        .map((zero, index) => index)\n        .concat(99, 999, 9999)\n        .map(count => (\n          <div key={count}>\n            <h5>Total: {count}</h5>\n            <MyPagination total={count} />\n          </div>\n        ))}\n    </div>\n  );\n}\n\nTestRanges.storyName = 'Тест: Варианты данных';\n",locationsMap:{"test-ranges":{startLoc:{col:7,line:12},endLoc:{col:1,line:39},startBody:{col:7,line:12},endBody:{col:1,line:39}}}},layout:"padded"}},TestRanges=function TestRanges(){const MyPagination=({total})=>{const[page,setPage]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_sima_land_ui_nucleons_pagination__WEBPACK_IMPORTED_MODULE_0__.tl,{current:page,total,onPageChange:(event,button)=>setPage(button.value)})};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:{display:"flex",flexDirection:"column",gap:24},children:Array(16).fill(0).map(((zero,index)=>index)).concat(99,999,9999).map((count=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("h5",{children:["Total: ",count]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(MyPagination,{total:count})]},count)))})};TestRanges.storyName="Тест: Варианты данных",TestRanges.parameters={...TestRanges.parameters,docs:{...TestRanges.parameters?.docs,source:{originalSource:"function TestRanges() {\n  const MyPagination = ({\n    total\n  }: {\n    total: number;\n  }) => {\n    const [page, setPage] = useState(1);\n    return <Pagination current={page} total={total} onPageChange={(event, button) => setPage(button.value)} />;\n  };\n  return <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 24\n  }}>\n      {Array(16).fill(0).map((zero, index) => index).concat(99, 999, 9999).map(count => <div key={count}>\n            <h5>Total: {count}</h5>\n            <MyPagination total={count} />\n          </div>)}\n    </div>;\n}",...TestRanges.parameters?.docs?.source}}};const __namedExportsOrder=["TestRanges"]}}]);