"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[3876],{"./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Information.js":(__unused_webpack_module,exports,__webpack_require__)=>{const jsx_runtime_1=__webpack_require__("./node_modules/react/jsx-runtime.js"),ForwardRef=(0,__webpack_require__("./node_modules/react/index.js").forwardRef)(((props,ref)=>(0,jsx_runtime_1.jsxs)("svg",{width:16,height:16,viewBox:"0 0 16 16",ref,...props,children:[(0,jsx_runtime_1.jsx)("path",{d:"M8 6.5a1 1 0 0 1 1 1v4a1 1 0 1 1-2 0v-4a1 1 0 0 1 1-1ZM8 5.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"}),(0,jsx_runtime_1.jsx)("path",{fillRule:"evenodd",d:"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6a6 6 0 1 0 0 12A6 6 0 0 0 8 2Z",clipRule:"evenodd"})]})));exports.Z=ForwardRef},"./src/chip/__stories__/10-different-states.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DifferentStates:()=>DifferentStates,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/chip/index.ts"),_sima_land_ui_quarks_icons_16x16_Stroked_Cross__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Cross.js"),_sima_land_ui_quarks_icons_16x16_Stroked_Information__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Information.js"),_storybook_utils__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./.storybook/utils.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"common/Chip",component:_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_1__.Af,parameters:{storySource:{source:"import { useState } from 'react';\nimport { Chip, ChipIconButton, ChipAs, ChipShape, ChipColors } from '@sima-land/ui-nucleons/chip';\nimport CrossSVG from '@sima-land/ui-quarks/icons/16x16/Stroked/Cross';\nimport InformationSVG from '@sima-land/ui-quarks/icons/16x16/Stroked/Information';\nimport { Sandbox } from '../../../.storybook/utils';\nexport default {\n  title: 'common/Chip',\n  component: Chip,\n  parameters: {\n    layout: 'padded'\n  }\n};\nexport function DifferentStates() {\n  const [checked, setChecked] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [chipsAs, setChipsAs] = useState<ChipAs>('span');\n  const [shape, setShape] = useState<ChipShape>('square');\n  const [colors, setColors] = useState<ChipColors>('light');\n  const [adornment, setAdornment] = useState<'Нет' | 'Иконка' | 'Кнопка'>('Нет');\n  const [content, setContent] = useState<'Много текста' | 'Мало текста'>('Мало текста');\n  let endAdornment;\n  switch (adornment) {\n    case 'Иконка':\n      {\n        endAdornment = <InformationSVG fill='currentColor' />;\n        break;\n      }\n    case 'Кнопка':\n      {\n        endAdornment = <ChipIconButton onClick={() => alert('Крестик нажат')}>\n          <CrossSVG fill='currentColor' />\n        </ChipIconButton>;\n        break;\n      }\n  }\n  return <Sandbox controls={[{\n    type: 'select',\n    label: 'Тип',\n    options: ['span', 'anchor', 'button'],\n    bind: [chipsAs, setChipsAs]\n  }, {\n    type: 'toggle',\n    label: 'Checked',\n    bind: [checked, setChecked]\n  }, {\n    type: 'toggle',\n    label: 'Disabled',\n    bind: [disabled, setDisabled]\n  }, {\n    type: 'select',\n    label: 'Форма',\n    options: [{\n      value: 'square',\n      displayName: 'Square'\n    }, {\n      value: 'pill',\n      displayName: 'Pill'\n    }],\n    bind: [shape, setShape]\n  }, {\n    type: 'select',\n    label: 'Тема',\n    bind: [colors, setColors],\n    options: [{\n      value: 'light',\n      displayName: 'Светлая'\n    }, {\n      value: 'dark',\n      displayName: 'Темная'\n    }]\n  }, {\n    type: 'select',\n    label: 'Контент в конце',\n    bind: [adornment, setAdornment],\n    options: ['Нет', 'Иконка', 'Кнопка']\n  }, {\n    type: 'select',\n    label: 'Содержимое',\n    bind: [content, setContent],\n    options: ['Мало текста', 'Много текста']\n  }]} areaStyle={{\n    display: 'flex',\n    background: colors === 'dark' ? '#212121' : undefined\n  }}>\n      <Chip checked={checked} disabled={disabled} as={chipsAs} shape={shape} colors={colors} endAdornment={endAdornment} style={{\n      maxWidth: '240px'\n    }} padding={adornment === 'Кнопка' ? 'start' : undefined} adornmentGutter={adornment === 'Кнопка' ? 'unset' : undefined} {...chipsAs === 'anchor' ? {\n      href: 'https://sima-land.ru',\n      target: '_blank'\n    } : {}}>\n        {content === 'Мало текста' && <>Чипс простой</>}\n\n        {content === 'Много текста' && <>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam perspiciatis labore\n            ratione voluptas totam voluptatum, minima maiores ad recusandae doloremque!\n          </>}\n      </Chip>\n    </Sandbox>;\n}\nDifferentStates.storyName = 'Различные состояния';\nDifferentStates.parameters = {\n  ...DifferentStates.parameters,\n  docs: {\n    ...DifferentStates.parameters?.docs,\n    source: {\n      originalSource: \"function DifferentStates() {\\n  const [checked, setChecked] = useState(false);\\n  const [disabled, setDisabled] = useState(false);\\n  const [chipsAs, setChipsAs] = useState<ChipAs>('span');\\n  const [shape, setShape] = useState<ChipShape>('square');\\n  const [colors, setColors] = useState<ChipColors>('light');\\n  const [adornment, setAdornment] = useState<'\\u041D\\u0435\\u0442' | '\\u0418\\u043A\\u043E\\u043D\\u043A\\u0430' | '\\u041A\\u043D\\u043E\\u043F\\u043A\\u0430'>('\\u041D\\u0435\\u0442');\\n  const [content, setContent] = useState<'\\u041C\\u043D\\u043E\\u0433\\u043E \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430' | '\\u041C\\u0430\\u043B\\u043E \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430'>('\\u041C\\u0430\\u043B\\u043E \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430');\\n  let endAdornment;\\n  switch (adornment) {\\n    case '\\u0418\\u043A\\u043E\\u043D\\u043A\\u0430':\\n      {\\n        endAdornment = <InformationSVG fill='currentColor' />;\\n        break;\\n      }\\n    case '\\u041A\\u043D\\u043E\\u043F\\u043A\\u0430':\\n      {\\n        endAdornment = <ChipIconButton onClick={() => alert('\\u041A\\u0440\\u0435\\u0441\\u0442\\u0438\\u043A \\u043D\\u0430\\u0436\\u0430\\u0442')}>\\n          <CrossSVG fill='currentColor' />\\n        </ChipIconButton>;\\n        break;\\n      }\\n  }\\n  return <Sandbox controls={[{\\n    type: 'select',\\n    label: '\\u0422\\u0438\\u043F',\\n    options: ['span', 'anchor', 'button'],\\n    bind: [chipsAs, setChipsAs]\\n  }, {\\n    type: 'toggle',\\n    label: 'Checked',\\n    bind: [checked, setChecked]\\n  }, {\\n    type: 'toggle',\\n    label: 'Disabled',\\n    bind: [disabled, setDisabled]\\n  }, {\\n    type: 'select',\\n    label: '\\u0424\\u043E\\u0440\\u043C\\u0430',\\n    options: [{\\n      value: 'square',\\n      displayName: 'Square'\\n    }, {\\n      value: 'pill',\\n      displayName: 'Pill'\\n    }],\\n    bind: [shape, setShape]\\n  }, {\\n    type: 'select',\\n    label: '\\u0422\\u0435\\u043C\\u0430',\\n    bind: [colors, setColors],\\n    options: [{\\n      value: 'light',\\n      displayName: '\\u0421\\u0432\\u0435\\u0442\\u043B\\u0430\\u044F'\\n    }, {\\n      value: 'dark',\\n      displayName: '\\u0422\\u0435\\u043C\\u043D\\u0430\\u044F'\\n    }]\\n  }, {\\n    type: 'select',\\n    label: '\\u041A\\u043E\\u043D\\u0442\\u0435\\u043D\\u0442 \\u0432 \\u043A\\u043E\\u043D\\u0446\\u0435',\\n    bind: [adornment, setAdornment],\\n    options: ['\\u041D\\u0435\\u0442', '\\u0418\\u043A\\u043E\\u043D\\u043A\\u0430', '\\u041A\\u043D\\u043E\\u043F\\u043A\\u0430']\\n  }, {\\n    type: 'select',\\n    label: '\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0438\\u043C\\u043E\\u0435',\\n    bind: [content, setContent],\\n    options: ['\\u041C\\u0430\\u043B\\u043E \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430', '\\u041C\\u043D\\u043E\\u0433\\u043E \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430']\\n  }]} areaStyle={{\\n    display: 'flex',\\n    background: colors === 'dark' ? '#212121' : undefined\\n  }}>\\n      <Chip checked={checked} disabled={disabled} as={chipsAs} shape={shape} colors={colors} endAdornment={endAdornment} style={{\\n      maxWidth: '240px'\\n    }} padding={adornment === '\\u041A\\u043D\\u043E\\u043F\\u043A\\u0430' ? 'start' : undefined} adornmentGutter={adornment === '\\u041A\\u043D\\u043E\\u043F\\u043A\\u0430' ? 'unset' : undefined} {...chipsAs === 'anchor' ? {\\n      href: 'https://sima-land.ru',\\n      target: '_blank'\\n    } : {}}>\\n        {content === '\\u041C\\u0430\\u043B\\u043E \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430' && <>\\u0427\\u0438\\u043F\\u0441 \\u043F\\u0440\\u043E\\u0441\\u0442\\u043E\\u0439</>}\\n\\n        {content === '\\u041C\\u043D\\u043E\\u0433\\u043E \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430' && <>\\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam perspiciatis labore\\n            ratione voluptas totam voluptatum, minima maiores ad recusandae doloremque!\\n          </>}\\n      </Chip>\\n    </Sandbox>;\\n}\",\n      ...DifferentStates.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{"different-states":{startLoc:{col:7,line:13},endLoc:{col:1,line:99},startBody:{col:7,line:13},endBody:{col:1,line:99}}}},layout:"padded"}},DifferentStates=function DifferentStates(){const[checked,setChecked]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[disabled,setDisabled]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[chipsAs,setChipsAs]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("span"),[shape,setShape]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("square"),[colors,setColors]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("light"),[adornment,setAdornment]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("Нет"),[content,setContent]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("Мало текста");let endAdornment;switch(adornment){case"Иконка":endAdornment=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_quarks_icons_16x16_Stroked_Information__WEBPACK_IMPORTED_MODULE_3__.Z,{fill:"currentColor"});break;case"Кнопка":endAdornment=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_1__._8,{onClick:()=>alert("Крестик нажат"),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_quarks_icons_16x16_Stroked_Cross__WEBPACK_IMPORTED_MODULE_2__.Z,{fill:"currentColor"})})}return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_storybook_utils__WEBPACK_IMPORTED_MODULE_4__.pv,{controls:[{type:"select",label:"Тип",options:["span","anchor","button"],bind:[chipsAs,setChipsAs]},{type:"toggle",label:"Checked",bind:[checked,setChecked]},{type:"toggle",label:"Disabled",bind:[disabled,setDisabled]},{type:"select",label:"Форма",options:[{value:"square",displayName:"Square"},{value:"pill",displayName:"Pill"}],bind:[shape,setShape]},{type:"select",label:"Тема",bind:[colors,setColors],options:[{value:"light",displayName:"Светлая"},{value:"dark",displayName:"Темная"}]},{type:"select",label:"Контент в конце",bind:[adornment,setAdornment],options:["Нет","Иконка","Кнопка"]},{type:"select",label:"Содержимое",bind:[content,setContent],options:["Мало текста","Много текста"]}],areaStyle:{display:"flex",background:"dark"===colors?"#212121":void 0},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_sima_land_ui_nucleons_chip__WEBPACK_IMPORTED_MODULE_1__.Af,{checked,disabled,as:chipsAs,shape,colors,endAdornment,style:{maxWidth:"240px"},padding:"Кнопка"===adornment?"start":void 0,adornmentGutter:"Кнопка"===adornment?"unset":void 0,..."anchor"===chipsAs?{href:"https://sima-land.ru",target:"_blank"}:{},children:["Мало текста"===content&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:"Чипс простой"}),"Много текста"===content&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam perspiciatis labore ratione voluptas totam voluptatum, minima maiores ad recusandae doloremque!"})]})})};DifferentStates.displayName="DifferentStates",DifferentStates.storyName="Различные состояния",DifferentStates.parameters={...DifferentStates.parameters,docs:{...DifferentStates.parameters?.docs,source:{originalSource:"function DifferentStates() {\n  const [checked, setChecked] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [chipsAs, setChipsAs] = useState<ChipAs>('span');\n  const [shape, setShape] = useState<ChipShape>('square');\n  const [colors, setColors] = useState<ChipColors>('light');\n  const [adornment, setAdornment] = useState<'Нет' | 'Иконка' | 'Кнопка'>('Нет');\n  const [content, setContent] = useState<'Много текста' | 'Мало текста'>('Мало текста');\n  let endAdornment;\n  switch (adornment) {\n    case 'Иконка':\n      {\n        endAdornment = <InformationSVG fill='currentColor' />;\n        break;\n      }\n    case 'Кнопка':\n      {\n        endAdornment = <ChipIconButton onClick={() => alert('Крестик нажат')}>\n          <CrossSVG fill='currentColor' />\n        </ChipIconButton>;\n        break;\n      }\n  }\n  return <Sandbox controls={[{\n    type: 'select',\n    label: 'Тип',\n    options: ['span', 'anchor', 'button'],\n    bind: [chipsAs, setChipsAs]\n  }, {\n    type: 'toggle',\n    label: 'Checked',\n    bind: [checked, setChecked]\n  }, {\n    type: 'toggle',\n    label: 'Disabled',\n    bind: [disabled, setDisabled]\n  }, {\n    type: 'select',\n    label: 'Форма',\n    options: [{\n      value: 'square',\n      displayName: 'Square'\n    }, {\n      value: 'pill',\n      displayName: 'Pill'\n    }],\n    bind: [shape, setShape]\n  }, {\n    type: 'select',\n    label: 'Тема',\n    bind: [colors, setColors],\n    options: [{\n      value: 'light',\n      displayName: 'Светлая'\n    }, {\n      value: 'dark',\n      displayName: 'Темная'\n    }]\n  }, {\n    type: 'select',\n    label: 'Контент в конце',\n    bind: [adornment, setAdornment],\n    options: ['Нет', 'Иконка', 'Кнопка']\n  }, {\n    type: 'select',\n    label: 'Содержимое',\n    bind: [content, setContent],\n    options: ['Мало текста', 'Много текста']\n  }]} areaStyle={{\n    display: 'flex',\n    background: colors === 'dark' ? '#212121' : undefined\n  }}>\n      <Chip checked={checked} disabled={disabled} as={chipsAs} shape={shape} colors={colors} endAdornment={endAdornment} style={{\n      maxWidth: '240px'\n    }} padding={adornment === 'Кнопка' ? 'start' : undefined} adornmentGutter={adornment === 'Кнопка' ? 'unset' : undefined} {...chipsAs === 'anchor' ? {\n      href: 'https://sima-land.ru',\n      target: '_blank'\n    } : {}}>\n        {content === 'Мало текста' && <>Чипс простой</>}\n\n        {content === 'Много текста' && <>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam perspiciatis labore\n            ratione voluptas totam voluptatum, minima maiores ad recusandae doloremque!\n          </>}\n      </Chip>\n    </Sandbox>;\n}",...DifferentStates.parameters?.docs?.source}}};const __namedExportsOrder=["DifferentStates"]}}]);