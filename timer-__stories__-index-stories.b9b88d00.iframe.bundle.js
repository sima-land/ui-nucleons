"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[3301],{"./src/timer/__stories__/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,Styling:()=>Styling,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var react=__webpack_require__("./node_modules/react/index.js"),en_US=__webpack_require__("./node_modules/date-fns/locale/en-US.mjs"),_lib_defaultOptions=__webpack_require__("./node_modules/date-fns/_lib/defaultOptions.mjs");var getTimezoneOffsetInMilliseconds=__webpack_require__("./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs"),toDate=__webpack_require__("./node_modules/date-fns/toDate.mjs");function compareAsc(dateLeft,dateRight){const _dateLeft=(0,toDate.Q)(dateLeft),_dateRight=(0,toDate.Q)(dateRight),diff=_dateLeft.getTime()-_dateRight.getTime();return diff<0?-1:diff>0?1:diff}var constants=__webpack_require__("./node_modules/date-fns/constants.mjs");function formatDistanceStrict(date,baseDate,options){const defaultOptions=(0,_lib_defaultOptions.j)(),locale=options?.locale??defaultOptions.locale??en_US._,comparison=compareAsc(date,baseDate);if(isNaN(comparison))throw new RangeError("Invalid time value");const localizeOptions=Object.assign({},options,{addSuffix:options?.addSuffix,comparison});let dateLeft,dateRight;comparison>0?(dateLeft=(0,toDate.Q)(baseDate),dateRight=(0,toDate.Q)(date)):(dateLeft=(0,toDate.Q)(date),dateRight=(0,toDate.Q)(baseDate));const roundingMethod=function getRoundingMethod(method){return number=>{const result=(method?Math[method]:Math.trunc)(number);return 0===result?0:result}}(options?.roundingMethod??"round"),milliseconds=dateRight.getTime()-dateLeft.getTime(),minutes=milliseconds/constants.yJ,dstNormalizedMinutes=(milliseconds-((0,getTimezoneOffsetInMilliseconds.D)(dateRight)-(0,getTimezoneOffsetInMilliseconds.D)(dateLeft)))/constants.yJ,defaultUnit=options?.unit;let unit;if(unit=defaultUnit||(minutes<1?"second":minutes<60?"minute":minutes<constants.H_?"hour":dstNormalizedMinutes<constants.fH?"day":dstNormalizedMinutes<constants.UU?"month":"year"),"second"===unit){const seconds=roundingMethod(milliseconds/1e3);return locale.formatDistance("xSeconds",seconds,localizeOptions)}if("minute"===unit){const roundedMinutes=roundingMethod(minutes);return locale.formatDistance("xMinutes",roundedMinutes,localizeOptions)}if("hour"===unit){const hours=roundingMethod(minutes/60);return locale.formatDistance("xHours",hours,localizeOptions)}if("day"===unit){const days=roundingMethod(dstNormalizedMinutes/constants.H_);return locale.formatDistance("xDays",days,localizeOptions)}if("month"===unit){const months=roundingMethod(dstNormalizedMinutes/constants.fH);return 12===months&&"month"!==defaultUnit?locale.formatDistance("xYears",1,localizeOptions):locale.formatDistance("xMonths",months,localizeOptions)}{const years=roundingMethod(dstNormalizedMinutes/constants.UU);return locale.formatDistance("xYears",years,localizeOptions)}}function formatDistanceToNowStrict(date,options){return formatDistanceStrict(date,Date.now(),options)}function isAfter(date,dateToCompare){const _date=(0,toDate.Q)(date),_dateToCompare=(0,toDate.Q)(dateToCompare);return _date.getTime()>_dateToCompare.getTime()}var isValid=__webpack_require__("./node_modules/date-fns/isValid.mjs");function parseISO(argument,options){const additionalDigits=options?.additionalDigits??2,dateStrings=function splitDateString(dateString){const dateStrings={},array=dateString.split(patterns.dateTimeDelimiter);let timeString;if(array.length>2)return dateStrings;/:/.test(array[0])?timeString=array[0]:(dateStrings.date=array[0],timeString=array[1],patterns.timeZoneDelimiter.test(dateStrings.date)&&(dateStrings.date=dateString.split(patterns.timeZoneDelimiter)[0],timeString=dateString.substr(dateStrings.date.length,dateString.length)));if(timeString){const token=patterns.timezone.exec(timeString);token?(dateStrings.time=timeString.replace(token[1],""),dateStrings.timezone=token[1]):dateStrings.time=timeString}return dateStrings}(argument);let date;if(dateStrings.date){const parseYearResult=function parseYear(dateString,additionalDigits){const regex=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+additionalDigits)+"})|(\\d{2}|[+-]\\d{"+(2+additionalDigits)+"})$)"),captures=dateString.match(regex);if(!captures)return{year:NaN,restDateString:""};const year=captures[1]?parseInt(captures[1]):null,century=captures[2]?parseInt(captures[2]):null;return{year:null===century?year:100*century,restDateString:dateString.slice((captures[1]||captures[2]).length)}}(dateStrings.date,additionalDigits);date=function parseDate(dateString,year){if(null===year)return new Date(NaN);const captures=dateString.match(dateRegex);if(!captures)return new Date(NaN);const isWeekDate=!!captures[4],dayOfYear=parseDateUnit(captures[1]),month=parseDateUnit(captures[2])-1,day=parseDateUnit(captures[3]),week=parseDateUnit(captures[4]),dayOfWeek=parseDateUnit(captures[5])-1;if(isWeekDate)return function validateWeekDate(_year,week,day){return week>=1&&week<=53&&day>=0&&day<=6}(0,week,dayOfWeek)?function dayOfISOWeekYear(isoWeekYear,week,day){const date=new Date(0);date.setUTCFullYear(isoWeekYear,0,4);const fourthOfJanuaryDay=date.getUTCDay()||7,diff=7*(week-1)+day+1-fourthOfJanuaryDay;return date.setUTCDate(date.getUTCDate()+diff),date}(year,week,dayOfWeek):new Date(NaN);{const date=new Date(0);return function validateDate(year,month,date){return month>=0&&month<=11&&date>=1&&date<=(daysInMonths[month]||(isLeapYearIndex(year)?29:28))}(year,month,day)&&function validateDayOfYearDate(year,dayOfYear){return dayOfYear>=1&&dayOfYear<=(isLeapYearIndex(year)?366:365)}(year,dayOfYear)?(date.setUTCFullYear(year,month,Math.max(dayOfYear,day)),date):new Date(NaN)}}(parseYearResult.restDateString,parseYearResult.year)}if(!date||isNaN(date.getTime()))return new Date(NaN);const timestamp=date.getTime();let offset,time=0;if(dateStrings.time&&(time=function parseTime(timeString){const captures=timeString.match(timeRegex);if(!captures)return NaN;const hours=parseTimeUnit(captures[1]),minutes=parseTimeUnit(captures[2]),seconds=parseTimeUnit(captures[3]);if(!function validateTime(hours,minutes,seconds){if(24===hours)return 0===minutes&&0===seconds;return seconds>=0&&seconds<60&&minutes>=0&&minutes<60&&hours>=0&&hours<25}(hours,minutes,seconds))return NaN;return hours*constants.vh+minutes*constants.yJ+1e3*seconds}(dateStrings.time),isNaN(time)))return new Date(NaN);if(!dateStrings.timezone){const dirtyDate=new Date(timestamp+time),result=new Date(0);return result.setFullYear(dirtyDate.getUTCFullYear(),dirtyDate.getUTCMonth(),dirtyDate.getUTCDate()),result.setHours(dirtyDate.getUTCHours(),dirtyDate.getUTCMinutes(),dirtyDate.getUTCSeconds(),dirtyDate.getUTCMilliseconds()),result}return offset=function parseTimezone(timezoneString){if("Z"===timezoneString)return 0;const captures=timezoneString.match(timezoneRegex);if(!captures)return 0;const sign="+"===captures[1]?-1:1,hours=parseInt(captures[2]),minutes=captures[3]&&parseInt(captures[3])||0;if(!function validateTimezone(_hours,minutes){return minutes>=0&&minutes<=59}(0,minutes))return NaN;return sign*(hours*constants.vh+minutes*constants.yJ)}(dateStrings.timezone),isNaN(offset)?new Date(NaN):new Date(timestamp+time+offset)}const patterns={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},dateRegex=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,timeRegex=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,timezoneRegex=/^([+-])(\d{2})(?::?(\d{2}))?$/;function parseDateUnit(value){return value?parseInt(value):1}function parseTimeUnit(value){return value&&parseFloat(value.replace(",","."))||0}const daysInMonths=[31,null,31,30,31,30,31,31,30,31,30,31];function isLeapYearIndex(year){return year%400==0||year%4==0&&year%100!=0}const UNITS=["day","hour","minute","second"];function formatDistance({days,hours,minutes,seconds}){return[days,...[hours%24,minutes%60,seconds%60].map((s=>`${s}`.padStart(2,"0")))].join(":")}function getDistanceToNow(dateString){const date=parseISO(dateString);let result={days:0,hours:0,minutes:0,seconds:0};if((0,isValid.J)(date)&&!isAfter(new Date,date)){const[days,hours,minutes,seconds]=UNITS.map((unit=>parseInt(formatDistanceToNowStrict(date,{unit,roundingMethod:"floor"}).replace(/\D/g,""))));result={days,hours,minutes,seconds}}return result}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Timer({date,format=formatDistance,timeout=1e3}){const[distance,setDistance]=(0,react.useState)(getDistanceToNow(date));return(0,react.useEffect)((()=>{const timerId=setInterval((()=>{setDistance(getDistanceToNow(date))}),timeout);return setDistance(getDistanceToNow(date)),()=>clearInterval(timerId)}),[timeout]),(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:format(distance)})}try{Timer.displayName="Timer",Timer.__docgenInfo={description:"Таймер - выводит оставшееся время до заданной временной отметки.",displayName:"Timer",props:{date:{defaultValue:null,description:"Дата и время события.",name:"date",required:!0,type:{name:"string"}},format:{defaultValue:null,description:"Должна отформатировать данные об оставшемся времени для вывода.",name:"format",required:!1,type:{name:"((distance: TimeDistance) => ReactNode) | undefined"}},timeout:{defaultValue:{value:"1000"},description:"Частота обновления таймера в миллисекундах.",name:"timeout",required:!1,type:{name:"number | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/timer/timer.tsx#Timer"]={docgenInfo:Timer.__docgenInfo,name:"Timer",path:"src/timer/timer.tsx#Timer"})}catch(__react_docgen_typescript_loader_error){}var addLeadingZeros=__webpack_require__("./node_modules/date-fns/_lib/addLeadingZeros.mjs");function formatISO(date,options){const _date=(0,toDate.Q)(date);if(isNaN(_date.getTime()))throw new RangeError("Invalid time value");const format=options?.format??"extended",representation=options?.representation??"complete";let result="",tzOffset="";const dateDelimiter="extended"===format?"-":"",timeDelimiter="extended"===format?":":"";if("time"!==representation){const day=(0,addLeadingZeros.r)(_date.getDate(),2),month=(0,addLeadingZeros.r)(_date.getMonth()+1,2);result=`${(0,addLeadingZeros.r)(_date.getFullYear(),4)}${dateDelimiter}${month}${dateDelimiter}${day}`}if("date"!==representation){const offset=_date.getTimezoneOffset();if(0!==offset){const absoluteOffset=Math.abs(offset);tzOffset=`${offset<0?"+":"-"}${(0,addLeadingZeros.r)(Math.trunc(absoluteOffset/60),2)}:${(0,addLeadingZeros.r)(absoluteOffset%60,2)}`}else tzOffset="Z";result=`${result}${""===result?"":"T"}${[(0,addLeadingZeros.r)(_date.getHours(),2),(0,addLeadingZeros.r)(_date.getMinutes(),2),(0,addLeadingZeros.r)(_date.getSeconds(),2)].join(timeDelimiter)}${tzOffset}`}return result}var constructFrom=__webpack_require__("./node_modules/date-fns/constructFrom.mjs");function addMonths(date,amount){const _date=(0,toDate.Q)(date);if(isNaN(amount))return(0,constructFrom.L)(date,NaN);if(!amount)return _date;const dayOfMonth=_date.getDate(),endOfDesiredMonth=(0,constructFrom.L)(date,_date.getTime());endOfDesiredMonth.setMonth(_date.getMonth()+amount+1,0);return dayOfMonth>=endOfDesiredMonth.getDate()?endOfDesiredMonth:(_date.setFullYear(endOfDesiredMonth.getFullYear(),endOfDesiredMonth.getMonth(),dayOfMonth),_date)}var addDays=__webpack_require__("./node_modules/date-fns/addDays.mjs");const index_stories={title:"service/Timer",component:Timer,parameters:{storySource:{source:"import { Timer } from '@sima-land/ui-nucleons/timer';\nimport { addDays, addMonths, formatISO } from 'date-fns';\n\nexport default {\n  title: 'service/Timer',\n  component: Timer,\n  parameters: {\n    layout: 'padded',\n  },\n};\n\nexport function Primary() {\n  return <Timer date={formatISO(addMonths(new Date(), 1))} />;\n}\n\nPrimary.storyName = 'Простой пример';\n\nexport function Styling() {\n  const TimerPart = ({ label, value }: { label: string; value: number }) => (\n    <div style={{ textAlign: 'center' }}>\n      <div>{`${value}`.padStart(2, '0')}</div>\n      <div style={{ fontSize: 14, fontWeight: 'normal' }}>{label}</div>\n    </div>\n  );\n\n  const Divider = () => <div style={{ margin: '0 12px' }}>:</div>;\n\n  return (\n    <Timer\n      date={formatISO(addDays(new Date(), 5))}\n      timeout={1000 * 60}\n      format={({ days, hours, minutes }) => (\n        <div style={{ display: 'flex', fontSize: 28, fontWeight: 'bold' }}>\n          <TimerPart label='дней' value={Math.min(99, days)} />\n          <Divider />\n          <TimerPart label='часов' value={hours % 24} />\n          <Divider />\n          <TimerPart label='минут' value={minutes % 60} />\n        </div>\n      )}\n    />\n  );\n}\n\nStyling.storyName = 'Стилизация';\n",locationsMap:{primary:{startLoc:{col:7,line:12},endLoc:{col:1,line:14},startBody:{col:7,line:12},endBody:{col:1,line:14}},styling:{startLoc:{col:7,line:18},endLoc:{col:1,line:43},startBody:{col:7,line:18},endBody:{col:1,line:43}}}},layout:"padded"}},Primary=function Primary(){return(0,jsx_runtime.jsx)(Timer,{date:formatISO(addMonths(new Date,1))})};Primary.storyName="Простой пример";const Styling=function Styling(){const TimerPart=({label,value})=>(0,jsx_runtime.jsxs)("div",{style:{textAlign:"center"},children:[(0,jsx_runtime.jsx)("div",{children:`${value}`.padStart(2,"0")}),(0,jsx_runtime.jsx)("div",{style:{fontSize:14,fontWeight:"normal"},children:label})]}),Divider=()=>(0,jsx_runtime.jsx)("div",{style:{margin:"0 12px"},children:":"});return(0,jsx_runtime.jsx)(Timer,{date:formatISO((0,addDays.E)(new Date,5)),timeout:6e4,format:({days,hours,minutes})=>(0,jsx_runtime.jsxs)("div",{style:{display:"flex",fontSize:28,fontWeight:"bold"},children:[(0,jsx_runtime.jsx)(TimerPart,{label:"дней",value:Math.min(99,days)}),(0,jsx_runtime.jsx)(Divider,{}),(0,jsx_runtime.jsx)(TimerPart,{label:"часов",value:hours%24}),(0,jsx_runtime.jsx)(Divider,{}),(0,jsx_runtime.jsx)(TimerPart,{label:"минут",value:minutes%60})]})})};Styling.storyName="Стилизация",Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"function Primary() {\n  return <Timer date={formatISO(addMonths(new Date(), 1))} />;\n}",...Primary.parameters?.docs?.source}}},Styling.parameters={...Styling.parameters,docs:{...Styling.parameters?.docs,source:{originalSource:"function Styling() {\n  const TimerPart = ({\n    label,\n    value\n  }: {\n    label: string;\n    value: number;\n  }) => <div style={{\n    textAlign: 'center'\n  }}>\n      <div>{`${value}`.padStart(2, '0')}</div>\n      <div style={{\n      fontSize: 14,\n      fontWeight: 'normal'\n    }}>{label}</div>\n    </div>;\n  const Divider = () => <div style={{\n    margin: '0 12px'\n  }}>:</div>;\n  return <Timer date={formatISO(addDays(new Date(), 5))} timeout={1000 * 60} format={({\n    days,\n    hours,\n    minutes\n  }) => <div style={{\n    display: 'flex',\n    fontSize: 28,\n    fontWeight: 'bold'\n  }}>\n          <TimerPart label='дней' value={Math.min(99, days)} />\n          <Divider />\n          <TimerPart label='часов' value={hours % 24} />\n          <Divider />\n          <TimerPart label='минут' value={minutes % 60} />\n        </div>} />;\n}",...Styling.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","Styling"]}}]);