"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[2060],{"./node_modules/@sima-land/ui-quarks/icons/24x24/Stroked/Cross.js":(__unused_webpack_module,exports,__webpack_require__)=>{const jsx_runtime_1=__webpack_require__("./node_modules/react/jsx-runtime.js"),ForwardRef=(0,__webpack_require__("./node_modules/react/index.js").forwardRef)(((props,ref)=>(0,jsx_runtime_1.jsxs)("svg",{width:24,height:24,viewBox:"0 0 24 24",ref,...props,children:[(0,jsx_runtime_1.jsx)("path",{fillRule:"evenodd",d:"M20.707 3.293a1 1 0 0 1 0 1.414l-16 16a1 1 0 0 1-1.414-1.414l16-16a1 1 0 0 1 1.414 0Z",clipRule:"evenodd"}),(0,jsx_runtime_1.jsx)("path",{fillRule:"evenodd",d:"M3.293 3.293a1 1 0 0 1 1.414 0l16 16a1 1 0 0 1-1.414 1.414l-16-16a1 1 0 0 1 0-1.414Z",clipRule:"evenodd"})]})));exports.Z=ForwardRef},"./src/with-hint/__stories__/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutoCloseHook:()=>AutoCloseHook,InDocumentWithScroll:()=>InDocumentWithScroll,InScrolledParent:()=>InScrolledParent,Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _sima_land_ui_nucleons_with_hint__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/with-hint/index.tsx"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/button/index.tsx"),_sima_land_ui_nucleons_modal__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/modal/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");const styles={root:{display:"flex",alignItems:"center",flexDirection:"column"},modalContent:{position:"relative",padding:20}},__WEBPACK_DEFAULT_EXPORT__={title:"deprecated/WithHint",component:_sima_land_ui_nucleons_with_hint__WEBPACK_IMPORTED_MODULE_0__.y,parameters:{storySource:{source:"import { WithHint, useTempHint } from '@sima-land/ui-nucleons/with-hint';\nimport { useEffect, useState } from 'react';\nimport { Button } from '@sima-land/ui-nucleons/button';\nimport { Modal } from '@sima-land/ui-nucleons/modal';\nconst styles: Record<'root' | 'modalContent', React.CSSProperties> = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  modalContent: {\n    position: 'relative',\n    padding: 20\n  }\n};\nexport default {\n  title: 'deprecated/WithHint',\n  component: WithHint,\n  parameters: {\n    layout: 'padded'\n  }\n};\nexport function Primary() {\n  return <div style={styles.root}>\n      {(['right', 'bottom', 'left', 'top'] as const).map(direction => <WithHint key={direction} direction={direction} hint={<>\n              Первая строчка.\n              <br />И вторая строчка.\n            </>}>\n          {(ref, toggle) => <Button viewType='secondary' ref={(ref as any)} onMouseEnter={() => toggle(true)} onMouseLeave={() => toggle(false)} style={{\n        marginBottom: '32px'\n      }}>\n              Наведи на меня\n            </Button>}\n        </WithHint>)}\n    </div>;\n}\nPrimary.storyName = 'Простой пример';\nexport function AutoCloseHook() {\n  const [data, setData] = useState<string>();\n  const [bind, toggle] = useTempHint();\n  useEffect(() => {\n    if (data) {\n      toggle(true);\n    }\n  }, [data, toggle]);\n  const fakeFetch = () => {\n    setData(`Новый хинт! (${Date.now()})`);\n  };\n  return <div style={styles.root}>\n      <WithHint hint={data} {...bind}>\n        {ref => <Button ref={(ref as any)} onClick={fakeFetch} style={{\n        marginTop: '48px'\n      }}>\n            Нажми на меня\n          </Button>}\n      </WithHint>\n    </div>;\n}\nAutoCloseHook.storyName = 'Утилита: useTempHint';\nexport function InScrolledParent() {\n  const [modalOpened, toggleModal] = useState<boolean>(true);\n  const [bind, toggle] = useTempHint();\n  return <>\n      <div style={{\n      width: '960px',\n      display: 'flex',\n      alignItems: 'center',\n      height: 'calc(100vh - 100px)',\n      margin: '0 auto'\n    }}>\n        <WithHint hint='Проверочный хинт!' direction='right' {...bind}>\n          {ref => <Button ref={(ref as any)} onClick={() => toggleModal(true)}>\n              Открыть окно\n            </Button>}\n        </WithHint>\n      </div>\n\n      {modalOpened && <Modal size='s' height={360} onClose={() => toggleModal(false)}>\n          <Modal.Header divided title='Тестовое окно' />\n          <Modal.Body>\n            <div style={styles.modalContent}>\n              {[...Array(32).keys()].map(i => <p key={i}>Прокрути вниз</p>)}\n\n              <WithHint hint='Проверочный хинт!' direction='right' {...bind}>\n                {ref => <Button ref={(ref as any)} onClick={() => toggle(true)}>\n                    Нажми на меня\n                  </Button>}\n              </WithHint>\n\n              {[...Array(32).keys()].map(i => <p key={i}>Можешь прокрутить еще</p>)}\n            </div>\n          </Modal.Body>\n        </Modal>}\n    </>;\n}\nInScrolledParent.storyName = 'Тест: родительский элемент имеет прокрутку';\nexport function InDocumentWithScroll() {\n  const [bind, toggle] = useTempHint();\n  return <>\n      {[...Array(32).keys()].map(i => <p key={i}>Прокрути вниз</p>)}\n\n      <WithHint hint='Проверочный хинт!' direction='right' {...bind}>\n        {ref => <Button ref={(ref as any)} onClick={() => toggle(true)}>\n            Нажми на меня\n          </Button>}\n      </WithHint>\n\n      {[...Array(32).keys()].map(i => <p key={i}>Можешь прокрутить еще</p>)}\n    </>;\n}\nInDocumentWithScroll.storyName = 'Тест: страница имеет прокрутку';\nPrimary.parameters = {\n  ...Primary.parameters,\n  docs: {\n    ...Primary.parameters?.docs,\n    source: {\n      originalSource: \"function Primary() {\\n  return <div style={styles.root}>\\n      {(['right', 'bottom', 'left', 'top'] as const).map(direction => <WithHint key={direction} direction={direction} hint={<>\\n              \\u041F\\u0435\\u0440\\u0432\\u0430\\u044F \\u0441\\u0442\\u0440\\u043E\\u0447\\u043A\\u0430.\\n              <br />\\u0418 \\u0432\\u0442\\u043E\\u0440\\u0430\\u044F \\u0441\\u0442\\u0440\\u043E\\u0447\\u043A\\u0430.\\n            </>}>\\n          {(ref, toggle) => <Button viewType='secondary' ref={(ref as any)} onMouseEnter={() => toggle(true)} onMouseLeave={() => toggle(false)} style={{\\n        marginBottom: '32px'\\n      }}>\\n              \\u041D\\u0430\\u0432\\u0435\\u0434\\u0438 \\u043D\\u0430 \\u043C\\u0435\\u043D\\u044F\\n            </Button>}\\n        </WithHint>)}\\n    </div>;\\n}\",\n      ...Primary.parameters?.docs?.source\n    }\n  }\n};\nAutoCloseHook.parameters = {\n  ...AutoCloseHook.parameters,\n  docs: {\n    ...AutoCloseHook.parameters?.docs,\n    source: {\n      originalSource: \"function AutoCloseHook() {\\n  const [data, setData] = useState<string>();\\n  const [bind, toggle] = useTempHint();\\n  useEffect(() => {\\n    if (data) {\\n      toggle(true);\\n    }\\n  }, [data, toggle]);\\n  const fakeFetch = () => {\\n    setData(`\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0445\\u0438\\u043D\\u0442! (${Date.now()})`);\\n  };\\n  return <div style={styles.root}>\\n      <WithHint hint={data} {...bind}>\\n        {ref => <Button ref={(ref as any)} onClick={fakeFetch} style={{\\n        marginTop: '48px'\\n      }}>\\n            \\u041D\\u0430\\u0436\\u043C\\u0438 \\u043D\\u0430 \\u043C\\u0435\\u043D\\u044F\\n          </Button>}\\n      </WithHint>\\n    </div>;\\n}\",\n      ...AutoCloseHook.parameters?.docs?.source\n    }\n  }\n};\nInScrolledParent.parameters = {\n  ...InScrolledParent.parameters,\n  docs: {\n    ...InScrolledParent.parameters?.docs,\n    source: {\n      originalSource: \"function InScrolledParent() {\\n  const [modalOpened, toggleModal] = useState<boolean>(true);\\n  const [bind, toggle] = useTempHint();\\n  return <>\\n      <div style={{\\n      width: '960px',\\n      display: 'flex',\\n      alignItems: 'center',\\n      height: 'calc(100vh - 100px)',\\n      margin: '0 auto'\\n    }}>\\n        <WithHint hint='\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043E\\u0447\\u043D\\u044B\\u0439 \\u0445\\u0438\\u043D\\u0442!' direction='right' {...bind}>\\n          {ref => <Button ref={(ref as any)} onClick={() => toggleModal(true)}>\\n              \\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u043E\\u043A\\u043D\\u043E\\n            </Button>}\\n        </WithHint>\\n      </div>\\n\\n      {modalOpened && <Modal size='s' height={360} onClose={() => toggleModal(false)}>\\n          <Modal.Header divided title='\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0435 \\u043E\\u043A\\u043D\\u043E' />\\n          <Modal.Body>\\n            <div style={styles.modalContent}>\\n              {[...Array(32).keys()].map(i => <p key={i}>\\u041F\\u0440\\u043E\\u043A\\u0440\\u0443\\u0442\\u0438 \\u0432\\u043D\\u0438\\u0437</p>)}\\n\\n              <WithHint hint='\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043E\\u0447\\u043D\\u044B\\u0439 \\u0445\\u0438\\u043D\\u0442!' direction='right' {...bind}>\\n                {ref => <Button ref={(ref as any)} onClick={() => toggle(true)}>\\n                    \\u041D\\u0430\\u0436\\u043C\\u0438 \\u043D\\u0430 \\u043C\\u0435\\u043D\\u044F\\n                  </Button>}\\n              </WithHint>\\n\\n              {[...Array(32).keys()].map(i => <p key={i}>\\u041C\\u043E\\u0436\\u0435\\u0448\\u044C \\u043F\\u0440\\u043E\\u043A\\u0440\\u0443\\u0442\\u0438\\u0442\\u044C \\u0435\\u0449\\u0435</p>)}\\n            </div>\\n          </Modal.Body>\\n        </Modal>}\\n    </>;\\n}\",\n      ...InScrolledParent.parameters?.docs?.source\n    }\n  }\n};\nInDocumentWithScroll.parameters = {\n  ...InDocumentWithScroll.parameters,\n  docs: {\n    ...InDocumentWithScroll.parameters?.docs,\n    source: {\n      originalSource: \"function InDocumentWithScroll() {\\n  const [bind, toggle] = useTempHint();\\n  return <>\\n      {[...Array(32).keys()].map(i => <p key={i}>\\u041F\\u0440\\u043E\\u043A\\u0440\\u0443\\u0442\\u0438 \\u0432\\u043D\\u0438\\u0437</p>)}\\n\\n      <WithHint hint='\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043E\\u0447\\u043D\\u044B\\u0439 \\u0445\\u0438\\u043D\\u0442!' direction='right' {...bind}>\\n        {ref => <Button ref={(ref as any)} onClick={() => toggle(true)}>\\n            \\u041D\\u0430\\u0436\\u043C\\u0438 \\u043D\\u0430 \\u043C\\u0435\\u043D\\u044F\\n          </Button>}\\n      </WithHint>\\n\\n      {[...Array(32).keys()].map(i => <p key={i}>\\u041C\\u043E\\u0436\\u0435\\u0448\\u044C \\u043F\\u0440\\u043E\\u043A\\u0440\\u0443\\u0442\\u0438\\u0442\\u044C \\u0435\\u0449\\u0435</p>)}\\n    </>;\\n}\",\n      ...InDocumentWithScroll.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{primary:{startLoc:{col:7,line:23},endLoc:{col:1,line:36},startBody:{col:7,line:23},endBody:{col:1,line:36}},"auto-close-hook":{startLoc:{col:7,line:38},endLoc:{col:1,line:58},startBody:{col:7,line:38},endBody:{col:1,line:58}},"in-scrolled-parent":{startLoc:{col:7,line:60},endLoc:{col:1,line:95},startBody:{col:7,line:60},endBody:{col:1,line:95}},"in-document-with-scroll":{startLoc:{col:7,line:97},endLoc:{col:1,line:110},startBody:{col:7,line:97},endBody:{col:1,line:110}}}},layout:"padded"}},Primary=function Primary(){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:styles.root,children:["right","bottom","left","top"].map((direction=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_with_hint__WEBPACK_IMPORTED_MODULE_0__.y,{direction,hint:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:["Первая строчка.",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("br",{}),"И вторая строчка."]}),children:(ref,toggle)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_2__.z,{viewType:"secondary",ref,onMouseEnter:()=>toggle(!0),onMouseLeave:()=>toggle(!1),style:{marginBottom:"32px"},children:"Наведи на меня"})},direction)))})};Primary.displayName="Primary",Primary.storyName="Простой пример";const AutoCloseHook=function AutoCloseHook(){const[data,setData]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(),[bind,toggle]=(0,_sima_land_ui_nucleons_with_hint__WEBPACK_IMPORTED_MODULE_0__.k)();(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{data&&toggle(!0)}),[data,toggle]);const fakeFetch=()=>{setData(`Новый хинт! (${Date.now()})`)};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:styles.root,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_with_hint__WEBPACK_IMPORTED_MODULE_0__.y,{hint:data,...bind,children:ref=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_2__.z,{ref,onClick:fakeFetch,style:{marginTop:"48px"},children:"Нажми на меня"})})})};AutoCloseHook.displayName="AutoCloseHook",AutoCloseHook.storyName="Утилита: useTempHint";const InScrolledParent=function InScrolledParent(){const[modalOpened,toggleModal]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!0),[bind,toggle]=(0,_sima_land_ui_nucleons_with_hint__WEBPACK_IMPORTED_MODULE_0__.k)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:{width:"960px",display:"flex",alignItems:"center",height:"calc(100vh - 100px)",margin:"0 auto"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_with_hint__WEBPACK_IMPORTED_MODULE_0__.y,{hint:"Проверочный хинт!",direction:"right",...bind,children:ref=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_2__.z,{ref,onClick:()=>toggleModal(!0),children:"Открыть окно"})})}),modalOpened&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_sima_land_ui_nucleons_modal__WEBPACK_IMPORTED_MODULE_3__.u,{size:"s",height:360,onClose:()=>toggleModal(!1),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_modal__WEBPACK_IMPORTED_MODULE_3__.u.Header,{divided:!0,title:"Тестовое окно"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_modal__WEBPACK_IMPORTED_MODULE_3__.u.Body,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{style:styles.modalContent,children:[[...Array(32).keys()].map((i=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:"Прокрути вниз"},i))),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_with_hint__WEBPACK_IMPORTED_MODULE_0__.y,{hint:"Проверочный хинт!",direction:"right",...bind,children:ref=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_2__.z,{ref,onClick:()=>toggle(!0),children:"Нажми на меня"})}),[...Array(32).keys()].map((i=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:"Можешь прокрутить еще"},i)))]})})]})]})};InScrolledParent.storyName="Тест: родительский элемент имеет прокрутку";const InDocumentWithScroll=function InDocumentWithScroll(){const[bind,toggle]=(0,_sima_land_ui_nucleons_with_hint__WEBPACK_IMPORTED_MODULE_0__.k)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:[[...Array(32).keys()].map((i=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:"Прокрути вниз"},i))),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_with_hint__WEBPACK_IMPORTED_MODULE_0__.y,{hint:"Проверочный хинт!",direction:"right",...bind,children:ref=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_2__.z,{ref,onClick:()=>toggle(!0),children:"Нажми на меня"})}),[...Array(32).keys()].map((i=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:"Можешь прокрутить еще"},i)))]})};InDocumentWithScroll.storyName="Тест: страница имеет прокрутку",Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"function Primary() {\n  return <div style={styles.root}>\n      {(['right', 'bottom', 'left', 'top'] as const).map(direction => <WithHint key={direction} direction={direction} hint={<>\n              Первая строчка.\n              <br />И вторая строчка.\n            </>}>\n          {(ref, toggle) => <Button viewType='secondary' ref={(ref as any)} onMouseEnter={() => toggle(true)} onMouseLeave={() => toggle(false)} style={{\n        marginBottom: '32px'\n      }}>\n              Наведи на меня\n            </Button>}\n        </WithHint>)}\n    </div>;\n}",...Primary.parameters?.docs?.source}}},AutoCloseHook.parameters={...AutoCloseHook.parameters,docs:{...AutoCloseHook.parameters?.docs,source:{originalSource:"function AutoCloseHook() {\n  const [data, setData] = useState<string>();\n  const [bind, toggle] = useTempHint();\n  useEffect(() => {\n    if (data) {\n      toggle(true);\n    }\n  }, [data, toggle]);\n  const fakeFetch = () => {\n    setData(`Новый хинт! (${Date.now()})`);\n  };\n  return <div style={styles.root}>\n      <WithHint hint={data} {...bind}>\n        {ref => <Button ref={(ref as any)} onClick={fakeFetch} style={{\n        marginTop: '48px'\n      }}>\n            Нажми на меня\n          </Button>}\n      </WithHint>\n    </div>;\n}",...AutoCloseHook.parameters?.docs?.source}}},InScrolledParent.parameters={...InScrolledParent.parameters,docs:{...InScrolledParent.parameters?.docs,source:{originalSource:"function InScrolledParent() {\n  const [modalOpened, toggleModal] = useState<boolean>(true);\n  const [bind, toggle] = useTempHint();\n  return <>\n      <div style={{\n      width: '960px',\n      display: 'flex',\n      alignItems: 'center',\n      height: 'calc(100vh - 100px)',\n      margin: '0 auto'\n    }}>\n        <WithHint hint='Проверочный хинт!' direction='right' {...bind}>\n          {ref => <Button ref={(ref as any)} onClick={() => toggleModal(true)}>\n              Открыть окно\n            </Button>}\n        </WithHint>\n      </div>\n\n      {modalOpened && <Modal size='s' height={360} onClose={() => toggleModal(false)}>\n          <Modal.Header divided title='Тестовое окно' />\n          <Modal.Body>\n            <div style={styles.modalContent}>\n              {[...Array(32).keys()].map(i => <p key={i}>Прокрути вниз</p>)}\n\n              <WithHint hint='Проверочный хинт!' direction='right' {...bind}>\n                {ref => <Button ref={(ref as any)} onClick={() => toggle(true)}>\n                    Нажми на меня\n                  </Button>}\n              </WithHint>\n\n              {[...Array(32).keys()].map(i => <p key={i}>Можешь прокрутить еще</p>)}\n            </div>\n          </Modal.Body>\n        </Modal>}\n    </>;\n}",...InScrolledParent.parameters?.docs?.source}}},InDocumentWithScroll.parameters={...InDocumentWithScroll.parameters,docs:{...InDocumentWithScroll.parameters?.docs,source:{originalSource:"function InDocumentWithScroll() {\n  const [bind, toggle] = useTempHint();\n  return <>\n      {[...Array(32).keys()].map(i => <p key={i}>Прокрути вниз</p>)}\n\n      <WithHint hint='Проверочный хинт!' direction='right' {...bind}>\n        {ref => <Button ref={(ref as any)} onClick={() => toggle(true)}>\n            Нажми на меня\n          </Button>}\n      </WithHint>\n\n      {[...Array(32).keys()].map(i => <p key={i}>Можешь прокрутить еще</p>)}\n    </>;\n}",...InDocumentWithScroll.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","AutoCloseHook","InScrolledParent","InDocumentWithScroll"]},"./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Qp:()=>disableBodyScroll,tG:()=>enableBodyScroll});var hasPassiveEvents=!1;if("undefined"!=typeof window){var passiveTestOptions={get passive(){hasPassiveEvents=!0}};window.addEventListener("testPassive",null,passiveTestOptions),window.removeEventListener("testPassive",null,passiveTestOptions)}var isIosDevice="undefined"!=typeof window&&window.navigator&&window.navigator.platform&&(/iP(ad|hone|od)/.test(window.navigator.platform)||"MacIntel"===window.navigator.platform&&window.navigator.maxTouchPoints>1),locks=[],documentListenerAdded=!1,initialClientY=-1,previousBodyOverflowSetting=void 0,previousBodyPaddingRight=void 0,allowTouchMove=function allowTouchMove(el){return locks.some((function(lock){return!(!lock.options.allowTouchMove||!lock.options.allowTouchMove(el))}))},preventDefault=function preventDefault(rawEvent){var e=rawEvent||window.event;return!!allowTouchMove(e.target)||(e.touches.length>1||(e.preventDefault&&e.preventDefault(),!1))},restoreOverflowSetting=function restoreOverflowSetting(){void 0!==previousBodyPaddingRight&&(document.body.style.paddingRight=previousBodyPaddingRight,previousBodyPaddingRight=void 0),void 0!==previousBodyOverflowSetting&&(document.body.style.overflow=previousBodyOverflowSetting,previousBodyOverflowSetting=void 0)},disableBodyScroll=function disableBodyScroll(targetElement,options){if(targetElement){if(!locks.some((function(lock){return lock.targetElement===targetElement}))){var lock={targetElement,options:options||{}};locks=[].concat(function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)}(locks),[lock]),isIosDevice?(targetElement.ontouchstart=function(event){1===event.targetTouches.length&&(initialClientY=event.targetTouches[0].clientY)},targetElement.ontouchmove=function(event){1===event.targetTouches.length&&function handleScroll(event,targetElement){var clientY=event.targetTouches[0].clientY-initialClientY;!allowTouchMove(event.target)&&(targetElement&&0===targetElement.scrollTop&&clientY>0||function isTargetElementTotallyScrolled(targetElement){return!!targetElement&&targetElement.scrollHeight-targetElement.scrollTop<=targetElement.clientHeight}(targetElement)&&clientY<0?preventDefault(event):event.stopPropagation())}(event,targetElement)},documentListenerAdded||(document.addEventListener("touchmove",preventDefault,hasPassiveEvents?{passive:!1}:void 0),documentListenerAdded=!0)):function setOverflowHidden(options){if(void 0===previousBodyPaddingRight){var _reserveScrollBarGap=!!options&&!0===options.reserveScrollBarGap,scrollBarGap=window.innerWidth-document.documentElement.clientWidth;_reserveScrollBarGap&&scrollBarGap>0&&(previousBodyPaddingRight=document.body.style.paddingRight,document.body.style.paddingRight=scrollBarGap+"px")}void 0===previousBodyOverflowSetting&&(previousBodyOverflowSetting=document.body.style.overflow,document.body.style.overflow="hidden")}(options)}}else console.error("disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.")},enableBodyScroll=function enableBodyScroll(targetElement){targetElement?(locks=locks.filter((function(lock){return lock.targetElement!==targetElement})),isIosDevice?(targetElement.ontouchstart=null,targetElement.ontouchmove=null,documentListenerAdded&&0===locks.length&&(document.removeEventListener("touchmove",preventDefault,hasPassiveEvents?{passive:!1}:void 0),documentListenerAdded=!1)):locks.length||restoreOverflowSetting()):console.error("enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.")}}}]);