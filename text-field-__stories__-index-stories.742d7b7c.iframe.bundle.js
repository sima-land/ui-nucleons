"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[9472],{"./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Arrows/Right.js":(__unused_webpack_module,exports,__webpack_require__)=>{const jsx_runtime_1=__webpack_require__("./node_modules/react/jsx-runtime.js"),ForwardRef=(0,__webpack_require__("./node_modules/react/index.js").forwardRef)(((props,ref)=>(0,jsx_runtime_1.jsx)("svg",{width:16,height:16,viewBox:"0 0 16 16",ref,...props,children:(0,jsx_runtime_1.jsx)("path",{fillRule:"evenodd",d:"M6.341 12.753a1 1 0 0 1-.094-1.412L9.171 8 6.247 4.659a1 1 0 0 1 1.506-1.317l3.5 4a1 1 0 0 1 0 1.317l-3.5 4a1 1 0 0 1-1.412.094Z",clipRule:"evenodd"})})));exports.Z=ForwardRef},"./src/text-field/__stories__/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Autofill:()=>Autofill,DifferentValues:()=>DifferentValues,Multiline:()=>Multiline,Primary:()=>Primary,RestPlaceholder:()=>RestPlaceholder,Rounds:()=>Rounds,ValuePropChange:()=>ValuePropChange,ValuePropChangeMultiline:()=>ValuePropChangeMultiline,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/text-field/index.tsx"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_sima_land_ui_nucleons_colors__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/colors/index.ts"),_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/button/index.tsx"),_sima_land_ui_quarks_icons_16x16_Stroked_Arrows_Right__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@sima-land/ui-quarks/icons/16x16/Stroked/Arrows/Right.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");const baseProps={style:{width:"100%"}},stateProps={default:{},disabled:{disabled:!0},failed:{failed:!0},focused:{focused:!0}},desktopSizes=["xs","s","l"],longValue=["Lorem ipsum dolor sit amet consectetur,","adipisicing elit. Distinctio maxime at tempora","adipisci placeat odio omnis laudantium cumque.","Omnis, accusamus?"].join(" \n"),testValues=["test",123,"",null,void 0],__WEBPACK_DEFAULT_EXPORT__={title:"deprecated/TextField",component:_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,parameters:{storySource:{source:"import { TextField } from '@sima-land/ui-nucleons/text-field';\nimport { useState } from 'react';\nimport { COLORS } from '@sima-land/ui-nucleons/colors';\nimport { Button } from '@sima-land/ui-nucleons/button';\nimport RightSVG from '@sima-land/ui-quarks/icons/16x16/Stroked/Arrows/Right';\nconst baseProps = {\n  style: {\n    width: '100%'\n  }\n};\nconst stateProps = {\n  default: {},\n  disabled: {\n    disabled: true\n  },\n  failed: {\n    failed: true\n  },\n  focused: {\n    focused: true\n  }\n};\nconst desktopSizes = ['xs', 's', 'l'];\nconst longValue = ['Lorem ipsum dolor sit amet consectetur,', 'adipisicing elit. Distinctio maxime at tempora', 'adipisci placeat odio omnis laudantium cumque.', 'Omnis, accusamus?'].join(' \\n');\nconst testValues = (['test', 123, '', null, undefined] as const);\nexport default {\n  title: 'deprecated/TextField',\n  component: TextField,\n  parameters: {\n    layout: 'padded'\n  }\n};\nexport const Primary = () => <>\n    <h2>Desktop</h2>\n    <div style={{\n    display: 'flex',\n    justifyContent: 'space-between'\n  }}>\n      {Object.entries(stateProps).map(([stateName, props]) => <div style={{\n      flexGrow: 1,\n      marginRight: 16\n    }} key={stateName}>\n          <h4 style={{\n        textTransform: 'capitalize'\n      }}>{stateName}</h4>\n          {desktopSizes.map(sizeName => <div style={{\n        marginTop: 24\n      }} key={sizeName}>\n              <h5 style={{\n          textTransform: 'uppercase'\n        }}>Size: {sizeName}</h5>\n              <TextField {...baseProps} {...props} label='Label' placeholder='Placeholder' size={(sizeName as any)} defaultValue='Text' variant='desktop' caption='Caption' endAdornment={<RightSVG fill={COLORS.get('basic-gray24')} />} />\n              {sizeName === 'l' && <>\n                  <div style={{\n            height: 32\n          }} />\n                  <TextField {...baseProps} {...props} size={sizeName} placeholder='Placeholder' defaultValue='Text' variant='desktop' caption='Caption' endAdornment={<RightSVG fill={COLORS.get('basic-gray24')} />} />\n                </>}\n            </div>)}\n        </div>)}\n    </div>\n\n    <h2 style={{\n    marginTop: 32\n  }}>Mobile</h2>\n    <div style={{\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: 32\n  }}>\n      {Object.entries(stateProps).map(([stateName, props]) => <div style={{\n      flexGrow: 1,\n      marginRight: 16\n    }} key={stateName}>\n          <h4 style={{\n        textTransform: 'capitalize'\n      }}>{stateName}</h4>\n          <TextField {...baseProps} {...props} label='Label' placeholder='Placeholder' defaultValue='Text' variant='mobile' caption='Caption' endAdornment={<RightSVG fill={COLORS.get('basic-gray24')} />} />\n          <div style={{\n        height: 32\n      }} />\n          <TextField {...baseProps} {...props} placeholder='Placeholder' defaultValue='Text' variant='mobile' caption='Caption' endAdornment={<RightSVG fill={COLORS.get('basic-gray24')} />} />\n        </div>)}\n    </div>\n  </>;\nexport const Multiline = () => <>\n    <h2>Desktop</h2>\n    <TextField {...baseProps} defaultValue={longValue} multiline label='Label' caption='Caption' placeholder='Placeholder' baseInputProps={{\n    rows: 8\n  }} />\n    <div style={{\n    height: 32\n  }} />\n    <TextField {...baseProps} defaultValue={longValue} multiline caption='Caption' placeholder='Placeholder' />\n\n    <h2>Mobile</h2>\n    <TextField {...baseProps} defaultValue={longValue} multiline label='Label' caption='Caption' placeholder='Placeholder' variant='mobile' />\n    <div style={{\n    height: 32\n  }} />\n    <TextField {...baseProps} defaultValue={longValue} multiline caption='Caption' placeholder='Placeholder' variant='mobile' />\n  </>;\nexport const DifferentValues = () => <>\n    {testValues.map((testValue, index) => <div key={index} style={{\n    marginTop: 32\n  }}>\n        <h3>\n          Значение <code>value</code>: {String(testValue) || JSON.stringify(testValue)}\n        </h3>\n        <TextField {...baseProps} label='Label' defaultValue={(testValue as any)} />\n      </div>)}\n  </>;\nexport const Rounds = () => <>\n    <h2>Скругления</h2>\n    <p>\n      Их можно задавать только для варианта <code>desktop</code>:\n    </p>\n    {['none', 'all', 'top', 'left', 'bottom', 'right', 'bottomLeft', 'bottomRight', 'topLeft', 'topRight'].map(variant => <div style={{\n    marginBottom: 32\n  }} key={variant}>\n        <TextField {...baseProps} label={`rounds=\"${variant}\"`} rounds={(variant as any)} />\n      </div>)}\n  </>;\nexport const RestPlaceholder = () => {\n  const [value, setValue] = useState('');\n  return <>\n      <h3>Введите 10 цифр</h3>\n      <TextField value={value} label='Label' onChange={(e: any) => setValue(e.target.value.slice(0, 10))} restPlaceholder={'9'.repeat(10).slice(value.length)} style={{\n      width: 240\n    }} />\n      <div style={{\n      height: 24\n    }} />\n      <TextField variant='mobile' label='Label' value={value} onChange={(e: any) => setValue(e.target.value.slice(0, 10))} restPlaceholder={'9'.repeat(10).slice(value.length)} style={{\n      width: 240\n    }} />\n    </>;\n};\nexport const ValuePropChange = () => {\n  const [value, setValue] = useState('');\n  return <>\n      <p>Label должен подниматься и опускаться в зависимости от того введено значение или нет</p>\n\n      <p>\n        <button onClick={() => setValue('Some text')}>Заполнить</button>{' '}\n        <button onClick={() => setValue('')}>Очистить</button>\n      </p>\n\n      <TextField label='Test label' value={value} onChange={(e: any) => setValue(e.target.value)} style={{\n      width: 240\n    }} />\n    </>;\n};\nValuePropChange.storyName = 'service: Value prop change';\nexport const ValuePropChangeMultiline = () => {\n  const [value, setValue] = useState('');\n  return <>\n      <p>Label должен подниматься и опускаться в зависимости от того введено значение или нет</p>\n\n      <p>\n        <button onClick={() => setValue([longValue, longValue].join('\\n'))}>Заполнить</button>{' '}\n        <button onClick={() => setValue('')}>Очистить</button>\n      </p>\n\n      <TextField multiline label='Test label' value={value} onChange={(e: any) => setValue(e.target.value)} style={{\n      width: 240\n    }} />\n    </>;\n};\nValuePropChangeMultiline.storyName = 'service: Multiline value prop change';\nexport const Autofill = () => {\n  const styles: React.CSSProperties = {\n    display: 'block',\n    width: '240px',\n    marginBottom: '16px'\n  };\n  const [shown, toggle] = useState<boolean>();\n  return !shown ? <Button onClick={() => toggle(true)}>Открыть форму</Button> : <form action='/login' method='POST' onSubmit={e => {\n    e.preventDefault();\n    window.location.assign('');\n  }}>\n      <TextField label='Email' defaultValue='' style={styles} name='email' type='email' autoComplete='email' />\n\n      <TextField label='Password' defaultValue='' style={styles} name='password' type='password' autoComplete='password' />\n\n      <Button size='s' type='submit'>\n        Submit\n      </Button>\n    </form>;\n};\nAutofill.storyName = 'service: Autofill';\nPrimary.parameters = {\n  ...Primary.parameters,\n  docs: {\n    ...Primary.parameters?.docs,\n    source: {\n      originalSource: \"() => <>\\n    <h2>Desktop</h2>\\n    <div style={{\\n    display: 'flex',\\n    justifyContent: 'space-between'\\n  }}>\\n      {Object.entries(stateProps).map(([stateName, props]) => <div style={{\\n      flexGrow: 1,\\n      marginRight: 16\\n    }} key={stateName}>\\n          <h4 style={{\\n        textTransform: 'capitalize'\\n      }}>{stateName}</h4>\\n          {desktopSizes.map(sizeName => <div style={{\\n        marginTop: 24\\n      }} key={sizeName}>\\n              <h5 style={{\\n          textTransform: 'uppercase'\\n        }}>Size: {sizeName}</h5>\\n              <TextField {...baseProps} {...props} label='Label' placeholder='Placeholder' size={(sizeName as any)} defaultValue='Text' variant='desktop' caption='Caption' endAdornment={<RightSVG fill={COLORS.get('basic-gray24')} />} />\\n              {sizeName === 'l' && <>\\n                  <div style={{\\n            height: 32\\n          }} />\\n                  <TextField {...baseProps} {...props} size={sizeName} placeholder='Placeholder' defaultValue='Text' variant='desktop' caption='Caption' endAdornment={<RightSVG fill={COLORS.get('basic-gray24')} />} />\\n                </>}\\n            </div>)}\\n        </div>)}\\n    </div>\\n\\n    <h2 style={{\\n    marginTop: 32\\n  }}>Mobile</h2>\\n    <div style={{\\n    display: 'flex',\\n    justifyContent: 'space-between',\\n    marginBottom: 32\\n  }}>\\n      {Object.entries(stateProps).map(([stateName, props]) => <div style={{\\n      flexGrow: 1,\\n      marginRight: 16\\n    }} key={stateName}>\\n          <h4 style={{\\n        textTransform: 'capitalize'\\n      }}>{stateName}</h4>\\n          <TextField {...baseProps} {...props} label='Label' placeholder='Placeholder' defaultValue='Text' variant='mobile' caption='Caption' endAdornment={<RightSVG fill={COLORS.get('basic-gray24')} />} />\\n          <div style={{\\n        height: 32\\n      }} />\\n          <TextField {...baseProps} {...props} placeholder='Placeholder' defaultValue='Text' variant='mobile' caption='Caption' endAdornment={<RightSVG fill={COLORS.get('basic-gray24')} />} />\\n        </div>)}\\n    </div>\\n  </>\",\n      ...Primary.parameters?.docs?.source\n    }\n  }\n};\nMultiline.parameters = {\n  ...Multiline.parameters,\n  docs: {\n    ...Multiline.parameters?.docs,\n    source: {\n      originalSource: \"() => <>\\n    <h2>Desktop</h2>\\n    <TextField {...baseProps} defaultValue={longValue} multiline label='Label' caption='Caption' placeholder='Placeholder' baseInputProps={{\\n    rows: 8\\n  }} />\\n    <div style={{\\n    height: 32\\n  }} />\\n    <TextField {...baseProps} defaultValue={longValue} multiline caption='Caption' placeholder='Placeholder' />\\n\\n    <h2>Mobile</h2>\\n    <TextField {...baseProps} defaultValue={longValue} multiline label='Label' caption='Caption' placeholder='Placeholder' variant='mobile' />\\n    <div style={{\\n    height: 32\\n  }} />\\n    <TextField {...baseProps} defaultValue={longValue} multiline caption='Caption' placeholder='Placeholder' variant='mobile' />\\n  </>\",\n      ...Multiline.parameters?.docs?.source\n    }\n  }\n};\nDifferentValues.parameters = {\n  ...DifferentValues.parameters,\n  docs: {\n    ...DifferentValues.parameters?.docs,\n    source: {\n      originalSource: \"() => <>\\n    {testValues.map((testValue, index) => <div key={index} style={{\\n    marginTop: 32\\n  }}>\\n        <h3>\\n          \\u0417\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 <code>value</code>: {String(testValue) || JSON.stringify(testValue)}\\n        </h3>\\n        <TextField {...baseProps} label='Label' defaultValue={(testValue as any)} />\\n      </div>)}\\n  </>\",\n      ...DifferentValues.parameters?.docs?.source\n    }\n  }\n};\nRounds.parameters = {\n  ...Rounds.parameters,\n  docs: {\n    ...Rounds.parameters?.docs,\n    source: {\n      originalSource: \"() => <>\\n    <h2>\\u0421\\u043A\\u0440\\u0443\\u0433\\u043B\\u0435\\u043D\\u0438\\u044F</h2>\\n    <p>\\n      \\u0418\\u0445 \\u043C\\u043E\\u0436\\u043D\\u043E \\u0437\\u0430\\u0434\\u0430\\u0432\\u0430\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0434\\u043B\\u044F \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u0430 <code>desktop</code>:\\n    </p>\\n    {['none', 'all', 'top', 'left', 'bottom', 'right', 'bottomLeft', 'bottomRight', 'topLeft', 'topRight'].map(variant => <div style={{\\n    marginBottom: 32\\n  }} key={variant}>\\n        <TextField {...baseProps} label={`rounds=\\\"${variant}\\\"`} rounds={(variant as any)} />\\n      </div>)}\\n  </>\",\n      ...Rounds.parameters?.docs?.source\n    }\n  }\n};\nRestPlaceholder.parameters = {\n  ...RestPlaceholder.parameters,\n  docs: {\n    ...RestPlaceholder.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const [value, setValue] = useState('');\\n  return <>\\n      <h3>\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 10 \\u0446\\u0438\\u0444\\u0440</h3>\\n      <TextField value={value} label='Label' onChange={(e: any) => setValue(e.target.value.slice(0, 10))} restPlaceholder={'9'.repeat(10).slice(value.length)} style={{\\n      width: 240\\n    }} />\\n      <div style={{\\n      height: 24\\n    }} />\\n      <TextField variant='mobile' label='Label' value={value} onChange={(e: any) => setValue(e.target.value.slice(0, 10))} restPlaceholder={'9'.repeat(10).slice(value.length)} style={{\\n      width: 240\\n    }} />\\n    </>;\\n}\",\n      ...RestPlaceholder.parameters?.docs?.source\n    }\n  }\n};\nValuePropChange.parameters = {\n  ...ValuePropChange.parameters,\n  docs: {\n    ...ValuePropChange.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const [value, setValue] = useState('');\\n  return <>\\n      <p>Label \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u043F\\u043E\\u0434\\u043D\\u0438\\u043C\\u0430\\u0442\\u044C\\u0441\\u044F \\u0438 \\u043E\\u043F\\u0443\\u0441\\u043A\\u0430\\u0442\\u044C\\u0441\\u044F \\u0432 \\u0437\\u0430\\u0432\\u0438\\u0441\\u0438\\u043C\\u043E\\u0441\\u0442\\u0438 \\u043E\\u0442 \\u0442\\u043E\\u0433\\u043E \\u0432\\u0432\\u0435\\u0434\\u0435\\u043D\\u043E \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043B\\u0438 \\u043D\\u0435\\u0442</p>\\n\\n      <p>\\n        <button onClick={() => setValue('Some text')}>\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C</button>{' '}\\n        <button onClick={() => setValue('')}>\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C</button>\\n      </p>\\n\\n      <TextField label='Test label' value={value} onChange={(e: any) => setValue(e.target.value)} style={{\\n      width: 240\\n    }} />\\n    </>;\\n}\",\n      ...ValuePropChange.parameters?.docs?.source\n    }\n  }\n};\nValuePropChangeMultiline.parameters = {\n  ...ValuePropChangeMultiline.parameters,\n  docs: {\n    ...ValuePropChangeMultiline.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const [value, setValue] = useState('');\\n  return <>\\n      <p>Label \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u043F\\u043E\\u0434\\u043D\\u0438\\u043C\\u0430\\u0442\\u044C\\u0441\\u044F \\u0438 \\u043E\\u043F\\u0443\\u0441\\u043A\\u0430\\u0442\\u044C\\u0441\\u044F \\u0432 \\u0437\\u0430\\u0432\\u0438\\u0441\\u0438\\u043C\\u043E\\u0441\\u0442\\u0438 \\u043E\\u0442 \\u0442\\u043E\\u0433\\u043E \\u0432\\u0432\\u0435\\u0434\\u0435\\u043D\\u043E \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043B\\u0438 \\u043D\\u0435\\u0442</p>\\n\\n      <p>\\n        <button onClick={() => setValue([longValue, longValue].join('\\\\n'))}>\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C</button>{' '}\\n        <button onClick={() => setValue('')}>\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C</button>\\n      </p>\\n\\n      <TextField multiline label='Test label' value={value} onChange={(e: any) => setValue(e.target.value)} style={{\\n      width: 240\\n    }} />\\n    </>;\\n}\",\n      ...ValuePropChangeMultiline.parameters?.docs?.source\n    }\n  }\n};\nAutofill.parameters = {\n  ...Autofill.parameters,\n  docs: {\n    ...Autofill.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const styles: React.CSSProperties = {\\n    display: 'block',\\n    width: '240px',\\n    marginBottom: '16px'\\n  };\\n  const [shown, toggle] = useState<boolean>();\\n  return !shown ? <Button onClick={() => toggle(true)}>\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u0444\\u043E\\u0440\\u043C\\u0443</Button> : <form action='/login' method='POST' onSubmit={e => {\\n    e.preventDefault();\\n    window.location.assign('');\\n  }}>\\n      <TextField label='Email' defaultValue='' style={styles} name='email' type='email' autoComplete='email' />\\n\\n      <TextField label='Password' defaultValue='' style={styles} name='password' type='password' autoComplete='password' />\\n\\n      <Button size='s' type='submit'>\\n        Submit\\n      </Button>\\n    </form>;\\n}\",\n      ...Autofill.parameters?.docs?.source\n    }\n  }\n};",locationsMap:{primary:{startLoc:{col:23,line:33},endLoc:{col:5,line:85},startBody:{col:23,line:33},endBody:{col:5,line:85}},multiline:{startLoc:{col:25,line:86},endLoc:{col:5,line:102},startBody:{col:25,line:86},endBody:{col:5,line:102}},"different-values":{startLoc:{col:31,line:103},endLoc:{col:5,line:112},startBody:{col:31,line:103},endBody:{col:5,line:112}},rounds:{startLoc:{col:22,line:113},endLoc:{col:5,line:123},startBody:{col:22,line:113},endBody:{col:5,line:123}},"rest-placeholder":{startLoc:{col:31,line:124},endLoc:{col:1,line:138},startBody:{col:31,line:124},endBody:{col:1,line:138}},"value-prop-change":{startLoc:{col:31,line:139},endLoc:{col:1,line:153},startBody:{col:31,line:139},endBody:{col:1,line:153}},"value-prop-change-multiline":{startLoc:{col:40,line:155},endLoc:{col:1,line:169},startBody:{col:40,line:155},endBody:{col:1,line:169}},autofill:{startLoc:{col:24,line:171},endLoc:{col:1,line:190},startBody:{col:24,line:171},endBody:{col:1,line:190}}}},layout:"padded"}},Primary=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("h2",{children:"Desktop"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{style:{display:"flex",justifyContent:"space-between"},children:Object.entries(stateProps).map((([stateName,props])=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div",{style:{flexGrow:1,marginRight:16},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("h4",{style:{textTransform:"capitalize"},children:stateName}),desktopSizes.map((sizeName=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div",{style:{marginTop:24},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("h5",{style:{textTransform:"uppercase"},children:["Size: ",sizeName]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{...baseProps,...props,label:"Label",placeholder:"Placeholder",size:sizeName,defaultValue:"Text",variant:"desktop",caption:"Caption",endAdornment:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_quarks_icons_16x16_Stroked_Arrows_Right__WEBPACK_IMPORTED_MODULE_4__.Z,{fill:_sima_land_ui_nucleons_colors__WEBPACK_IMPORTED_MODULE_2__.D.get("basic-gray24")})}),"l"===sizeName&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{style:{height:32}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{...baseProps,...props,size:sizeName,placeholder:"Placeholder",defaultValue:"Text",variant:"desktop",caption:"Caption",endAdornment:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_quarks_icons_16x16_Stroked_Arrows_Right__WEBPACK_IMPORTED_MODULE_4__.Z,{fill:_sima_land_ui_nucleons_colors__WEBPACK_IMPORTED_MODULE_2__.D.get("basic-gray24")})})]})]},sizeName)))]},stateName)))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("h2",{style:{marginTop:32},children:"Mobile"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{style:{display:"flex",justifyContent:"space-between",marginBottom:32},children:Object.entries(stateProps).map((([stateName,props])=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div",{style:{flexGrow:1,marginRight:16},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("h4",{style:{textTransform:"capitalize"},children:stateName}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{...baseProps,...props,label:"Label",placeholder:"Placeholder",defaultValue:"Text",variant:"mobile",caption:"Caption",endAdornment:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_quarks_icons_16x16_Stroked_Arrows_Right__WEBPACK_IMPORTED_MODULE_4__.Z,{fill:_sima_land_ui_nucleons_colors__WEBPACK_IMPORTED_MODULE_2__.D.get("basic-gray24")})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{style:{height:32}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{...baseProps,...props,placeholder:"Placeholder",defaultValue:"Text",variant:"mobile",caption:"Caption",endAdornment:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_quarks_icons_16x16_Stroked_Arrows_Right__WEBPACK_IMPORTED_MODULE_4__.Z,{fill:_sima_land_ui_nucleons_colors__WEBPACK_IMPORTED_MODULE_2__.D.get("basic-gray24")})})]},stateName)))})]}),Multiline=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("h2",{children:"Desktop"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{...baseProps,defaultValue:longValue,multiline:!0,label:"Label",caption:"Caption",placeholder:"Placeholder",baseInputProps:{rows:8}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{style:{height:32}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{...baseProps,defaultValue:longValue,multiline:!0,caption:"Caption",placeholder:"Placeholder"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("h2",{children:"Mobile"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{...baseProps,defaultValue:longValue,multiline:!0,label:"Label",caption:"Caption",placeholder:"Placeholder",variant:"mobile"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{style:{height:32}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{...baseProps,defaultValue:longValue,multiline:!0,caption:"Caption",placeholder:"Placeholder",variant:"mobile"})]}),DifferentValues=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:testValues.map(((testValue,index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div",{style:{marginTop:32},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("h3",{children:["Значение ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("code",{children:"value"}),": ",String(testValue)||JSON.stringify(testValue)]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{...baseProps,label:"Label",defaultValue:testValue})]},index)))}),Rounds=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("h2",{children:"Скругления"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("p",{children:["Их можно задавать только для варианта ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("code",{children:"desktop"}),":"]}),["none","all","top","left","bottom","right","bottomLeft","bottomRight","topLeft","topRight"].map((variant=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{style:{marginBottom:32},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{...baseProps,label:`rounds="${variant}"`,rounds:variant})},variant)))]}),RestPlaceholder=()=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("h3",{children:"Введите 10 цифр"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{value,label:"Label",onChange:e=>setValue(e.target.value.slice(0,10)),restPlaceholder:"9".repeat(10).slice(value.length),style:{width:240}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("div",{style:{height:24}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{variant:"mobile",label:"Label",value,onChange:e=>setValue(e.target.value.slice(0,10)),restPlaceholder:"9".repeat(10).slice(value.length),style:{width:240}})]})},ValuePropChange=()=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("p",{children:"Label должен подниматься и опускаться в зависимости от того введено значение или нет"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("p",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("button",{onClick:()=>setValue("Some text"),children:"Заполнить"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("button",{onClick:()=>setValue(""),children:"Очистить"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{label:"Test label",value,onChange:e=>setValue(e.target.value),style:{width:240}})]})};ValuePropChange.storyName="service: Value prop change";const ValuePropChangeMultiline=()=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("p",{children:"Label должен подниматься и опускаться в зависимости от того введено значение или нет"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("p",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("button",{onClick:()=>setValue([longValue,longValue].join("\n")),children:"Заполнить"})," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("button",{onClick:()=>setValue(""),children:"Очистить"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{multiline:!0,label:"Test label",value,onChange:e=>setValue(e.target.value),style:{width:240}})]})};ValuePropChangeMultiline.storyName="service: Multiline value prop change";const Autofill=()=>{const styles={display:"block",width:"240px",marginBottom:"16px"},[shown,toggle]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();return shown?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("form",{action:"/login",method:"POST",onSubmit:e=>{e.preventDefault(),window.location.assign("")},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{label:"Email",defaultValue:"",style:styles,name:"email",type:"email",autoComplete:"email"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_text_field__WEBPACK_IMPORTED_MODULE_0__.nv,{label:"Password",defaultValue:"",style:styles,name:"password",type:"password",autoComplete:"password"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_3__.z,{size:"s",type:"submit",children:"Submit"})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_sima_land_ui_nucleons_button__WEBPACK_IMPORTED_MODULE_3__.z,{onClick:()=>toggle(!0),children:"Открыть форму"})};Autofill.storyName="service: Autofill",Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"() => <>\n    <h2>Desktop</h2>\n    <div style={{\n    display: 'flex',\n    justifyContent: 'space-between'\n  }}>\n      {Object.entries(stateProps).map(([stateName, props]) => <div style={{\n      flexGrow: 1,\n      marginRight: 16\n    }} key={stateName}>\n          <h4 style={{\n        textTransform: 'capitalize'\n      }}>{stateName}</h4>\n          {desktopSizes.map(sizeName => <div style={{\n        marginTop: 24\n      }} key={sizeName}>\n              <h5 style={{\n          textTransform: 'uppercase'\n        }}>Size: {sizeName}</h5>\n              <TextField {...baseProps} {...props} label='Label' placeholder='Placeholder' size={(sizeName as any)} defaultValue='Text' variant='desktop' caption='Caption' endAdornment={<RightSVG fill={COLORS.get('basic-gray24')} />} />\n              {sizeName === 'l' && <>\n                  <div style={{\n            height: 32\n          }} />\n                  <TextField {...baseProps} {...props} size={sizeName} placeholder='Placeholder' defaultValue='Text' variant='desktop' caption='Caption' endAdornment={<RightSVG fill={COLORS.get('basic-gray24')} />} />\n                </>}\n            </div>)}\n        </div>)}\n    </div>\n\n    <h2 style={{\n    marginTop: 32\n  }}>Mobile</h2>\n    <div style={{\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: 32\n  }}>\n      {Object.entries(stateProps).map(([stateName, props]) => <div style={{\n      flexGrow: 1,\n      marginRight: 16\n    }} key={stateName}>\n          <h4 style={{\n        textTransform: 'capitalize'\n      }}>{stateName}</h4>\n          <TextField {...baseProps} {...props} label='Label' placeholder='Placeholder' defaultValue='Text' variant='mobile' caption='Caption' endAdornment={<RightSVG fill={COLORS.get('basic-gray24')} />} />\n          <div style={{\n        height: 32\n      }} />\n          <TextField {...baseProps} {...props} placeholder='Placeholder' defaultValue='Text' variant='mobile' caption='Caption' endAdornment={<RightSVG fill={COLORS.get('basic-gray24')} />} />\n        </div>)}\n    </div>\n  </>",...Primary.parameters?.docs?.source}}},Multiline.parameters={...Multiline.parameters,docs:{...Multiline.parameters?.docs,source:{originalSource:"() => <>\n    <h2>Desktop</h2>\n    <TextField {...baseProps} defaultValue={longValue} multiline label='Label' caption='Caption' placeholder='Placeholder' baseInputProps={{\n    rows: 8\n  }} />\n    <div style={{\n    height: 32\n  }} />\n    <TextField {...baseProps} defaultValue={longValue} multiline caption='Caption' placeholder='Placeholder' />\n\n    <h2>Mobile</h2>\n    <TextField {...baseProps} defaultValue={longValue} multiline label='Label' caption='Caption' placeholder='Placeholder' variant='mobile' />\n    <div style={{\n    height: 32\n  }} />\n    <TextField {...baseProps} defaultValue={longValue} multiline caption='Caption' placeholder='Placeholder' variant='mobile' />\n  </>",...Multiline.parameters?.docs?.source}}},DifferentValues.parameters={...DifferentValues.parameters,docs:{...DifferentValues.parameters?.docs,source:{originalSource:"() => <>\n    {testValues.map((testValue, index) => <div key={index} style={{\n    marginTop: 32\n  }}>\n        <h3>\n          Значение <code>value</code>: {String(testValue) || JSON.stringify(testValue)}\n        </h3>\n        <TextField {...baseProps} label='Label' defaultValue={(testValue as any)} />\n      </div>)}\n  </>",...DifferentValues.parameters?.docs?.source}}},Rounds.parameters={...Rounds.parameters,docs:{...Rounds.parameters?.docs,source:{originalSource:"() => <>\n    <h2>Скругления</h2>\n    <p>\n      Их можно задавать только для варианта <code>desktop</code>:\n    </p>\n    {['none', 'all', 'top', 'left', 'bottom', 'right', 'bottomLeft', 'bottomRight', 'topLeft', 'topRight'].map(variant => <div style={{\n    marginBottom: 32\n  }} key={variant}>\n        <TextField {...baseProps} label={`rounds=\"${variant}\"`} rounds={(variant as any)} />\n      </div>)}\n  </>",...Rounds.parameters?.docs?.source}}},RestPlaceholder.parameters={...RestPlaceholder.parameters,docs:{...RestPlaceholder.parameters?.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState('');\n  return <>\n      <h3>Введите 10 цифр</h3>\n      <TextField value={value} label='Label' onChange={(e: any) => setValue(e.target.value.slice(0, 10))} restPlaceholder={'9'.repeat(10).slice(value.length)} style={{\n      width: 240\n    }} />\n      <div style={{\n      height: 24\n    }} />\n      <TextField variant='mobile' label='Label' value={value} onChange={(e: any) => setValue(e.target.value.slice(0, 10))} restPlaceholder={'9'.repeat(10).slice(value.length)} style={{\n      width: 240\n    }} />\n    </>;\n}",...RestPlaceholder.parameters?.docs?.source}}},ValuePropChange.parameters={...ValuePropChange.parameters,docs:{...ValuePropChange.parameters?.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState('');\n  return <>\n      <p>Label должен подниматься и опускаться в зависимости от того введено значение или нет</p>\n\n      <p>\n        <button onClick={() => setValue('Some text')}>Заполнить</button>{' '}\n        <button onClick={() => setValue('')}>Очистить</button>\n      </p>\n\n      <TextField label='Test label' value={value} onChange={(e: any) => setValue(e.target.value)} style={{\n      width: 240\n    }} />\n    </>;\n}",...ValuePropChange.parameters?.docs?.source}}},ValuePropChangeMultiline.parameters={...ValuePropChangeMultiline.parameters,docs:{...ValuePropChangeMultiline.parameters?.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState('');\n  return <>\n      <p>Label должен подниматься и опускаться в зависимости от того введено значение или нет</p>\n\n      <p>\n        <button onClick={() => setValue([longValue, longValue].join('\\n'))}>Заполнить</button>{' '}\n        <button onClick={() => setValue('')}>Очистить</button>\n      </p>\n\n      <TextField multiline label='Test label' value={value} onChange={(e: any) => setValue(e.target.value)} style={{\n      width: 240\n    }} />\n    </>;\n}",...ValuePropChangeMultiline.parameters?.docs?.source}}},Autofill.parameters={...Autofill.parameters,docs:{...Autofill.parameters?.docs,source:{originalSource:"() => {\n  const styles: React.CSSProperties = {\n    display: 'block',\n    width: '240px',\n    marginBottom: '16px'\n  };\n  const [shown, toggle] = useState<boolean>();\n  return !shown ? <Button onClick={() => toggle(true)}>Открыть форму</Button> : <form action='/login' method='POST' onSubmit={e => {\n    e.preventDefault();\n    window.location.assign('');\n  }}>\n      <TextField label='Email' defaultValue='' style={styles} name='email' type='email' autoComplete='email' />\n\n      <TextField label='Password' defaultValue='' style={styles} name='password' type='password' autoComplete='password' />\n\n      <Button size='s' type='submit'>\n        Submit\n      </Button>\n    </form>;\n}",...Autofill.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","Multiline","DifferentValues","Rounds","RestPlaceholder","ValuePropChange","ValuePropChangeMultiline","Autofill"]},"./src/styling/shapes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>MediumRounds,K:()=>SmallRounds});var injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),shapes_module=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[15].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/styling/shapes.module.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(shapes_module.Z,options);const styling_shapes_module=shapes_module.Z&&shapes_module.Z.locals?shapes_module.Z.locals:void 0,SmallRounds={all:styling_shapes_module["rounds-sm__all"],top:styling_shapes_module["rounds-sm__t"],right:styling_shapes_module["rounds-sm__r"],bottom:styling_shapes_module["rounds-sm__b"],left:styling_shapes_module["rounds-sm__l"],topLeft:styling_shapes_module["rounds-sm__t-l"],topRight:styling_shapes_module["rounds-sm__t-r"],bottomLeft:styling_shapes_module["rounds-sm__b-l"],bottomRight:styling_shapes_module["rounds-sm__b-r"]},MediumRounds={all:styling_shapes_module["rounds-md__all"],top:styling_shapes_module["rounds-md__t"],right:styling_shapes_module["rounds-md__r"],bottom:styling_shapes_module["rounds-md__b"],left:styling_shapes_module["rounds-md__l"],topLeft:styling_shapes_module["rounds-md__t-l"],topRight:styling_shapes_module["rounds-md__t-r"],bottomLeft:styling_shapes_module["rounds-md__b-l"],bottomRight:styling_shapes_module["rounds-md__b-r"]}},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[15].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/styling/shapes.module.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".shapes-module__rounds-sm__all__c38{border-radius:4px}.shapes-module__rounds-sm__t__a63{border-top-left-radius:4px;border-top-right-radius:4px}.shapes-module__rounds-sm__l__f61{border-top-left-radius:4px;border-bottom-left-radius:4px}.shapes-module__rounds-sm__b__bdc{border-bottom-left-radius:4px;border-bottom-right-radius:4px}.shapes-module__rounds-sm__r__ed4{border-top-right-radius:4px;border-bottom-right-radius:4px}.shapes-module__rounds-sm__b-l__edc{border-bottom-left-radius:4px}.shapes-module__rounds-sm__b-r__c0d{border-bottom-right-radius:4px}.shapes-module__rounds-sm__t-l__c4b{border-top-left-radius:4px}.shapes-module__rounds-sm__t-r__f8d{border-top-right-radius:4px}.shapes-module__rounds-md__all__cc5{border-radius:8px}.shapes-module__rounds-md__t__e1c{border-top-left-radius:8px;border-top-right-radius:8px}.shapes-module__rounds-md__l__def{border-top-left-radius:8px;border-bottom-left-radius:8px}.shapes-module__rounds-md__b__d07{border-bottom-left-radius:8px;border-bottom-right-radius:8px}.shapes-module__rounds-md__r__ba0{border-top-right-radius:8px;border-bottom-right-radius:8px}.shapes-module__rounds-md__b-l__a92{border-bottom-left-radius:8px}.shapes-module__rounds-md__b-r__e61{border-bottom-right-radius:8px}.shapes-module__rounds-md__t-l__edc{border-top-left-radius:8px}.shapes-module__rounds-md__t-r__a8b{border-top-right-radius:8px}","",{version:3,sources:["webpack://./src/styling/shapes.module.scss"],names:[],mappings:"AAME,oCACE,iBAPI,CASN,kCACE,0BAVI,CAWJ,2BAXI,CAaN,kCACE,0BAdI,CAeJ,6BAfI,CAiBN,kCACE,6BAlBI,CAmBJ,8BAnBI,CAqBN,kCACE,2BAtBI,CAuBJ,8BAvBI,CAyBN,oCACE,6BA1BI,CA4BN,oCACE,8BA7BI,CA+BN,oCACE,0BAhCI,CAkCN,oCACE,2BAnCI,CAMN,oCACE,iBAPI,CASN,kCACE,0BAVI,CAWJ,2BAXI,CAaN,kCACE,0BAdI,CAeJ,6BAfI,CAiBN,kCACE,6BAlBI,CAmBJ,8BAnBI,CAqBN,kCACE,2BAtBI,CAuBJ,8BAvBI,CAyBN,oCACE,6BA1BI,CA4BN,oCACE,8BA7BI,CA+BN,oCACE,0BAhCI,CAkCN,oCACE,2BAnCI",sourcesContent:["$sizes: (\n  sm: 4px,\n  md: 8px,\n);\n\n@each $key, $value in $sizes {\n  .rounds-#{$key}__all {\n    border-radius: $value;\n  }\n  .rounds-#{$key}__t {\n    border-top-left-radius: $value;\n    border-top-right-radius: $value;\n  }\n  .rounds-#{$key}__l {\n    border-top-left-radius: $value;\n    border-bottom-left-radius: $value;\n  }\n  .rounds-#{$key}__b {\n    border-bottom-left-radius: $value;\n    border-bottom-right-radius: $value;\n  }\n  .rounds-#{$key}__r {\n    border-top-right-radius: $value;\n    border-bottom-right-radius: $value;\n  }\n  .rounds-#{$key}__b-l {\n    border-bottom-left-radius: $value;\n  }\n  .rounds-#{$key}__b-r {\n    border-bottom-right-radius: $value;\n  }\n  .rounds-#{$key}__t-l {\n    border-top-left-radius: $value;\n  }\n  .rounds-#{$key}__t-r {\n    border-top-right-radius: $value;\n  }\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={"rounds-sm__all":"shapes-module__rounds-sm__all__c38","rounds-sm__t":"shapes-module__rounds-sm__t__a63","rounds-sm__l":"shapes-module__rounds-sm__l__f61","rounds-sm__b":"shapes-module__rounds-sm__b__bdc","rounds-sm__r":"shapes-module__rounds-sm__r__ed4","rounds-sm__b-l":"shapes-module__rounds-sm__b-l__edc","rounds-sm__b-r":"shapes-module__rounds-sm__b-r__c0d","rounds-sm__t-l":"shapes-module__rounds-sm__t-l__c4b","rounds-sm__t-r":"shapes-module__rounds-sm__t-r__f8d","rounds-md__all":"shapes-module__rounds-md__all__cc5","rounds-md__t":"shapes-module__rounds-md__t__e1c","rounds-md__l":"shapes-module__rounds-md__l__def","rounds-md__b":"shapes-module__rounds-md__b__d07","rounds-md__r":"shapes-module__rounds-md__r__ba0","rounds-md__b-l":"shapes-module__rounds-md__b-l__a92","rounds-md__b-r":"shapes-module__rounds-md__b-r__e61","rounds-md__t-l":"shapes-module__rounds-md__t-l__edc","rounds-md__t-r":"shapes-module__rounds-md__t-r__a8b"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);