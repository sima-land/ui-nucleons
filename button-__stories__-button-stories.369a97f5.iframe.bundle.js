"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[995],{"./node_modules/@sima-land/ui-quarks/dist/esm/icons/24x24/Stroked/Placeholder.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(((props,ref)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",{width:24,height:24,viewBox:"0 0 24 24",ref,...props},react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{fillRule:"evenodd",d:"M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12Zm11-9a9 9 0 1 0 0 18 9 9 0 0 0 0-18Z",clipRule:"evenodd"}))))},"./src/button/__stories__/button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomColors:()=>CustomColors,DifferentColors:()=>DifferentColors,DifferentSizes:()=>DifferentSizes,DifferentStates:()=>DifferentStates,IconEnd:()=>IconEnd,IconStart:()=>IconStart,OnlyIcon:()=>OnlyIcon,Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>button_stories});var src_button=__webpack_require__("./src/button/index.ts"),react=__webpack_require__("./node_modules/react/index.js"),Share=__webpack_require__("./node_modules/@sima-land/ui-quarks/dist/esm/icons/16x16/Filled/Share.js"),ShareAndroid=__webpack_require__("./node_modules/@sima-land/ui-quarks/dist/esm/icons/24x24/Stroked/ShareAndroid.js");const Placeholder=(0,react.forwardRef)(((props,ref)=>react.createElement("svg",{width:16,height:16,viewBox:"0 0 16 16",ref,...props},react.createElement("path",{fillRule:"evenodd",d:"M8 3a5 5 0 1 0 0 10A5 5 0 0 0 8 3ZM1 8a7 7 0 1 1 14 0A7 7 0 0 1 1 8Z",clipRule:"evenodd"}))));var Stroked_Placeholder=__webpack_require__("./node_modules/@sima-land/ui-quarks/dist/esm/icons/24x24/Stroked/Placeholder.js"),utils=__webpack_require__("./.storybook/utils.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const button_stories={title:"common/Button",component:src_button.z,parameters:{storySource:{source:"import {\n  Button,\n  ButtonProps,\n  ButtonSize,\n  ButtonStyle,\n  ButtonViewType,\n} from '@sima-land/ui-nucleons/button';\nimport { CSSProperties, useState } from 'react';\nimport ShareSVG from '@sima-land/ui-quarks/icons/16x16/Filled/Share';\nimport ShareAndroidSVG from '@sima-land/ui-quarks/icons/24x24/Stroked/ShareAndroid';\nimport Placeholder16SVG from '@sima-land/ui-quarks/icons/16x16/Stroked/Placeholder';\nimport Placeholder24SVG from '@sima-land/ui-quarks/icons/24x24/Stroked/Placeholder';\nimport { Sandbox } from '../../../.storybook/utils';\n\nexport default {\n  title: 'common/Button',\n  component: Button,\n  parameters: {\n    layout: 'padded',\n  },\n};\n\nexport function Primary() {\n  return (\n    <>\n      <Button onClick={() => alert('Спасибо!')}>Нажми на меня</Button>\n    </>\n  );\n}\n\nPrimary.storyName = 'Простой пример';\n\nexport function DifferentColors() {\n  return (\n    <div style={{ display: 'flex', gap: '12px' }}>\n      <Button viewType='primary'>Primary</Button>\n      <Button viewType='secondary'>Secondary</Button>\n      <Button viewType='success'>Success</Button>\n      <Button viewType='info'>Info</Button>\n    </div>\n  );\n}\n\nDifferentColors.storyName = 'Варианты цветов';\n\nexport function DifferentSizes() {\n  return (\n    <div style={{ display: 'flex', gap: '12px' }}>\n      <Button size='m'>Просто кнопка</Button>\n      <Button size='s'>Просто кнопка</Button>\n      <Button size='xs'>Просто кнопка</Button>\n    </div>\n  );\n}\n\nDifferentSizes.storyName = 'Варианты размеров';\n\nexport function OnlyIcon() {\n  return (\n    <div style={{ display: 'flex', gap: '12px' }}>\n      <Button size='m' icon={ShareAndroidSVG} />\n      <Button size='s' icon={ShareAndroidSVG} />\n      <Button size='xs' icon={ShareSVG} />\n    </div>\n  );\n}\n\nOnlyIcon.storyName = 'Только иконка';\n\nexport function IconStart() {\n  return (\n    <div style={{ display: 'flex', gap: '12px' }}>\n      <Button size='m' icon={ShareAndroidSVG} iconPosition='start'>\n        Поделиться\n      </Button>\n      <Button size='s' icon={ShareAndroidSVG} iconPosition='start'>\n        Поделиться\n      </Button>\n      <Button size='xs' icon={ShareSVG} iconPosition='start'>\n        Поделиться\n      </Button>\n    </div>\n  );\n}\n\nIconStart.storyName = 'Иконка в начале';\n\nexport function IconEnd() {\n  return (\n    <div style={{ display: 'flex', gap: '12px' }}>\n      <Button size='m' icon={ShareAndroidSVG} iconPosition='end'>\n        Поделиться\n      </Button>\n      <Button size='s' icon={ShareAndroidSVG} iconPosition='end'>\n        Поделиться\n      </Button>\n      <Button size='xs' icon={ShareSVG} iconPosition='end'>\n        Поделиться\n      </Button>\n    </div>\n  );\n}\n\nIconEnd.storyName = 'Иконка в конце';\n\nexport function DifferentStates() {\n  const [size, setSize] = useState<ButtonSize>('s');\n  const [viewType, setViewType] = useState<ButtonViewType>('primary');\n  const [state, setState] = useState<'default' | 'disabled'>('default');\n\n  const props: ButtonProps = {\n    size,\n    viewType,\n    disabled: state.includes('disabled'),\n    loading: state.includes('loading'),\n    onClick: () => alert('Клик по кнопке прошёл успешно'),\n  };\n\n  const IconSVG = size === 'xs' ? Placeholder16SVG : Placeholder24SVG;\n\n  return (\n    <Sandbox\n      controls={[\n        {\n          type: 'select',\n          label: 'Размер',\n          options: [\n            { value: 'xs', displayName: 'XS' },\n            { value: 's', displayName: 'S' },\n            { value: 'm', displayName: 'M' },\n          ],\n          bind: [size, setSize],\n        },\n        {\n          type: 'select',\n          label: 'Тип действия',\n          options: [\n            { value: 'primary', displayName: 'Primary' },\n            { value: 'secondary', displayName: 'Secondary' },\n            { value: 'success', displayName: 'Success' },\n            { value: 'info', displayName: 'Info' },\n          ],\n          bind: [viewType, setViewType],\n        },\n        {\n          type: 'select',\n          label: 'Состояние',\n          options: [\n            { value: 'default', displayName: 'По умолчанию' },\n            { value: 'disabled', displayName: 'Отключено' },\n            { value: 'loading', displayName: 'Загрузка' },\n            { value: 'loading+disabled', displayName: 'Загрузка + отключено' },\n          ],\n          bind: [state, setState],\n        },\n      ]}\n    >\n      <div style={{ display: 'flex', gap: '20px', justifyContent: 'center' }}>\n        <Button {...props} icon={IconSVG} />\n\n        <Button {...props}>Действие</Button>\n\n        <Button {...props} icon={IconSVG} iconPosition='start'>\n          Действие\n        </Button>\n\n        <Button {...props} icon={IconSVG} iconPosition='end'>\n          Действие\n        </Button>\n      </div>\n    </Sandbox>\n  );\n}\n\nDifferentStates.storyName = 'Различные состояния';\n\nexport function CustomColors() {\n  const container: CSSProperties = {\n    maxWidth: '480px',\n    display: 'flex',\n    gap: '12px',\n    flexDirection: 'column',\n    justifyContent: 'stretch',\n  };\n  const sber: ButtonStyle = {\n    '--button-color': '#fff',\n    '--button-background': '#107f8c',\n  };\n  const tinkoff: ButtonStyle = {\n    '--button-color': '#000',\n    '--button-background': '#ffdd2d',\n  };\n  const apple: ButtonStyle = {\n    '--button-color': '#fff',\n    '--button-background': '#161616',\n    '--button-hover-background': '#404040',\n  };\n\n  return (\n    <div style={container}>\n      <Button viewType='unset' style={sber}>\n        Войти по СберБизнес ID\n      </Button>\n      <Button viewType='unset' style={tinkoff}>\n        Войти с Tinkoff\n      </Button>\n      <Button viewType='unset' style={apple}>\n        Войти с Apple ID\n      </Button>\n    </div>\n  );\n}\n\nCustomColors.storyName = 'Пользовательские цвета';\n",locationsMap:{primary:{startLoc:{col:7,line:23},endLoc:{col:1,line:29},startBody:{col:7,line:23},endBody:{col:1,line:29}},"different-colors":{startLoc:{col:7,line:33},endLoc:{col:1,line:42},startBody:{col:7,line:33},endBody:{col:1,line:42}},"different-sizes":{startLoc:{col:7,line:46},endLoc:{col:1,line:54},startBody:{col:7,line:46},endBody:{col:1,line:54}},"only-icon":{startLoc:{col:7,line:58},endLoc:{col:1,line:66},startBody:{col:7,line:58},endBody:{col:1,line:66}},"icon-start":{startLoc:{col:7,line:70},endLoc:{col:1,line:84},startBody:{col:7,line:70},endBody:{col:1,line:84}},"icon-end":{startLoc:{col:7,line:88},endLoc:{col:1,line:102},startBody:{col:7,line:88},endBody:{col:1,line:102}},"different-states":{startLoc:{col:7,line:106},endLoc:{col:1,line:173},startBody:{col:7,line:106},endBody:{col:1,line:173}},"custom-colors":{startLoc:{col:7,line:177},endLoc:{col:1,line:212},startBody:{col:7,line:177},endBody:{col:1,line:212}}}},layout:"padded"}},Primary=function Primary(){return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(src_button.z,{onClick:()=>alert("Спасибо!"),children:"Нажми на меня"})})};Primary.storyName="Простой пример";const DifferentColors=function DifferentColors(){return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",gap:"12px"},children:[(0,jsx_runtime.jsx)(src_button.z,{viewType:"primary",children:"Primary"}),(0,jsx_runtime.jsx)(src_button.z,{viewType:"secondary",children:"Secondary"}),(0,jsx_runtime.jsx)(src_button.z,{viewType:"success",children:"Success"}),(0,jsx_runtime.jsx)(src_button.z,{viewType:"info",children:"Info"})]})};DifferentColors.storyName="Варианты цветов";const DifferentSizes=function DifferentSizes(){return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",gap:"12px"},children:[(0,jsx_runtime.jsx)(src_button.z,{size:"m",children:"Просто кнопка"}),(0,jsx_runtime.jsx)(src_button.z,{size:"s",children:"Просто кнопка"}),(0,jsx_runtime.jsx)(src_button.z,{size:"xs",children:"Просто кнопка"})]})};DifferentSizes.storyName="Варианты размеров";const OnlyIcon=function OnlyIcon(){return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",gap:"12px"},children:[(0,jsx_runtime.jsx)(src_button.z,{size:"m",icon:ShareAndroid.Z}),(0,jsx_runtime.jsx)(src_button.z,{size:"s",icon:ShareAndroid.Z}),(0,jsx_runtime.jsx)(src_button.z,{size:"xs",icon:Share.Z})]})};OnlyIcon.storyName="Только иконка";const IconStart=function IconStart(){return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",gap:"12px"},children:[(0,jsx_runtime.jsx)(src_button.z,{size:"m",icon:ShareAndroid.Z,iconPosition:"start",children:"Поделиться"}),(0,jsx_runtime.jsx)(src_button.z,{size:"s",icon:ShareAndroid.Z,iconPosition:"start",children:"Поделиться"}),(0,jsx_runtime.jsx)(src_button.z,{size:"xs",icon:Share.Z,iconPosition:"start",children:"Поделиться"})]})};IconStart.storyName="Иконка в начале";const IconEnd=function IconEnd(){return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",gap:"12px"},children:[(0,jsx_runtime.jsx)(src_button.z,{size:"m",icon:ShareAndroid.Z,iconPosition:"end",children:"Поделиться"}),(0,jsx_runtime.jsx)(src_button.z,{size:"s",icon:ShareAndroid.Z,iconPosition:"end",children:"Поделиться"}),(0,jsx_runtime.jsx)(src_button.z,{size:"xs",icon:Share.Z,iconPosition:"end",children:"Поделиться"})]})};IconEnd.storyName="Иконка в конце";const DifferentStates=function DifferentStates(){const[size,setSize]=(0,react.useState)("s"),[viewType,setViewType]=(0,react.useState)("primary"),[state,setState]=(0,react.useState)("default"),props={size,viewType,disabled:state.includes("disabled"),loading:state.includes("loading"),onClick:()=>alert("Клик по кнопке прошёл успешно")},IconSVG="xs"===size?Placeholder:Stroked_Placeholder.Z;return(0,jsx_runtime.jsx)(utils.pv,{controls:[{type:"select",label:"Размер",options:[{value:"xs",displayName:"XS"},{value:"s",displayName:"S"},{value:"m",displayName:"M"}],bind:[size,setSize]},{type:"select",label:"Тип действия",options:[{value:"primary",displayName:"Primary"},{value:"secondary",displayName:"Secondary"},{value:"success",displayName:"Success"},{value:"info",displayName:"Info"}],bind:[viewType,setViewType]},{type:"select",label:"Состояние",options:[{value:"default",displayName:"По умолчанию"},{value:"disabled",displayName:"Отключено"},{value:"loading",displayName:"Загрузка"},{value:"loading+disabled",displayName:"Загрузка + отключено"}],bind:[state,setState]}],children:(0,jsx_runtime.jsxs)("div",{style:{display:"flex",gap:"20px",justifyContent:"center"},children:[(0,jsx_runtime.jsx)(src_button.z,{...props,icon:IconSVG}),(0,jsx_runtime.jsx)(src_button.z,{...props,children:"Действие"}),(0,jsx_runtime.jsx)(src_button.z,{...props,icon:IconSVG,iconPosition:"start",children:"Действие"}),(0,jsx_runtime.jsx)(src_button.z,{...props,icon:IconSVG,iconPosition:"end",children:"Действие"})]})})};DifferentStates.storyName="Различные состояния";const CustomColors=function CustomColors(){return(0,jsx_runtime.jsxs)("div",{style:{maxWidth:"480px",display:"flex",gap:"12px",flexDirection:"column",justifyContent:"stretch"},children:[(0,jsx_runtime.jsx)(src_button.z,{viewType:"unset",style:{"--button-color":"#fff","--button-background":"#107f8c"},children:"Войти по СберБизнес ID"}),(0,jsx_runtime.jsx)(src_button.z,{viewType:"unset",style:{"--button-color":"#000","--button-background":"#ffdd2d"},children:"Войти с Tinkoff"}),(0,jsx_runtime.jsx)(src_button.z,{viewType:"unset",style:{"--button-color":"#fff","--button-background":"#161616","--button-hover-background":"#404040"},children:"Войти с Apple ID"})]})};CustomColors.storyName="Пользовательские цвета",Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"function Primary() {\n  return <>\n      <Button onClick={() => alert('Спасибо!')}>Нажми на меня</Button>\n    </>;\n}",...Primary.parameters?.docs?.source}}},DifferentColors.parameters={...DifferentColors.parameters,docs:{...DifferentColors.parameters?.docs,source:{originalSource:"function DifferentColors() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button viewType='primary'>Primary</Button>\n      <Button viewType='secondary'>Secondary</Button>\n      <Button viewType='success'>Success</Button>\n      <Button viewType='info'>Info</Button>\n    </div>;\n}",...DifferentColors.parameters?.docs?.source}}},DifferentSizes.parameters={...DifferentSizes.parameters,docs:{...DifferentSizes.parameters?.docs,source:{originalSource:"function DifferentSizes() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button size='m'>Просто кнопка</Button>\n      <Button size='s'>Просто кнопка</Button>\n      <Button size='xs'>Просто кнопка</Button>\n    </div>;\n}",...DifferentSizes.parameters?.docs?.source}}},OnlyIcon.parameters={...OnlyIcon.parameters,docs:{...OnlyIcon.parameters?.docs,source:{originalSource:"function OnlyIcon() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button size='m' icon={ShareAndroidSVG} />\n      <Button size='s' icon={ShareAndroidSVG} />\n      <Button size='xs' icon={ShareSVG} />\n    </div>;\n}",...OnlyIcon.parameters?.docs?.source}}},IconStart.parameters={...IconStart.parameters,docs:{...IconStart.parameters?.docs,source:{originalSource:"function IconStart() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button size='m' icon={ShareAndroidSVG} iconPosition='start'>\n        Поделиться\n      </Button>\n      <Button size='s' icon={ShareAndroidSVG} iconPosition='start'>\n        Поделиться\n      </Button>\n      <Button size='xs' icon={ShareSVG} iconPosition='start'>\n        Поделиться\n      </Button>\n    </div>;\n}",...IconStart.parameters?.docs?.source}}},IconEnd.parameters={...IconEnd.parameters,docs:{...IconEnd.parameters?.docs,source:{originalSource:"function IconEnd() {\n  return <div style={{\n    display: 'flex',\n    gap: '12px'\n  }}>\n      <Button size='m' icon={ShareAndroidSVG} iconPosition='end'>\n        Поделиться\n      </Button>\n      <Button size='s' icon={ShareAndroidSVG} iconPosition='end'>\n        Поделиться\n      </Button>\n      <Button size='xs' icon={ShareSVG} iconPosition='end'>\n        Поделиться\n      </Button>\n    </div>;\n}",...IconEnd.parameters?.docs?.source}}},DifferentStates.parameters={...DifferentStates.parameters,docs:{...DifferentStates.parameters?.docs,source:{originalSource:"function DifferentStates() {\n  const [size, setSize] = useState<ButtonSize>('s');\n  const [viewType, setViewType] = useState<ButtonViewType>('primary');\n  const [state, setState] = useState<'default' | 'disabled'>('default');\n  const props: ButtonProps = {\n    size,\n    viewType,\n    disabled: state.includes('disabled'),\n    loading: state.includes('loading'),\n    onClick: () => alert('Клик по кнопке прошёл успешно')\n  };\n  const IconSVG = size === 'xs' ? Placeholder16SVG : Placeholder24SVG;\n  return <Sandbox controls={[{\n    type: 'select',\n    label: 'Размер',\n    options: [{\n      value: 'xs',\n      displayName: 'XS'\n    }, {\n      value: 's',\n      displayName: 'S'\n    }, {\n      value: 'm',\n      displayName: 'M'\n    }],\n    bind: [size, setSize]\n  }, {\n    type: 'select',\n    label: 'Тип действия',\n    options: [{\n      value: 'primary',\n      displayName: 'Primary'\n    }, {\n      value: 'secondary',\n      displayName: 'Secondary'\n    }, {\n      value: 'success',\n      displayName: 'Success'\n    }, {\n      value: 'info',\n      displayName: 'Info'\n    }],\n    bind: [viewType, setViewType]\n  }, {\n    type: 'select',\n    label: 'Состояние',\n    options: [{\n      value: 'default',\n      displayName: 'По умолчанию'\n    }, {\n      value: 'disabled',\n      displayName: 'Отключено'\n    }, {\n      value: 'loading',\n      displayName: 'Загрузка'\n    }, {\n      value: 'loading+disabled',\n      displayName: 'Загрузка + отключено'\n    }],\n    bind: [state, setState]\n  }]}>\n      <div style={{\n      display: 'flex',\n      gap: '20px',\n      justifyContent: 'center'\n    }}>\n        <Button {...props} icon={IconSVG} />\n\n        <Button {...props}>Действие</Button>\n\n        <Button {...props} icon={IconSVG} iconPosition='start'>\n          Действие\n        </Button>\n\n        <Button {...props} icon={IconSVG} iconPosition='end'>\n          Действие\n        </Button>\n      </div>\n    </Sandbox>;\n}",...DifferentStates.parameters?.docs?.source}}},CustomColors.parameters={...CustomColors.parameters,docs:{...CustomColors.parameters?.docs,source:{originalSource:"function CustomColors() {\n  const container: CSSProperties = {\n    maxWidth: '480px',\n    display: 'flex',\n    gap: '12px',\n    flexDirection: 'column',\n    justifyContent: 'stretch'\n  };\n  const sber: ButtonStyle = {\n    '--button-color': '#fff',\n    '--button-background': '#107f8c'\n  };\n  const tinkoff: ButtonStyle = {\n    '--button-color': '#000',\n    '--button-background': '#ffdd2d'\n  };\n  const apple: ButtonStyle = {\n    '--button-color': '#fff',\n    '--button-background': '#161616',\n    '--button-hover-background': '#404040'\n  };\n  return <div style={container}>\n      <Button viewType='unset' style={sber}>\n        Войти по СберБизнес ID\n      </Button>\n      <Button viewType='unset' style={tinkoff}>\n        Войти с Tinkoff\n      </Button>\n      <Button viewType='unset' style={apple}>\n        Войти с Apple ID\n      </Button>\n    </div>;\n}",...CustomColors.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","DifferentColors","DifferentSizes","OnlyIcon","IconStart","IconEnd","DifferentStates","CustomColors"]},"./src/button/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>Button});var react=__webpack_require__("./node_modules/react/index.js"),spinner=__webpack_require__("./src/spinner/index.ts"),bind=__webpack_require__("./node_modules/classnames/bind.js"),bind_default=__webpack_require__.n(bind),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),button_m=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[17].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/button/button.m.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(button_m.Z,options);const button_button_m=button_m.Z&&button_m.Z.locals?button_m.Z.locals:void 0;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const cx=bind_default().bind(button_button_m),Button=(0,react.forwardRef)((function Button({viewType="primary",icon:Icon,iconPosition="start",size="m",loading,disabled,className,children,"data-testid":testId="button",...restProps},ref){const hasIcon=Boolean(Icon),hasText=Boolean(children),rootClassName=cx("root",`size-${size}`,"unset"!==viewType&&`view-${viewType}`,loading&&"loading",disabled&&"disabled",hasIcon&&!hasText&&"icon-only",hasText&&hasIcon&&"start"===iconPosition&&"icon-start",hasText&&hasIcon&&"end"===iconPosition&&"icon-end",className),spinnerColor=(0,react.useMemo)((()=>{if(disabled)return"basic-gray38";switch(viewType){case"primary":case"success":return"basic-white";case"secondary":return"basic-gray38";case"info":return"additional-deep-blue"}}),[disabled,viewType]),content=(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Icon&&"start"===iconPosition&&(0,jsx_runtime.jsx)(Icon,{className:cx("icon")}),children,Icon&&"end"===iconPosition&&(0,jsx_runtime.jsx)(Icon,{className:cx("icon")}),loading&&(0,jsx_runtime.jsx)(spinner.WV,{size:"s",color:spinnerColor,className:cx("spinner")})]});let result=null;return result="container"===restProps.appearance?(0,jsx_runtime.jsx)("div",{...restProps,ref,className:rootClassName,role:"button","data-testid":testId,children:content}):"link"===restProps.appearance?(0,jsx_runtime.jsx)("a",{...restProps,ref,className:rootClassName,"data-testid":testId,children:content}):(0,jsx_runtime.jsx)("button",{...restProps,ref,className:rootClassName,disabled,"data-testid":testId,children:content}),result}));try{Button.displayName="Button",Button.__docgenInfo={description:"Кнопка - запускает действие.",displayName:"Button",props:{viewType:{defaultValue:{value:"primary"},description:"Определяет внешний вид кнопки.",name:"viewType",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"info"'},{value:'"unset"'}]}},appearance:{defaultValue:null,description:"Определяет тип корневого элемента.",name:"appearance",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"button"'},{value:'"link"'},{value:'"container"'}]}},icon:{defaultValue:null,description:"Иконка.",name:"icon",required:!1,type:{name:"ElementType<SVGAttributes<SVGSVGElement>> | undefined"}},iconPosition:{defaultValue:{value:"start"},description:"Позиция иконки относительно текста.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"start"'},{value:'"end"'}]}},size:{defaultValue:{value:"m"},description:"Размер.",name:"size",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"s"'},{value:'"m"'},{value:'"xs"'}]}},loading:{defaultValue:null,description:"Нужно ли отображать состояние загрузки.",name:"loading",required:!1,type:{name:"boolean | undefined"}},disabled:{defaultValue:null,description:"Отключенное состояние.",name:"disabled",required:!1,type:{name:"boolean | undefined"}},style:{defaultValue:null,description:"Стили.",name:"style",required:!1,type:{name:"ButtonStyle | undefined"}},"data-testid":{defaultValue:null,description:"Идентификатор для систем автоматизированного тестирования.",name:"data-testid",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/button/button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/button/button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[17].use[1]!./node_modules/sass-loader/dist/cjs.js!./src/button/button.m.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".button-m__root__b1b{position:relative;white-space:nowrap;display:inline-flex;align-items:center;justify-content:center;flex-wrap:nowrap;border-radius:4px;font-family:inherit;font-weight:600;box-sizing:border-box;padding:0;padding-left:var(--button-left-gutter, var(--button-gutter));padding-right:var(--button-right-gutter, var(--button-gutter));border:0;outline:0;text-decoration:none;overflow:hidden;font-size:var(--button-font-size);background:var(--button-background);color:var(--button-color);min-width:var(--button-min-size);height:var(--button-min-size);--button-icon-gutter: 12px}.button-m__root__b1b::-moz-focus-inner{border:0}.button-m__root__b1b:disabled,.button-m__root__b1b.button-m__disabled__c0a{pointer-events:none;color:var(--button-disabled-color, var(--button-color));background:var(--button-disabled-background, var(--button-background))}.button-m__root__b1b.button-m__loading__bf6{color:rgba(0,0,0,0)}.button-m__root__b1b.button-m__loading__bf6>:not(.button-m__spinner__ff3){opacity:0;pointer-events:0}.button-m__root__b1b:not(:disabled):hover{cursor:pointer;background:var(--button-hover-background, var(--button-background))}.button-m__root__b1b:not(:disabled):not(.button-m__loading__bf6):hover{color:var(--button-hover-color, var(--button-color))}.button-m__size-xs__d62{--button-min-size: 32px;--button-font-size: 14px;--button-line-height: 20px;--button-gutter: 12px}.button-m__size-s__c85{--button-min-size: 40px;--button-font-size: 16px;--button-line-height: 24px;--button-gutter: 20px}.button-m__size-m__c18{--button-min-size: 48px;--button-font-size: 16px;--button-line-height: 24px;--button-gutter: 24px}.button-m__icon-only__bc8{--button-left-gutter: 0;--button-right-gutter: 0;--button-icon-gutter: 0}.button-m__icon-start__a72{--button-left-gutter: 0}.button-m__icon-end__cdb{--button-right-gutter: 0}.button-m__view-primary__bb0{--button-color: #fff;--button-background: #1f84db;--button-hover-background: #1b75c2;--button-disabled-color: #c2c2c2;--button-disabled-background: #ebebeb}.button-m__view-secondary__cc6{--button-color: #212121;--button-background: #ebebeb;--button-hover-background: #e0e0e0;--button-disabled-color: #c2c2c2;--button-disabled-background: #ebebeb}.button-m__view-success__dfd{--button-color: #fff;--button-background: #09ab8b;--button-hover-background: #089176;--button-disabled-color: #c2c2c2;--button-disabled-background: #ebebeb}.button-m__view-info__ee4{--button-color: #00599d;--button-background: #e4f1f9;--button-hover-color: #0091ea;--button-hover-background: #e4f1f9;--button-disabled-color: #c2c2c2;--button-disabled-background: #ebebeb}.button-m__icon__ac0{margin:0 var(--button-icon-gutter);flex-shrink:0;fill:currentColor}.button-m__spinner__ff3{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}","",{version:3,sources:["webpack://./src/button/button.m.scss","webpack://./src/button/button-util.scss"],names:[],mappings:"AAGA,qBACE,iBAAA,CACA,kBAAA,CACA,mBAAA,CACA,kBAAA,CACA,sBAAA,CACA,gBAAA,CACA,iBAAA,CACA,mBAAA,CACA,eAAA,CACA,qBAAA,CACA,SAAA,CACA,4DAAA,CACA,8DAAA,CACA,QAAA,CACA,SAAA,CACA,oBAAA,CACA,eAAA,CACA,iCAAA,CACA,mCAAA,CACA,yBAAA,CACA,gCAAA,CACA,6BAAA,CACA,0BAAA,CACA,uCACE,QAAA,CAGF,2EAEE,mBAAA,CACA,uDAAA,CACA,sEAAA,CAEF,4CACE,mBAAA,CACA,0EACE,SAAA,CACA,gBAAA,CAGJ,0CACE,cAAA,CACA,mEAAA,CAEF,uEACE,oDAAA,CAKJ,wBCnDE,uBAAA,CACA,wBAAA,CACA,0BAAA,CACA,qBAAA,CDoDF,uBChDE,uBAAA,CACA,wBAAA,CACA,0BAAA,CACA,qBAAA,CDiDF,uBC7CE,uBAAA,CACA,wBAAA,CACA,0BAAA,CACA,qBAAA,CD+CF,0BACE,uBAAA,CACA,wBAAA,CACA,uBAAA,CAGF,2BACE,uBAAA,CAGF,yBACE,wBAAA,CAIF,6BC1DE,oBAAA,CACA,4BAAA,CACA,kCAAA,CACA,gCAAA,CACA,qCAAA,CD0DF,+BCtDE,uBAAA,CACA,4BAAA,CACA,kCAAA,CACA,gCAAA,CACA,qCAAA,CDsDF,6BClDE,oBAAA,CACA,4BAAA,CACA,kCAAA,CACA,gCAAA,CACA,qCAAA,CDkDF,0BC9CE,uBAAA,CACA,4BAAA,CACA,6BAAA,CACA,kCAAA,CACA,gCAAA,CACA,qCAAA,CD8CF,qBACE,kCAAA,CACA,aAAA,CACA,iBAAA,CAIF,wBACE,iBAAA,CACA,OAAA,CACA,QAAA,CACA,+BAAA",sourcesContent:["@use '../colors';\n@use './button-util';\n\n.root {\n  position: relative;\n  white-space: nowrap;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: nowrap;\n  border-radius: 4px;\n  font-family: inherit;\n  font-weight: 600;\n  box-sizing: border-box;\n  padding: 0;\n  padding-left: var(--button-left-gutter, var(--button-gutter));\n  padding-right: var(--button-right-gutter, var(--button-gutter));\n  border: 0;\n  outline: 0;\n  text-decoration: none;\n  overflow: hidden;\n  font-size: var(--button-font-size);\n  background: var(--button-background);\n  color: var(--button-color);\n  min-width: var(--button-min-size);\n  height: var(--button-min-size);\n  --button-icon-gutter: 12px;\n  &::-moz-focus-inner {\n    border: 0;\n  }\n  // @todo disabled для ссылок?\n  &:disabled,\n  &.disabled {\n    pointer-events: none;\n    color: var(--button-disabled-color, var(--button-color));\n    background: var(--button-disabled-background, var(--button-background));\n  }\n  &.loading {\n    color: transparent;\n    > :not(.spinner) {\n      opacity: 0;\n      pointer-events: 0;\n    }\n  }\n  &:not(:disabled):hover {\n    cursor: pointer;\n    background: var(--button-hover-background, var(--button-background));\n  }\n  &:not(:disabled):not(.loading):hover {\n    color: var(--button-hover-color, var(--button-color));\n  }\n}\n\n// sizes\n.size-xs {\n  @include button-util.size-xs;\n}\n\n.size-s {\n  @include button-util.size-s;\n}\n\n.size-m {\n  @include button-util.size-m;\n}\n\n// content\n.icon-only {\n  --button-left-gutter: 0;\n  --button-right-gutter: 0;\n  --button-icon-gutter: 0;\n}\n\n.icon-start {\n  --button-left-gutter: 0;\n}\n\n.icon-end {\n  --button-right-gutter: 0;\n}\n\n// view variants\n.view-primary {\n  @include button-util.color-primary;\n}\n\n.view-secondary {\n  @include button-util.color-secondary;\n}\n\n.view-success {\n  @include button-util.color-success;\n}\n\n.view-info {\n  @include button-util.color-info;\n}\n\n// icons\n.icon {\n  margin: 0 var(--button-icon-gutter);\n  flex-shrink: 0;\n  fill: currentColor;\n}\n\n// spinner\n.spinner {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n","@use '../colors';\n\n@mixin size-xs {\n  --button-min-size: 32px;\n  --button-font-size: 14px;\n  --button-line-height: 20px;\n  --button-gutter: 12px;\n}\n\n@mixin size-s {\n  --button-min-size: 40px;\n  --button-font-size: 16px;\n  --button-line-height: 24px;\n  --button-gutter: 20px;\n}\n\n@mixin size-m {\n  --button-min-size: 48px;\n  --button-font-size: 16px;\n  --button-line-height: 24px;\n  --button-gutter: 24px;\n}\n\n@mixin color-primary {\n  --button-color: #fff;\n  --button-background: #{colors.$basic-blue};\n  --button-hover-background: #{colors.$additional-unlit-blue};\n  --button-disabled-color: #{colors.$basic-gray24};\n  --button-disabled-background: #{colors.$basic-gray8};\n}\n\n@mixin color-secondary {\n  --button-color: #{colors.$basic-gray87};\n  --button-background: #{colors.$basic-gray8};\n  --button-hover-background: #{colors.$basic-gray12};\n  --button-disabled-color: #{colors.$basic-gray24};\n  --button-disabled-background: #{colors.$basic-gray8};\n}\n\n@mixin color-success {\n  --button-color: #fff;\n  --button-background: #{colors.$additional-teal};\n  --button-hover-background: #{colors.$additional-dark-teal};\n  --button-disabled-color: #{colors.$basic-gray24};\n  --button-disabled-background: #{colors.$basic-gray8};\n}\n\n@mixin color-info {\n  --button-color: #{colors.$additional-deep-blue};\n  --button-background: #{colors.$additional-sky};\n  --button-hover-color: #{colors.$additional-light-blue};\n  --button-hover-background: #{colors.$additional-sky};\n  --button-disabled-color: #{colors.$basic-gray24};\n  --button-disabled-background: #{colors.$basic-gray8};\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={root:"button-m__root__b1b",disabled:"button-m__disabled__c0a",loading:"button-m__loading__bf6",spinner:"button-m__spinner__ff3","size-xs":"button-m__size-xs__d62","size-s":"button-m__size-s__c85","size-m":"button-m__size-m__c18","icon-only":"button-m__icon-only__bc8","icon-start":"button-m__icon-start__a72","icon-end":"button-m__icon-end__cdb","view-primary":"button-m__view-primary__bb0","view-secondary":"button-m__view-secondary__cc6","view-success":"button-m__view-success__dfd","view-info":"button-m__view-info__ee4",icon:"button-m__icon__ac0"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);