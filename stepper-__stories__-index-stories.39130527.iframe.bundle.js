"use strict";(self.webpackChunk_sima_land_ui_nucleons=self.webpackChunk_sima_land_ui_nucleons||[]).push([[8878],{"./src/stepper/__stories__/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DifferentStates:()=>DifferentStates,Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _sima_land_ui_nucleons_stepper__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/stepper/index.ts"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_storybook_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./.storybook/utils.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"common/Stepper",component:_sima_land_ui_nucleons_stepper__WEBPACK_IMPORTED_MODULE_0__.v,parameters:{storySource:{source:"import { Stepper, StepperProps, StepperSize } from '@sima-land/ui-nucleons/stepper';\nimport { ChangeEvent, useState } from 'react';\nimport { Sandbox } from '../../../.storybook/utils';\n\nexport default {\n  title: 'common/Stepper',\n  component: Stepper,\n  parameters: {\n    layout: 'padded',\n  },\n};\n\nexport function Primary() {\n  const [value, setValue] = useState<string>('0');\n  const number: number = parseInt(value) || 0;\n  const limit = 10;\n\n  const onAdd = () => {\n    setValue(`${number + 1}`);\n  };\n\n  const onSubtract = () => {\n    setValue(`${number - 1}`);\n  };\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const nextValue = event.target.value.replace(/\\D/g, '');\n\n    if (nextValue === '') {\n      setValue('');\n    } else {\n      setValue(`${Math.min(limit, parseInt(nextValue))}`);\n    }\n  };\n\n  return (\n    <>\n      <Stepper\n        value={value}\n        onSubtract={onSubtract}\n        onChange={onChange}\n        onAdd={onAdd}\n        plusDisabled={number >= limit}\n        minusDisabled={number <= 0}\n        buttonClickBehavior='prevent-input-blur'\n      />\n    </>\n  );\n}\n\nPrimary.storyName = 'Простой пример';\n\nexport function DifferentStates() {\n  const [size, setSize] = useState<StepperSize>('s');\n  const [value, setValue] = useState<string>('10');\n  const [state, setState] = useState<string>('default');\n  const [needHideDisabled, setNeedHideDisabled] = useState<boolean>(false);\n  const number: number = parseInt(value) || 0;\n  const limit = 15;\n\n  const onAdd = () => {\n    setValue(`${number + 1}`);\n  };\n\n  const onSubtract = () => {\n    setValue(`${number - 1}`);\n  };\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const nextValue = event.target.value.replace(/\\D/g, '');\n\n    if (nextValue === '') {\n      setValue('');\n    } else {\n      setValue(`${Math.min(limit, parseInt(nextValue))}`);\n    }\n  };\n\n  const bindProps: StepperProps = {\n    value,\n    onSubtract,\n    onChange,\n    onAdd,\n    canAdd: !(needHideDisabled && number >= limit),\n    canSubtract: !(needHideDisabled && number <= 0),\n    plusDisabled: state.includes('disabled') || state.includes('readonly') || number >= limit,\n    minusDisabled: state.includes('disabled') || state.includes('readonly') || number <= 0,\n    buttonClickBehavior: 'prevent-input-blur',\n  };\n\n  const stateProps: StepperProps = {\n    size,\n    disabled: state.includes('disabled'),\n    readOnly: state.includes('readonly'),\n    failed: state.includes('failed'),\n  };\n\n  return (\n    <Sandbox\n      controls={[\n        {\n          type: 'select',\n          label: 'Состояние',\n          bind: [state, setState],\n          options: [\n            { value: 'default', displayName: 'По умолчанию' },\n            { value: 'failed', displayName: 'Ошибка' },\n            { value: 'readonly', displayName: 'Только для чтения' },\n            { value: 'readonly + failed', displayName: 'Только для чтения + ошибка' },\n            { value: 'disabled', displayName: 'Отключено' },\n            { value: 'disabled + failed', displayName: 'Отключено + ошибка' },\n          ],\n        },\n        {\n          type: 'select',\n          label: 'Размер',\n          bind: [size, setSize],\n          options: [\n            { value: 's', displayName: 'S' },\n            { value: 'm', displayName: 'M' },\n          ],\n        },\n        {\n          type: 'toggle',\n          label: 'Скрывать недоступные кнопки',\n          bind: [needHideDisabled, setNeedHideDisabled],\n        },\n      ]}\n    >\n      <Stepper {...stateProps} {...bindProps} />\n    </Sandbox>\n  );\n}\n\nDifferentStates.storyName = 'Различные состояния';\n",locationsMap:{primary:{startLoc:{col:7,line:13},endLoc:{col:1,line:49},startBody:{col:7,line:13},endBody:{col:1,line:49}},"different-states":{startLoc:{col:7,line:53},endLoc:{col:1,line:133},startBody:{col:7,line:53},endBody:{col:1,line:133}}}},layout:"padded"}},Primary=function Primary(){const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("0"),number=parseInt(value)||0;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_stepper__WEBPACK_IMPORTED_MODULE_0__.v,{value,onSubtract:()=>{setValue(""+(number-1))},onChange:event=>{const nextValue=event.target.value.replace(/\D/g,"");setValue(""===nextValue?"":`${Math.min(10,parseInt(nextValue))}`)},onAdd:()=>{setValue(`${number+1}`)},plusDisabled:number>=10,minusDisabled:number<=0,buttonClickBehavior:"prevent-input-blur"})})};Primary.storyName="Простой пример";const DifferentStates=function DifferentStates(){const[size,setSize]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("s"),[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("10"),[state,setState]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("default"),[needHideDisabled,setNeedHideDisabled]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),number=parseInt(value)||0,bindProps={value,onSubtract:()=>{setValue(""+(number-1))},onChange:event=>{const nextValue=event.target.value.replace(/\D/g,"");setValue(""===nextValue?"":`${Math.min(15,parseInt(nextValue))}`)},onAdd:()=>{setValue(`${number+1}`)},canAdd:!(needHideDisabled&&number>=15),canSubtract:!(needHideDisabled&&number<=0),plusDisabled:state.includes("disabled")||state.includes("readonly")||number>=15,minusDisabled:state.includes("disabled")||state.includes("readonly")||number<=0,buttonClickBehavior:"prevent-input-blur"},stateProps={size,disabled:state.includes("disabled"),readOnly:state.includes("readonly"),failed:state.includes("failed")};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_storybook_utils__WEBPACK_IMPORTED_MODULE_2__.pv,{controls:[{type:"select",label:"Состояние",bind:[state,setState],options:[{value:"default",displayName:"По умолчанию"},{value:"failed",displayName:"Ошибка"},{value:"readonly",displayName:"Только для чтения"},{value:"readonly + failed",displayName:"Только для чтения + ошибка"},{value:"disabled",displayName:"Отключено"},{value:"disabled + failed",displayName:"Отключено + ошибка"}]},{type:"select",label:"Размер",bind:[size,setSize],options:[{value:"s",displayName:"S"},{value:"m",displayName:"M"}]},{type:"toggle",label:"Скрывать недоступные кнопки",bind:[needHideDisabled,setNeedHideDisabled]}],children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_sima_land_ui_nucleons_stepper__WEBPACK_IMPORTED_MODULE_0__.v,{...stateProps,...bindProps})})};DifferentStates.storyName="Различные состояния",Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"function Primary() {\n  const [value, setValue] = useState<string>('0');\n  const number: number = parseInt(value) || 0;\n  const limit = 10;\n  const onAdd = () => {\n    setValue(`${number + 1}`);\n  };\n  const onSubtract = () => {\n    setValue(`${number - 1}`);\n  };\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const nextValue = event.target.value.replace(/\\D/g, '');\n    if (nextValue === '') {\n      setValue('');\n    } else {\n      setValue(`${Math.min(limit, parseInt(nextValue))}`);\n    }\n  };\n  return <>\n      <Stepper value={value} onSubtract={onSubtract} onChange={onChange} onAdd={onAdd} plusDisabled={number >= limit} minusDisabled={number <= 0} buttonClickBehavior='prevent-input-blur' />\n    </>;\n}",...Primary.parameters?.docs?.source}}},DifferentStates.parameters={...DifferentStates.parameters,docs:{...DifferentStates.parameters?.docs,source:{originalSource:"function DifferentStates() {\n  const [size, setSize] = useState<StepperSize>('s');\n  const [value, setValue] = useState<string>('10');\n  const [state, setState] = useState<string>('default');\n  const [needHideDisabled, setNeedHideDisabled] = useState<boolean>(false);\n  const number: number = parseInt(value) || 0;\n  const limit = 15;\n  const onAdd = () => {\n    setValue(`${number + 1}`);\n  };\n  const onSubtract = () => {\n    setValue(`${number - 1}`);\n  };\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const nextValue = event.target.value.replace(/\\D/g, '');\n    if (nextValue === '') {\n      setValue('');\n    } else {\n      setValue(`${Math.min(limit, parseInt(nextValue))}`);\n    }\n  };\n  const bindProps: StepperProps = {\n    value,\n    onSubtract,\n    onChange,\n    onAdd,\n    canAdd: !(needHideDisabled && number >= limit),\n    canSubtract: !(needHideDisabled && number <= 0),\n    plusDisabled: state.includes('disabled') || state.includes('readonly') || number >= limit,\n    minusDisabled: state.includes('disabled') || state.includes('readonly') || number <= 0,\n    buttonClickBehavior: 'prevent-input-blur'\n  };\n  const stateProps: StepperProps = {\n    size,\n    disabled: state.includes('disabled'),\n    readOnly: state.includes('readonly'),\n    failed: state.includes('failed')\n  };\n  return <Sandbox controls={[{\n    type: 'select',\n    label: 'Состояние',\n    bind: [state, setState],\n    options: [{\n      value: 'default',\n      displayName: 'По умолчанию'\n    }, {\n      value: 'failed',\n      displayName: 'Ошибка'\n    }, {\n      value: 'readonly',\n      displayName: 'Только для чтения'\n    }, {\n      value: 'readonly + failed',\n      displayName: 'Только для чтения + ошибка'\n    }, {\n      value: 'disabled',\n      displayName: 'Отключено'\n    }, {\n      value: 'disabled + failed',\n      displayName: 'Отключено + ошибка'\n    }]\n  }, {\n    type: 'select',\n    label: 'Размер',\n    bind: [size, setSize],\n    options: [{\n      value: 's',\n      displayName: 'S'\n    }, {\n      value: 'm',\n      displayName: 'M'\n    }]\n  }, {\n    type: 'toggle',\n    label: 'Скрывать недоступные кнопки',\n    bind: [needHideDisabled, setNeedHideDisabled]\n  }]}>\n      <Stepper {...stateProps} {...bindProps} />\n    </Sandbox>;\n}",...DifferentStates.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","DifferentStates"]}}]);